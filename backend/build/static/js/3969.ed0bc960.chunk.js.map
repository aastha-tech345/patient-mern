{"version":3,"file":"static/js/3969.ed0bc960.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","views/publicItems/ SpinnerOverlay.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { postFetchData } from 'src/api/Api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst Login = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const REGISTER_URL = `${API_URL}/register`\n  const navigate = useNavigate()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const date = new Date().getFullYear()\n\n  const handleSubmit = async (e) => {\n    try {\n      setLoading(true)\n      e.preventDefault()\n      const dataa = await postFetchData(`${API_URL}/api/user/login`, data)\n      if (dataa.success === true) {\n        toast.success('Login successfully')\n        localStorage.setItem('token', dataa.token)\n        localStorage.setItem('patientRecord', JSON.stringify(dataa?.user))\n        window.location.reload()\n        setLoading(false)\n      }\n\n      if (dataa?.response?.data?.success === false) {\n        setLoading(false)\n        toast.warning('Invalid Credentials')\n      }\n    } catch (error) {\n      setLoading(false)\n      toast.warning('Something went wrong')\n      console.log(error)\n    }\n  }\n\n  const nevigateToRegister = () => {\n    navigate('/register')\n  }\n\n  return (\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <div className=\"bg-light d-flex flex-row align-items-center\" style={{ flex: 1 }}>\n        {loading ? <SpinnerOverlay message=\"Logging..\" /> : ''}\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={5}>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm onSubmit={handleSubmit}>\n                      <h2>Login</h2>\n                      <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          value={data.email}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\"\n                          name=\"password\"\n                          value={data.password}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={12} style={{ textAlign: 'center' }}>\n                          <CButton color=\"primary\" className=\"px-5\" type=\"submit\">\n                            Login\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n      {/* <footer className=\"bg-dark text-light py-2 text-center\">\n        &copy; 2024 DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer> */}\n      <ToastContainer />\n      <footer className=\"bg-light py-2 text-left\" style={{ paddingLeft: '1rem' }}>\n        Copyright &copy; {date} DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Login\n","// SpinnerOverlay.js\nimport React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst SpinnerOverlay = (loading) => {\n  const message = loading.message\n  return (\n    <div style={overlayStyle(loading)}>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <BarLoader loading={loading} color=\"#36D7B7\" />\n        {message ? <p style={{ margin: 'auto' }}>{message}</p> : ''}\n      </div>\n    </div>\n  )\n}\n\nconst overlayStyle = (loading) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  display: loading ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 9999,\n})\n\nexport default SpinnerOverlay\n"],"names":["Login","API_URL","process","concat","useNavigate","data","setData","useState","email","password","loading","setLoading","handleChange","e","name","value","target","date","Date","getFullYear","_jsxs","style","minHeight","display","flexDirection","children","className","flex","_jsx","SpinnerOverlay","message","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","async","_dataa$response","_dataa$response$data","preventDefault","dataa","postFetchData","success","toast","localStorage","setItem","token","JSON","stringify","user","window","location","reload","response","warning","error","console","log","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","onChange","cilLockLocked","type","xs","textAlign","CButton","color","ToastContainer","paddingLeft","overlayStyle","position","top","left","width","height","backgroundColor","justifyContent","alignItems","zIndex","BarLoader","margin"],"sourceRoot":""}