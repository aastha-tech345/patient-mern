{"version":3,"file":"static/js/7196.e46d9b4a.chunk.js","mappings":"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","sources":["views/pages/report/ReportModal.js","views/pages/report/PatientReport.js","views/pages/patient/doctorsCalendar.jsx","views/pages/patient/DoctorChangePassword.jsx","routes.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js","views/pages/loader/Loader.jsx","views/pages/login/Login.js","views/publicItems/ SpinnerOverlay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowCircleRight, cilDataTransferDown } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst ReportModal = ({ setHide, popupData }) => {\n  console.log('fromMOdal', popupData)\n  let diagnosis = popupData?.diagnosis\n  let url = process.env.REACT_APP_API_URL\n\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [selectedFile, setSelectedFile] = useState(Array(diagnosis?.length).fill(''))\n  const [loading, setLoading] = useState(false)\n\n  const isFile = (value) => {\n    const regex = /^\\d{13}_/\n\n    if (regex.test(value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const showReportHandler = async (filename, index) => {\n    try {\n      setLoading(true)\n      // Fetch the image data from the server\n      const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n        responseType: 'blob', // Treat response data as blob\n      })\n\n      // Create a Blob object from the response data\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n      // Generate a URL for the Blob\n      const blobUrl = URL.createObjectURL(blob)\n\n      // Open the URL in a new tab\n      window.open(blobUrl)\n    } catch (error) {\n      console.error('Error fetching image:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n\n  const handleFileSelect = (e, index) => {\n    const { value } = e.target\n    const updatedSelectedFile = [...selectedFile]\n    updatedSelectedFile[index] = value\n    setSelectedFile(updatedSelectedFile)\n  }\n  const editNameFun = (name) => {\n    if (name) {\n      const fileName = name\n      const parts = fileName.split('_')\n      // Check if the file name contains underscores\n      if (parts.length > 1) {\n        // Exclude the first part of the file name and join the rest with underscores\n        const editedFileName = parts.slice(1).join('_')\n        const actualFileName = editedFileName.split('.')[0]\n        return actualFileName\n      } else {\n        // If there are no underscores or only one part, return the original file name\n        return fileName\n      }\n    } else {\n      // If the file name is undefined, return an empty string\n      return ''\n    }\n  }\n\n  const [hoveredFile, setHoveredFile] = useState(null)\n\n  const handleMouseEnter = (fileName) => {\n    const fileNamee = editNameFun(fileName)\n    setHoveredFile(fileNamee)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredFile(null)\n  }\n\n  return (\n    <>\n      <div\n        className=\"modal modal-lg\"\n        tabIndex={-1}\n        style={{\n          display: 'block',\n          backgroundColor: 'rgba(0,0,0,0.8)',\n          maxHeight: '100%',\n          color: 'black',\n        }}\n      >\n        <div\n          className=\"modal-dialog\"\n          // style={{ height: '30rem', width: '60rem', minWidth: '70rem' }}\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <div>\n                <h5 className=\"modal-title\">Diagnosis Details</h5>\n                <p style={{ fontSize: '14px' }}>\n                  <span style={{ fontWeight: 'bolder' }}>CR no.</span> {popupData?.crn}{' '}\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span style={{ fontWeight: 'bolder' }}>Name : </span>\n                  {popupData?.name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => setHide(false)}\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              <div\n                style={{\n                  maxHeight: '300px',\n                  overflowY: 'scroll',\n                  overflowX: 'hidden',\n                  marginTop: '20px',\n                  padding: '0',\n                }}\n              >\n                {reversedDiagnosis?.map((elem, index) => {\n                  const date = elem?.date\n\n                  const datee = new Date(date)\n\n                  const options = {\n                    year: 'numeric',\n                    month: '2-digit',\n                    day: '2-digit',\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    // second: '2-digit',\n                    hour12: true, // Set to true if you want 12-hour format with AM/PM\n                  }\n                  const formattedDate = datee\n                    .toLocaleDateString('en-IN', options)\n                    .replace(/\\//g, '/')\n                  return (\n                    <>\n                      <div key={index}>\n                        <div\n                          className=\"row\"\n                          style={{ overflowX: 'auto' }}\n                          // style={{ overflow: 'scroll !important', background: 'white' }}\n                        >\n                          <div style={{ overflow: 'auto !important', margin: '0' }}>\n                            <h6>Diagnose Date : {formattedDate}</h6>\n                            <div className=\"table-responsive\">\n                              <table\n                                className=\"table\"\n                                style={{\n                                  border: '1px solid',\n                                  fontFamily: 'ui-rounded',\n                                  borderRadius: '10px',\n                                }}\n                              >\n                                <colgroup>\n                                  <col style={{ width: '20%' }} />\n                                  <col style={{ width: '20%' }} />\n                                  <col style={{ width: '20%' }} />\n                                  <col style={{ width: '20%' }} />\n                                  <col style={{ width: '20%' }} />\n                                </colgroup>\n                                <thead>\n                                  <tr>\n                                    <th\n                                      scope=\"col\"\n                                      className=\"tableTitle\"\n                                      style={{ background: '#FBF295' }}\n                                    >\n                                      Problems\n                                    </th>\n                                    <th\n                                      scope=\"col\"\n                                      className=\"tableTitle\"\n                                      style={{ background: '#FBF295' }}\n                                    >\n                                      Test\n                                    </th>\n                                    <th\n                                      scope=\"col\"\n                                      className=\"tableTitle\"\n                                      style={{ background: '#FBF295' }}\n                                    >\n                                      Test value\n                                    </th>\n                                    <th\n                                      scope=\"col\"\n                                      className=\"tableTitle\"\n                                      style={{ background: '#FBF295' }}\n                                    >\n                                      Scale\n                                    </th>\n                                    <th\n                                      scope=\"col\"\n                                      className=\"tableTitle\"\n                                      style={{ background: '#FBF295' }}\n                                    >\n                                      Scale value\n                                    </th>\n                                  </tr>\n                                </thead>\n                                {elem?.diagnosData?.map((element, innerIndex) => {\n                                  const { problem, scale, test, testInput, files, value } = element\n                                  // console.log('Guarav', element)\n                                  return (\n                                    <tbody key={innerIndex}>\n                                      {loading && <SpinnerOverlay message=\"Opening File\" />}\n                                      <tr>\n                                        <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                                          {problem}\n                                        </td>\n                                        <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                                          {test === '' ? '-' : test}\n                                        </td>\n                                        <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                                          {testInput ? (\n                                            testInput\n                                          ) : (\n                                            <div style={{ display: 'flex' }}>\n                                              {files?.map((file, fileIndex) => (\n                                                <div\n                                                  key={fileIndex}\n                                                  value={file.fileName}\n                                                  style={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    marginRight: '10px',\n                                                  }}\n                                                  onMouseEnter={() =>\n                                                    handleMouseEnter(file.fileName)\n                                                  }\n                                                  onMouseLeave={() => handleMouseLeave()}\n                                                  onClick={() =>\n                                                    showReportHandler(file?.fileName, fileIndex)\n                                                  }\n                                                >\n                                                  <button\n                                                    type=\"button\"\n                                                    className=\"btn btn-sm btn-primary\" // Decreased size and changed color to blue\n                                                    data-toggle=\"popover\"\n                                                    title={hoveredFile}\n                                                    style={{ margin: '0' }}\n                                                  >\n                                                    <CIcon icon={cilDataTransferDown} />\n                                                  </button>\n                                                </div>\n                                              ))}\n                                            </div>\n                                          )}\n                                        </td>\n                                        {console.log('Guarav', testInput)}\n                                        <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                                          {scale === '' ? '-' : scale}\n                                        </td>\n                                        <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                                          {value === '' ? '-' : value}\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  )\n                                })}\n                              </table>\n                            </div>\n                            <div className=\"row\" style={{ width: '80%' }}>\n                              <div style={{ margin: '5px auto 1rem 1rem' }}>\n                                <div className=\"row\">\n                                  <div className=\"col-md-2 d-flex align-items-center\">\n                                    <h5>Notes:</h5>\n                                  </div>\n                                  <div className=\"col-md-10 d-flex align-items-center\">\n                                    <div className=\"card\" style={{ padding: '1rem 2rem' }}>\n                                      <p style={{ margin: '0' }}>\n                                        {elem.desc === '' ? '-' : elem.desc}\n                                      </p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <hr style={{ width: '100%' }} />\n                      </div>\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n                onClick={() => setHide(false)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nReportModal.propTypes = {\n  setHide: PropTypes.func.isRequired,\n  popupData: PropTypes.func.isRequired,\n}\n\nexport default ReportModal\n","import React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchData } from 'src/api/Api'\nimport { Divider, Radio, Table } from 'antd'\nimport { useNavigate } from 'react-router-dom'\nimport { Pagination, Stack } from '@mui/material'\n\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport dayjs from 'dayjs'\nimport { DateTimePicker } from '@mui/x-date-pickers'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport Loader from '../loader/Loader'\nimport ReportModal from './ReportModal'\nimport Select from 'react-select'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst PatientReport = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [loading, setLoading] = useState(false)\n\n  const navigate = useNavigate()\n  const [hide, setHide] = useState(false)\n  const [popupData, setPopuoData] = useState({})\n  const [updateState, setUpdateState] = useState(false)\n  const [problemSet, setProblemSet] = useState('')\n  const [pageCount, setPageCount] = useState(1)\n  const [page, setPage] = useState(1)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [patientProblems, setPatientProblems] = useState([])\n  const [selectDropdownValue, setSelectDropdownValue] = useState('')\n  const colorPalette = ['#41B883', '#E46651', '#00D8FF', '#DD1B16', '#8A2BE2', '#FFA500', '#32CD32']\n\n  const fetchProblems = async () => {\n    try {\n      setLoading(true)\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map((test) => test.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n\n        const options = problemFilter.map((problem) => ({\n          value: problem,\n          label: problem,\n        }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(options)\n        setSelectDropdownValue(options)\n        setProblemSet(\n          options.map((el) => {\n            return el.value\n          }),\n        )\n        setLoading(false)\n      }\n    } catch (error) {\n      setLoading(false)\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handlSetPoblem = (elem) => {\n    // if (elem.length < 8) {\n    setSelectDropdownValue(elem)\n    setProblemSet(\n      elem.map((el) => {\n        return el.value\n      }),\n    )\n    // }\n    // else {\n    //   toast.warning('You can only select chief complaints upto 7 ')\n    // }\n  }\n\n  // const getPatientByProblem = async () => {\n  //   try {\n  //     console.log('ashish', problemSet)\n  //     if (problemSet?.length === 0) {\n  //       return\n  //     }\n  //     const res = await getFetch(\n  //       `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&page=${page}`,\n  //     )\n  //     console.log('response', res)\n  //     setPageCount(res?.data?.pageCount)\n  //     setPatientProblems(res.data.data)\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  const columns = [\n    {\n      title: 'CR no',\n      dataIndex: 'crn',\n    },\n    // {\n    //   title: 'Phone no',\n    //   dataIndex: 'phone',\n    //   render: (text) => <a>{text}</a>,\n    // },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      // render: (text) => <p>{text}</p>,\n      // sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Sex',\n      dataIndex: 'sex',\n      sorter: (a, b) => a.sex.localeCompare(b.sex),\n    },\n    {\n      title: 'Action',\n      render: (text) => {\n        console.log('text', text)\n        return (\n          <button className=\"btn btn-primary\" onClick={() => handleOpenMOdal(text)}>\n            View Diagnosis\n          </button>\n        )\n      },\n    },\n    {\n      title: 'Action',\n\n      render: (text) => {\n        console.log('text', text)\n        return (\n          <button\n            className=\"btn btn-primary\"\n            onClick={(e) => navigate('/patientPage', { state: text })}\n          >\n            Show Details\n          </button>\n        )\n      },\n    },\n  ]\n  const todayDate = dayjs()\n  const [startingDate, setStartingDate] = useState(dayjs().subtract(7, 'day'))\n  const [endDate, setEndDate] = useState(todayDate)\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n\n  const handleStartingDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('Stating date not be in the future')\n      return setStartingDate(todayDate)\n    }\n    setStartingDate(date)\n  }\n  const handleEndDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('End date not be in the future')\n      return setEndDate(todayDate)\n    }\n    setEndDate(date)\n  }\n\n  const dateSubmit = async () => {\n    if (problemSet === '') {\n      return toast.warning('Please select any one Chief Complaint')\n    }\n    if (endDate.isBefore(startingDate, 'day')) {\n      toast.warning('End date cannot be earlier than start date')\n      return\n    }\n    setLoading(true)\n    const date = new Date(startingDate)\n    const date1 = new Date(endDate)\n\n    console.log(`Report Start ${date} and Report End ${date1}`)\n    ////////////FOR SINGLE PROBLEM FIND PATIENTS////////////////////\n    // const res = await getFetch(\n    //   `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&startDate=${date}&endDate=${date1}&page=${page}`,\n    // )\n\n    // console.log('ashdata', res)\n\n    // working perfectly\n\n    //////////////////////////////////////////////\n    console.log('selected problems', problemSet)\n    const data = {\n      problems: problemSet,\n    }\n\n    const res = await postFetchData(\n      `${API_URL}/api/patient/multipleProblems?problem=${problemSet}&doctor_id=${patientRecord._id}&startDate=${date}&endDate=${date1}&page=${page}`,\n      data,\n    )\n\n    setPageCount(res?.data?.pageCount)\n    setPatientProblems(res?.data)\n\n    const problemCounts = {}\n\n    console.log('response', res)\n\n    res?.data?.forEach((patient) => {\n      const patientProblemSet = new Set()\n      patient?.diagnosis?.forEach((element) => {\n        element?.diagnosData?.forEach((diagnosis) => {\n          const problem = diagnosis.problem\n\n          if (problemSet.includes(problem) && !patientProblemSet.has(problem)) {\n            problemCounts[problem] = (problemCounts[problem] || 0) + 1\n            patientProblemSet.add(problem)\n          }\n        })\n      })\n    })\n    let maleCount = 0\n    let femaleCount = 0\n    let otherCount = 0\n    res?.data?.forEach((patient) => {\n      if (patient.sex === 'male') {\n        maleCount = maleCount + 1\n      } else if (patient.sex === 'female') {\n        femaleCount = femaleCount + 1\n      } else {\n        otherCount = otherCount + 1\n      }\n    })\n    setFilterDataBySex({\n      male: maleCount,\n      female: femaleCount,\n      other: otherCount,\n    })\n    console.log('Count male female', filterDataBySex)\n\n    setTest(problemCounts)\n    setLoading(false)\n  }\n\n  const [test, setTest] = useState('')\n  console.log('Test', test)\n  const [filterDataBySex, setFilterDataBySex] = useState({\n    male: 0,\n    female: 0,\n    other: 0,\n  })\n  console.log('filterDataBySex', filterDataBySex)\n\n  const dateReset = () => {\n    setStartingDate(todayDate)\n    setEndDate(todayDate)\n    setUpdateState(!updateState)\n    setProblemSet('Select Problem')\n    setSelectDropdownValue('')\n  }\n\n  const handleOpenMOdal = (text) => {\n    setHide(true)\n    console.log('datafromdiagbutton', text)\n    setPopuoData(text)\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchProblems()\n\n      if (problemSet.length) {\n        dateSubmit()\n      }\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    if (problemSet.length) {\n      dateSubmit()\n    }\n  }, [problemSet, page, updateState])\n\n  const handleDropdownChange = (selectedOptions) => {\n    if (!selectedOptions || selectedOptions.length === 0) {\n      dateReset()\n    } else {\n      handlSetPoblem(selectedOptions)\n    }\n  }\n\n  return (\n    <div className=\"mb-3\">\n      {hide ? <ReportModal setHide={setHide} popupData={popupData} /> : ''}\n      {loading ? <SpinnerOverlay message=\"Loading\" /> : ''}\n      <div className=\"row\">\n        <div className=\"col-sm-3 mt-2\">\n          {/* <select\n              onChange={(e) => handlSetPoblem(e.target.value)}\n              className=\"form-control\"\n              style={{ appearance: 'auto', height: '50px', width: '100%' }}\n              value={problemSet}\n              multiple\n            >\n              <option>Chief Complaint</option>\n              {problems.map((elem) => {\n                return (\n                  <>\n                    <option key={elem} value={elem}>\n                      {elem}\n                    </option>\n                  </>\n                )\n              })}\n            </select> */}\n          <Select\n            options={problems}\n            isMulti\n            value={selectDropdownValue}\n            // onChange={(e) => handlSetPoblem(e)}\n            onChange={handleDropdownChange}\n            placeholder=\"Select Chief Complaint\"\n            maxMenuHeight={300}\n            styles={{\n              // Custom styles for the container of the selected value\n              singleValue: (provided, state) => ({\n                ...provided,\n                height: '30px', // Set the height as needed\n                lineHeight: '30px', // Align the text vertically\n              }),\n            }}\n          />\n        </div>\n\n        <div className=\"col-sm-9\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"From\"\n                      value={startingDate}\n                      onChange={handleStartingDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // sx={{ width: '100px' }}\n                      // className=\"w-50\"\n                      // className=\"w-auto\"\n                      style={{ overflowX: 'hidden !important' }}\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"To\"\n                      value={endDate}\n                      onChange={handleEndDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // className=\"w-50\"\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n          </div>\n          <div style={{ textAlign: '-webkit-right', paddingRight: '101px' }}>\n            <div className=\"col-sm-2 d-flex  mb-3\">\n              <button className=\"btn btn-primary mt-3 me-2\" onClick={dateSubmit}>\n                Search\n              </button>\n              <button className=\"btn btn-primary mt-3 \" onClick={() => dateReset()}>\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-2 table-responsive\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <Table\n              columns={columns}\n              dataSource={patientProblems}\n              pagination={false}\n              className=\"table-responsive\"\n            />\n          </>\n        )}\n      </div>\n      <div className=\"d-flex justify-content-end mt-2\">\n        <Stack spacing={2}>\n          <Pagination count={pageCount} page={page} onChange={handlePageChange} />\n        </Stack>\n      </div>\n      {Object.keys(test).length > 0 ? (\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <CChart\n              type=\"pie\"\n              data={{\n                labels: Object.keys(test),\n                datasets: [\n                  {\n                    backgroundColor: colorPalette.slice(0, Object.keys(test).length), // Assign colors from the palette\n                    data: Object.values(test),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    labels: {\n                      // color: getStyle('--cui-body-color'),\n                    },\n                  },\n                },\n              }}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <CChart\n              type=\"doughnut\"\n              data={{\n                labels: ['male', 'female', 'others'],\n                datasets: [\n                  {\n                    label: 'Patinets by sex',\n                    backgroundColor: colorPalette.slice(0, 3), // Assign colors from the palette\n                    data: [filterDataBySex.male, filterDataBySex.female, filterDataBySex.other],\n                  },\n                ],\n              }}\n            />\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default PatientReport\n","import React, { useState, useEffect } from 'react'\nimport { Calendar, globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\nimport { getFetch } from 'src/api/Api'\nimport PropTypes from 'prop-types'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import EventComponent from 'src/components/EventComponent'\nimport { useNavigate } from 'react-router-dom'\n\nconst localizer = globalizeLocalizer(globalize)\n\nconst DoctorsCalendar = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const [visibleRange, setVisibleRange] = useState({ start: new Date(), end: new Date() })\n  const [appointments, setAppointments] = useState('')\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const handleNavigate = (date, view) => {\n    let start, end\n\n    if (view === 'month') {\n      start = new Date(date.getFullYear(), date.getMonth(), 1)\n      end = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n    } else if (view === 'week') {\n      const firstDayOfWeek = date.getDate() - date.getDay()\n      start = new Date(date.getFullYear(), date.getMonth(), firstDayOfWeek)\n      const lastDayOfWeek = firstDayOfWeek + 6\n      end = new Date(date.getFullYear(), date.getMonth(), lastDayOfWeek)\n    } else {\n      start = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n      end = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n    }\n\n    setVisibleRange({ start, end })\n  }\n\n  const handleViewChange = (view) => {\n    const currentDate = new Date()\n    handleNavigate(currentDate, view)\n  }\n\n  const dateSubmit = async (e) => {\n    try {\n      setLoading(true)\n      const res = await getFetch(\n        `${API_URL}/api/patient/nextAppointmentDate?startDate=${visibleRange.start}&endDate=${\n          visibleRange.end\n        }&resultPerPage=${1000}`,\n      )\n      if (res?.status === 200) {\n        setAppointments(res?.data?.data)\n        setLoading(false)\n      } else {\n        console.log('No patient appointment found')\n        setLoading(false)\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const currentDate = new Date()\n    const start = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\n    const end = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0)\n    setVisibleRange({ start: start, end: end })\n  }, [])\n\n  useEffect(() => {\n    dateSubmit()\n  }, [visibleRange])\n\n  useEffect(() => {\n    console.log(appointments)\n  }, [appointments])\n\n  const events =\n    appointments && Array.isArray(appointments)\n      ? appointments.map((appointment) => ({\n          title: `${appointment.name}'s Appointment`,\n          start: new Date(appointment.nextApointmentDate),\n          end: new Date(appointment.nextApointmentDate),\n          appointmentData: appointment,\n        }))\n      : []\n  const eventFormats = {\n    eventTimeRangeFormat: () => null, // Hides event times\n  }\n\n  // const handleEventClick = (data) => {\n  //   const crn = data?.appointmentData.crn\n  //   console.log('CRN', crn)\n  //   navigate(`/patientPage?crn=${crn}`, { state: data?.appointmentData })\n  // }\n  const handleEventClick = (data) => {\n    const crn = data?.appointmentData.crn\n    const url = `/patientPage?crn=${crn}`\n    window.open(url, '_blank')\n  }\n  return (\n    <div style={{ height: '85vh' }}>\n      {loading && <SpinnerOverlay message=\"Loading Calendar\" />}\n      <Calendar\n        localizer={localizer}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        // style={{ height: 500 }}\n        date={visibleRange.start}\n        onNavigate={handleNavigate}\n        onView={handleViewChange}\n        events={events}\n        formats={eventFormats}\n        defaultView=\"week\"\n        onSelectEvent={handleEventClick}\n        // tooltipAccessor={(event) => event.title}\n      />\n    </div>\n  )\n}\n\nexport default DoctorsCalendar\n","import { cilLockLocked, cilUser } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport React, { useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { putFetchData } from 'src/api/Api'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport { useNavigate } from 'react-router-dom'\n\nconst DoctorChangePassword = () => {\n  const navigate = useNavigate()\n  const API_URL = process.env.REACT_APP_API_URL\n  const [loading, setLoading] = useState(false)\n\n  const [data, setData] = useState({\n    password: '',\n    reEnterPassword: '',\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    try {\n      if (data.password.length < 4) {\n        toast.warning('Password length should be atleast 4 digits!!')\n        return\n      }\n      setLoading(true)\n\n      const res = await putFetchData(`${API_URL}/api/user/update`, data)\n      if (res?.data.success) {\n        localStorage.removeItem('token')\n        localStorage.removeItem('patientRecord')\n        toast.success(res?.data?.message, { autoClose: 1000 })\n        setTimeout(() => {\n          navigate('/login')\n          window.location.reload()\n          setLoading(false)\n        }, 1000)\n      } else {\n        setLoading(false)\n        toast.warning(res?.data?.message, { autoClose: 1000 })\n      }\n      console.log('res', res)\n    } catch (error) {\n      setLoading(false)\n      console.log(error)\n    }\n    // if (data.password === data.reEnterPassword) {\n    //   console.log('Yahh yahh yahhh')\n    // } else {\n    //   toast.warning('Password and Re-enter password in not matched', { autoClose: 1000 })\n    //   console.log('nooooooooooooo')\n    // }\n  }\n\n  console.log('Guarva', data)\n\n  return (\n    <div style={{ minHeight: '85vh', display: 'flex', flexDirection: 'column' }}>\n      <div className=\"bg-light d-flex flex-row align-items-center\" style={{ flex: 1 }}>\n        {loading ? <SpinnerOverlay message=\"Changing Password....\" /> : ''}\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={5}>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm>\n                      <h3>Change Password</h3>\n                      <p className=\"text-medium-emphasis\">Please enter the new password !</p>\n                      {/* <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          //   value={data.email}\n                          //   onChange={handleChange}\n                        />\n                      </CInputGroup> */}\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"text\"\n                          placeholder=\"New password\"\n                          //   autoComplete=\"current-password\"\n                          name=\"password\"\n                          value={data.password}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Re-enter password\"\n                          //   autoComplete=\"current-password\"\n                          name=\"reEnterPassword\"\n                          value={data.reEnterPassword}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={12} style={{ textAlign: 'center' }}>\n                          <CButton\n                            color=\"primary\"\n                            className=\"px-5\"\n                            type=\"submit\"\n                            onClick={(e) => submitHandler(e)}\n                          >\n                            Submit\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n      {/* <footer className=\"bg-dark text-light py-2 text-center\">\n    &copy; 2024 DevLogix Technology Pvt. Ltd. All rights reserved.\n  </footer> */}\n      <ToastContainer />\n      {/* <footer className=\"bg-light py-2 text-left\" style={{ paddingLeft: '1rem' }}>\n        Copyright &copy; {date} DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer> */}\n    </div>\n  )\n}\n\nexport default DoctorChangePassword\n","import React from 'react'\n// import PatientContainer from './views/pages/patient/PatientContainer'\nimport Login from './views/pages/login/Login'\nimport Report from './views/pages/report/PatientReport'\nimport PatientReport from './views/pages/report/PatientReport'\nimport DoctorsCalendar from './views/pages/patient/doctorsCalendar'\nimport DoctorChangePassword from './views/pages/patient/DoctorChangePassword'\n// import { DoctorsCalendar } from './views/pages/patient/doctorsCalendar'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\nconst PatientPage = React.lazy(() => import('./views/pages/patient/PatientPage'))\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n// patientPage\nconst auth = localStorage.getItem('token')\nlet routes\nif (auth) {\n  routes = [\n    { path: '/', exact: true, name: 'Home' },\n\n    { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n    { path: '/patientPage', name: 'Patient', element: PatientPage },\n    { path: '/report', name: 'Report', element: PatientReport },\n    { path: '/calendar', name: 'Calendar', element: DoctorsCalendar },\n    { path: '/changePassword', name: 'Change Password', element: DoctorChangePassword },\n\n    { path: '/theme', name: 'Theme', element: Colors, exact: true },\n    { path: '/theme/colors', name: 'Colors', element: Colors },\n    { path: '/theme/typography', name: 'Typography', element: Typography },\n    { path: '/base', name: 'Base', element: Cards, exact: true },\n    { path: '/base/accordion', name: 'Accordion', element: Accordion },\n    { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n    { path: '/base/cards', name: 'Cards', element: Cards },\n    { path: '/base/carousels', name: 'Carousel', element: Carousels },\n    { path: '/base/collapses', name: 'Collapse', element: Collapses },\n    { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n    { path: '/base/navs', name: 'Navs', element: Navs },\n    { path: '/base/paginations', name: 'Paginations', element: Paginations },\n    { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n    { path: '/base/popovers', name: 'Popovers', element: Popovers },\n    { path: '/base/progress', name: 'Progress', element: Progress },\n    { path: '/base/spinners', name: 'Spinners', element: Spinners },\n    { path: '/base/tables', name: 'Tables', element: Tables },\n    { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n    { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n    { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n    { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n    { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n    { path: '/charts', name: 'Charts', element: Charts },\n    { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n    { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n    { path: '/forms/select', name: 'Select', element: Select },\n    { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n    { path: '/forms/range', name: 'Range', element: Range },\n    { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n    { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n    { path: '/forms/layout', name: 'Layout', element: Layout },\n    { path: '/forms/validation', name: 'Validation', element: Validation },\n    { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n    { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n    { path: '/icons/flags', name: 'Flags', element: Flags },\n    { path: '/icons/brands', name: 'Brands', element: Brands },\n    { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n    { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n    { path: '/notifications/badges', name: 'Badges', element: Badges },\n    { path: '/notifications/modals', name: 'Modals', element: Modals },\n    { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n    { path: '/widgets', name: 'Widgets', element: Widgets },\n  ]\n} else {\n  routes = [\n    {\n      path: '/login',\n      element: Login,\n    },\n  ]\n}\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar12 from './../../assets/images/avatars/12.jpg'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const logoutHandler = () => {\n    // console.log('logot')\n    localStorage.removeItem('token')\n    localStorage.removeItem('patientRecord')\n  }\n  const changePasswordHandler = (e) => {\n    e.preventDefault()\n    navigate('/changePassword')\n    console.log('Working change password')\n  }\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar12} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        <CDropdownItem onClick={(e) => changePasswordHandler(e)} href=\"/\">\n          <CIcon className=\"me-2\" />\n          Change Password\n        </CDropdownItem>\n        <CDropdownItem onClick={() => logoutHandler()} href=\"/\">\n          <CIcon className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-3\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand> */}\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <h4>Patient Care</h4>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      {/* <CHeaderDivider /> */}\n      {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n  },\n  {\n    component: CNavItem,\n    name: 'Patients',\n    to: '/patientPage',\n  },\n  {\n    component: CNavItem,\n    name: 'Report',\n    to: '/report',\n  },\n  {\n    component: CNavItem,\n    name: 'My Schedule',\n    to: '/calendar',\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Login',\n  //   to: '/login',\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Theme',\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Docs',\n  //   href: 'https://coreui.io/react/docs/templates/installation/',\n  //   icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  // },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  let navigate = useNavigate()\n\n  const navigateToHome = () => {\n    navigate('/')\n  }\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n        <div onClick={() => navigateToHome()} style={{ cursor: 'pointer' }}>\n          <h4 style={{ margin: '0', textAlign: 'center' }}>Patient Care</h4>\n          <p style={{ margin: '0', fontSize: '11px' }}>DevLogix Technology Pvt. Ltd.</p>\n        </div>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      {/* <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      /> */}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        {/* <AppFooter /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { postFetchData } from 'src/api/Api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst Login = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const REGISTER_URL = `${API_URL}/register`\n  const navigate = useNavigate()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const date = new Date().getFullYear()\n\n  const handleSubmit = async (e) => {\n    try {\n      setLoading(true)\n      e.preventDefault()\n      const dataa = await postFetchData(`${API_URL}/api/user/login`, data)\n      if (dataa.success === true) {\n        toast.success('Login successfully')\n        localStorage.setItem('token', dataa.token)\n        localStorage.setItem('patientRecord', JSON.stringify(dataa?.user))\n        window.location.reload()\n        setLoading(false)\n      }\n\n      if (dataa?.response?.data?.success === false) {\n        setLoading(false)\n        toast.warning('Invalid Credentials')\n      }\n    } catch (error) {\n      setLoading(false)\n      toast.warning('Something went wrong')\n      console.log(error)\n    }\n  }\n\n  const nevigateToRegister = () => {\n    navigate('/register')\n  }\n\n  return (\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <div className=\"bg-light d-flex flex-row align-items-center\" style={{ flex: 1 }}>\n        {loading ? <SpinnerOverlay message=\"Logging..\" /> : ''}\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={5}>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm onSubmit={handleSubmit}>\n                      <h2>Login</h2>\n                      <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          value={data.email}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\"\n                          name=\"password\"\n                          value={data.password}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={12} style={{ textAlign: 'center' }}>\n                          <CButton color=\"primary\" className=\"px-5\" type=\"submit\">\n                            Login\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n      {/* <footer className=\"bg-dark text-light py-2 text-center\">\n        &copy; 2024 DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer> */}\n      <ToastContainer />\n      <footer className=\"bg-light py-2 text-left\" style={{ paddingLeft: '1rem' }}>\n        Copyright &copy; {date} DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Login\n","// SpinnerOverlay.js\nimport React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst SpinnerOverlay = (loading) => {\n  const message = loading.message\n  return (\n    <div style={overlayStyle(loading)}>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <BarLoader loading={loading} color=\"#36D7B7\" />\n        {message ? <p style={{ margin: 'auto' }}>{message}</p> : ''}\n      </div>\n    </div>\n  )\n}\n\nconst overlayStyle = (loading) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  display: loading ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 9999,\n})\n\nexport default SpinnerOverlay\n"],"names":["_ref","setHide","popupData","console","log","diagnosis","reversedDiagnosis","setReversedDiagnosis","useState","selectedFile","setSelectedFile","Array","length","fill","loading","setLoading","useEffect","isArray","reverse","hoveredFile","setHoveredFile","_jsx","_Fragment","children","className","tabIndex","style","display","backgroundColor","maxHeight","color","_jsxs","fontSize","fontWeight","crn","name","type","onClick","overflowY","overflowX","marginTop","padding","map","elem","index","_elem$diagnosData","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","overflow","margin","border","fontFamily","borderRadius","width","scope","background","diagnosData","element","innerIndex","problem","scale","test","testInput","files","value","SpinnerOverlay","message","file","fileIndex","fileName","alignItems","marginRight","onMouseEnter","fileNamee","parts","split","slice","join","editNameFun","handleMouseEnter","onMouseLeave","async","filename","response","axios","get","concat","process","responseType","blob","Blob","data","headers","blobUrl","URL","createObjectURL","window","open","error","showReportHandler","title","CIcon","icon","cilDataTransferDown","desc","PatientReport","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","navigate","useNavigate","hide","setPopuoData","updateState","setUpdateState","problemSet","setProblemSet","pageCount","setPageCount","page","setPage","problems","setProblems","tests","setTests","scales","setScales","patientProblems","setPatientProblems","selectDropdownValue","setSelectDropdownValue","colorPalette","columns","dataIndex","sorter","a","b","age","sex","localeCompare","render","text","handleOpenMOdal","e","state","todayDate","dayjs","startingDate","setStartingDate","subtract","endDate","setEndDate","dateSubmit","_res$data","_res$data2","_res$data3","toast","warning","isBefore","date1","res","postFetchData","_id","problemCounts","forEach","patient","_patient$diagnosis","patientProblemSet","Set","_element$diagnosData","includes","has","add","maleCount","femaleCount","otherCount","setFilterDataBySex","male","female","other","filterDataBySex","setTest","dateReset","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","testFilter","scaleFilter","options","label","el","fetchProblems","fetchData","ReportModal","Select","isMulti","onChange","selectedOptions","placeholder","maxMenuHeight","styles","singleValue","provided","height","lineHeight","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","inputFormat","ampm","ampmInClock","views","textAlign","paddingRight","Loader","Table","dataSource","pagination","Stack","spacing","Pagination","count","handlePageChange","event","Object","keys","CChart","labels","datasets","values","plugins","legend","ToastContainer","localizer","globalizeLocalizer","globalize","DoctorsCalendar","visibleRange","setVisibleRange","start","end","appointments","setAppointments","handleNavigate","view","getFullYear","getMonth","firstDayOfWeek","getDate","getDay","lastDayOfWeek","currentDate","status","events","appointment","nextApointmentDate","appointmentData","Calendar","startAccessor","endAccessor","onNavigate","onView","formats","eventTimeRangeFormat","defaultView","onSelectEvent","url","DoctorChangePassword","setData","password","reEnterPassword","handleChange","target","minHeight","flexDirection","flex","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","cilLockLocked","CFormInput","xs","CButton","preventDefault","putFetchData","success","removeItem","autoClose","setTimeout","location","reload","submitHandler","Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Toasts","PatientPage","Widgets","routes","path","exact","Login","AppContent","lg","Suspense","fallback","CSpinner","Routes","route","idx","Route","Navigate","to","AppHeaderDropdown","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar12","size","CDropdownMenu","CDropdownHeader","CDropdownItem","changePasswordHandler","href","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","AppSidebarNav","items","useLocation","navLink","badge","CBadge","navItem","rest","Component","_createElement","key","navGroup","_item$items","String","toggler","visible","pathname","startsWith","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","cursor","CSidebarNav","SimpleBar","navigation","DocsCallout","props","content","plural","_href","CCallout","CLink","DocsLink","rel","DocsExample","CNav","active","cilMediaPlay","cilCode","CTabContent","CTabPane","DefaultLayout","Box","CircularProgress","email","onSubmit","_dataa$response","_dataa$response$data","dataa","setItem","token","stringify","user","cilUser","autoComplete","paddingLeft","overlayStyle","top","left","justifyContent","zIndex","BarLoader"],"sourceRoot":""}