{"version":3,"file":"static/js/4349.58724465.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { cilDataTransferDown } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientShowDetails = ({ diagnosis }) => {\n  console.log('Guarva', diagnosis)\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [requestedFileLoading, setRequestedFileLoading] = useState({})\n  // const [selectedFile, setSelectedFile] = useState(Array(diagnosis?.length).fill(''))\n\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      const reversed = [...diagnosis].reverse()\n      setReversedDiagnosis(reversed)\n    }\n  }, [diagnosis])\n\n  const showReportHandler = async (filename, index) => {\n    try {\n      setLoading(true)\n\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/user/getPatientReport/${filename}`,\n        {\n          responseType: 'blob',\n        },\n      )\n\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n      const blobUrl = URL.createObjectURL(blob)\n      window.open(blobUrl)\n    } catch (error) {\n      setLoading(false)\n      console.error('Error fetching report:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // const handleFileSelect = (e, index) => {\n  //   const { value } = e.target\n  //   const updatedSelectedFile = [...selectedFile]\n  //   updatedSelectedFile[index] = value\n  //   setSelectedFile(updatedSelectedFile)\n  // }\n  const editNameFun = (name) => {\n    if (name) {\n      const fileName = name\n      const parts = fileName.split('_')\n      // Check if the file name contains underscores\n      if (parts.length > 1) {\n        // Exclude the first part of the file name and join the rest with underscores\n        const editedFileName = parts.slice(1).join('_')\n        const actualFileName = editedFileName.split('.')[0]\n        return actualFileName\n      } else {\n        // If there are no underscores or only one part, return the original file name\n        return fileName\n      }\n    } else {\n      // If the file name is undefined, return an empty string\n      return ''\n    }\n  }\n  // console.log('guarva', reversedDiagnosis)\n\n  const [hoveredFile, setHoveredFile] = useState(null)\n\n  const handleMouseEnter = (fileName) => {\n    const fileNamee = editNameFun(fileName)\n    setHoveredFile(fileNamee)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredFile(null)\n  }\n\n  const [isSmallScreen, setIsSmallScreen] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      setIsSmallScreen(window.innerWidth <= 768) // Adjust the breakpoint as needed\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <div style={{ maxHeight: '300px', marginTop: '20px' }}>\n      {reversedDiagnosis?.map((elem, index) => {\n        const date = new Date(elem.date)\n        const formattedDate = date\n          .toLocaleDateString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={index}>\n            {isSmallScreen ? (\n              <div className=\"row\">\n                <div style={{ overflow: 'auto !important' }}>\n                  <h6>Diagnose Date: {formattedDate}</h6>\n\n                  <table\n                    className=\"table\"\n                    style={{\n                      width: '90%',\n                      border: '1px solid',\n                      fontFamily: 'ui-rounded',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    <colgroup>\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                    </colgroup>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" className=\"tableTitle\">\n                          Problems\n                        </th>\n                        <th scope=\"col\" className=\"tableTitle\">\n                          Test\n                        </th>\n                        <th scope=\"col\" className=\"tableTitle\">\n                          Test value\n                        </th>\n                        <th scope=\"col\" className=\"tableTitle\">\n                          Scale\n                        </th>\n                        <th scope=\"col\" className=\"tableTitle\">\n                          Scale value\n                        </th>\n                      </tr>\n                    </thead>\n                    {elem?.diagnosData?.map((element, innerIndex) => {\n                      const { problem, scale, test, testInput, files, value } = element\n                      // console.log('Guarav', element)\n                      return (\n                        <tbody key={innerIndex}>\n                          {loading && <SpinnerOverlay message=\"Opening File\" />}\n                          <tr>\n                            <td className=\"tableTitle\">{problem}</td>\n                            <td className=\"tableTitle\">{test === '' ? '-' : test}</td>\n                            <td className=\"tableTitle\">\n                              {testInput ? (\n                                testInput\n                              ) : (\n                                <div style={{ display: 'flex' }}>\n                                  {files?.map((file, fileIndex) => (\n                                    <div\n                                      key={fileIndex}\n                                      value={file.fileName}\n                                      style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        marginRight: '10px',\n                                      }}\n                                      onMouseEnter={() => handleMouseEnter(file.fileName)}\n                                      onMouseLeave={() => handleMouseLeave()}\n                                      onClick={() => showReportHandler(file?.fileName, fileIndex)}\n                                    >\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn btn-sm btn-primary\" // Decreased size and changed color to blue\n                                        data-toggle=\"popover\"\n                                        title={hoveredFile}\n                                        style={{ margin: '0' }}\n                                      >\n                                        <CIcon icon={cilDataTransferDown} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                </div>\n                                // <div style={{ display: 'flex' }}>\n                                //   <select\n                                //     className=\"form-select\"\n                                //     value={selectedFile?.[innerIndex] || ''}\n                                //     onChange={(e) => handleFileSelect(e, innerIndex)}\n                                //     disabled={requestedFileLoading?.[innerIndex]}\n                                //     style={{ width: '70%' }}\n                                //   >\n                                //     <option value=\"\">Select file</option>\n                                //     {testInput?.files?.map((file, fileIndex) => (\n                                //       <option key={fileIndex} value={file.fileName}>\n                                //         {editNameFun(file.fileName)}\n                                //       </option>\n                                //     ))}\n                                //   </select>\n                                //   <button\n                                //     className=\"btn btn-light mx-2\"\n                                //     onClick={() => {\n                                //       if (selectedFile?.[innerIndex]) {\n                                //         showReportHandler(selectedFile[innerIndex], innerIndex)\n                                //       } else {\n                                //         toast.warning('Please select a file to download', {\n                                //           autoClose: 700,\n                                //         })\n                                //       }\n                                //     }}\n                                //     disabled={requestedFileLoading?.[innerIndex]}\n                                //   >\n                                //     {requestedFileLoading?.[innerIndex] ? (\n                                //       '...'\n                                //     ) : (\n                                //       <CIcon icon={cilArrowCircleRight} />\n                                //     )}\n                                //   </button>\n                                // </div>\n                              )}\n                            </td>\n                            {console.log('Guarav', testInput)}\n                            <td className=\"tableTitle\">{scale === '' ? '-' : scale}</td>\n                            <td className=\"tableTitle\">{value === '' ? '-' : value}</td>\n                          </tr>\n                        </tbody>\n                      )\n                    })}\n                  </table>\n\n                  <div className=\"row\">\n                    <div style={{ margin: '0 10px 10px 10px' }}>\n                      <div className=\"row\">\n                        <div className=\"col-md-2 d-flex align-items-center\">\n                          <h5>Notes:</h5>\n                        </div>\n                        <div className=\"col-md-10 d-flex align-items-center\">\n                          <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                            <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <hr />\n              </div>\n            ) : (\n              <div className=\"row\">\n                <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n                  <h5>Diagnose Date: {formattedDate}</h5>\n\n                  <table\n                    className=\"table\"\n                    style={{\n                      width: '90%',\n                      border: '1px solid',\n                      fontFamily: 'ui-rounded',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    <colgroup>\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                    </colgroup>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Problems\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Test\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Test value\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Scale\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Scale value\n                        </th>\n                      </tr>\n                    </thead>\n                    {elem?.diagnosData?.map((element, innerIndex) => {\n                      const { problem, scale, test, testInput, files, value } = element\n                      // console.log('Guarav', element)\n                      return (\n                        <tbody key={innerIndex}>\n                          {loading && <SpinnerOverlay message=\"Opening File\" />}\n                          <tr>\n                            <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n                            <td style={{ fontWeight: 'bolder' }}>\n                              {testInput ? (\n                                testInput\n                              ) : (\n                                <div style={{ display: 'flex' }}>\n                                  {files?.map((file, fileIndex) => (\n                                    <div\n                                      key={fileIndex}\n                                      value={file.fileName}\n                                      style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        marginRight: '10px',\n                                      }}\n                                      onMouseEnter={() => handleMouseEnter(file.fileName)}\n                                      onMouseLeave={() => handleMouseLeave()}\n                                      onClick={() => showReportHandler(file?.fileName, fileIndex)}\n                                    >\n                                      <button\n                                        type=\"button\"\n                                        className=\"btn btn-sm btn-primary\" // Decreased size and changed color to blue\n                                        data-toggle=\"popover\"\n                                        title={hoveredFile}\n                                        style={{ margin: '0' }}\n                                      >\n                                        <CIcon icon={cilDataTransferDown} />\n                                      </button>\n                                    </div>\n                                  ))}\n                                </div>\n                                // <div style={{ display: 'flex' }}>\n                                //   <select\n                                //     className=\"form-select\"\n                                //     value={selectedFile?.[innerIndex] || ''}\n                                //     onChange={(e) => handleFileSelect(e, innerIndex)}\n                                //     disabled={requestedFileLoading?.[innerIndex]}\n                                //     style={{ width: '70%' }}\n                                //   >\n                                //     <option value=\"\">Select file</option>\n                                //     {testInput?.files?.map((file, fileIndex) => (\n                                //       <option key={fileIndex} value={file.fileName}>\n                                //         {editNameFun(file.fileName)}\n                                //       </option>\n                                //     ))}\n                                //   </select>\n                                //   <button\n                                //     className=\"btn btn-light mx-2\"\n                                //     onClick={() => {\n                                //       if (selectedFile?.[innerIndex]) {\n                                //         showReportHandler(selectedFile[innerIndex], innerIndex)\n                                //       } else {\n                                //         toast.warning('Please select a file to download', {\n                                //           autoClose: 700,\n                                //         })\n                                //       }\n                                //     }}\n                                //     disabled={requestedFileLoading?.[innerIndex]}\n                                //   >\n                                //     {requestedFileLoading?.[innerIndex] ? (\n                                //       '...'\n                                //     ) : (\n                                //       <CIcon icon={cilArrowCircleRight} />\n                                //     )}\n                                //   </button>\n                                // </div>\n                              )}\n                            </td>\n                            {console.log('Guarav', testInput)}\n                            <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n                          </tr>\n                        </tbody>\n                      )\n                    })}\n                  </table>\n\n                  <div className=\"row\">\n                    <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                      <div className=\"row\" style={{ marginTop: '1rem' }}>\n                        <div className=\"col-md-2 d-flex align-items-center\">\n                          <h5>Notes:</h5>\n                        </div>\n                        <div className=\"col-md-10 d-flex align-items-center\">\n                          <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                            <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <hr />\n              </div>\n            )}\n          </div>\n        )\n      })}\n      <ToastContainer />\n    </div>\n  )\n}\n\nPatientShowDetails.propTypes = {\n  diagnosis: PropTypes.array.isRequired,\n}\n\nexport default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, postFetchFile, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({\n  _id,\n  getSearchByPatient,\n  setIsAddNewDiagnosis,\n  setIsDetailed,\n  diagnosisProp,\n}) => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n    diagnosisProp: PropTypes.string.isRequired,\n  }\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n  ])\n\n  const [lastDiagnosis, setLastDiagnosis] = useState('')\n\n  useEffect(() => {\n    const lastRecords = diagnosisProp[diagnosisProp.length - 1]\n    const lastDiagnosis = lastRecords?.diagnosData[lastRecords?.diagnosData.length - 1]\n    setLastDiagnosis(lastDiagnosis)\n    console.log('Guarssadva', lastDiagnosis)\n    setInputs([\n      { problem: lastDiagnosis?.problem, test: '', testInput: '', files: [], scale: '', value: '' },\n    ])\n  }, [])\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '' && data.files.length === 0) {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')z\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        inputs.map(async (data, index) => {\n          if (data.files) {\n            const files = data.files\n            if (files.length > 0) {\n              const formData = new FormData()\n              files.forEach((file) => {\n                // Check if the file type is allowed\n                const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n                if (allowedFileTypes.includes(file.type)) {\n                  formData.append('files', file) // Append each allowed file to the FormData\n                } else {\n                  console.warn('File type not allowed:', file.type)\n                }\n              })\n              if (formData.has('files')) {\n                const response = await postFetchFile(\n                  `${API_URL}/api/user/uploadPatientReport`,\n                  formData,\n                )\n                if (response) {\n                  setfileUploadingSpinner(false)\n                  inputs[index].files = response.filesInfo\n                }\n              } else {\n                console.warn('No valid files to upload')\n              }\n            }\n          } else {\n            inputs[index].files = null\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false)\n      console.error('Error uploading files:', error)\n      return\n    }\n\n    // console.log('guarav', inputs)\n    try {\n      setLoading(true)\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: inputs,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n        setTimeout(() => {\n          setIsAddNewDiagnosis(false)\n          setIsDetailed(true)\n          setInputs([{ problem: '', test: '', testInput: '', files: [], scale: '', value: '' }])\n          setLoading(false)\n        }, 2000)\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n    const maxFiles = 3 // Maximum number of files allowed\n\n    // Check if the number of selected files exceeds the limit\n    if (files.length > maxFiles) {\n      event.target.value = '' // Clear the file input\n      toast.warning('You can only upload up to 3 files', { autoClose: 1500 })\n      return\n    }\n\n    const updatedInputs = [...inputs]\n\n    // Convert FileList to array and filter out files that exceed the size limit or are not of allowed types\n    const filesArray = Array.from(files).filter((file) => {\n      if (file.size > 31457280) {\n        toast.warning('File size should be less than 30 MB', { autoClose: 1500 })\n        return false\n      }\n      if (!allowedFileTypes.includes(file.type)) {\n        toast.warning('Only images and PDFs are allowed', { autoClose: 1500 })\n        return false\n      }\n      return true\n    })\n\n    updatedInputs[index][name] = filesArray // Store the array of files\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([\n      ...inputs,\n      { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n    ])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  const handleInputTestText = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n\n  return (\n    <>\n      {fileUploadingSpinner && (\n        <SpinnerOverlay loading={fileUploadingSpinner} message=\"Uploading Files\" />\n      )}\n      {loading && <SpinnerOverlay message=\"Adding Diagnosis\" />}\n      <div style={{ margin: '1rem auto 1rem 1rem' }}>\n        <div style={{ margin: '1rem auto 1rem 0' }}>\n          <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <form className=\"mb-3\">\n            {inputs.map((input, index) => (\n              <div key={index} className=\"row mt-1 mb-2\">\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"problem\"\n                      value={input.problem}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Chief complaint</option>\n                      {problems.map((problem, problemIndex) => (\n                        <option key={problemIndex} value={problem}>\n                          {problem}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"test\"\n                      value={input.test}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Test</option>\n                      {tests.map((test, testIndex) => (\n                        <option key={testIndex} value={test.name}>\n                          {test.name}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                {input.test === '' ? (\n                  <div className=\"col-md-2\">\n                    <label>\n                      <input\n                        className=\"form-control \"\n                        style={{ width: '10rem', appearance: 'auto' }}\n                        placeholder=\"Select a Test\"\n                        type=\"text\"\n                        disabled=\"true\"\n                      />\n                    </label>\n                  </div>\n                ) : (\n                  <div className=\"col-md-2\">\n                    {tests.map((test, testIndex) => {\n                      if (test.name === input.test) {\n                        if (test.inputType === 'text') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                placeholder=\"Enter test Value\"\n                                type=\"text\"\n                                name=\"testInput\"\n                                value={input.testInput.text} // Here is the issue\n                                onChange={(event) => handleInputTestText(index, event)}\n                              />\n                            </label>\n                          )\n                        } else if (test.inputType === 'file') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                type=\"file\"\n                                multiple\n                                name=\"files\"\n                                accept=\"image/jpeg, image/png, application/pdf\"\n                                onChange={(event) => handleFileInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        }\n                      }\n                      return null\n                    })}\n                  </div>\n                )}\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"scale\"\n                      value={input.scale}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Scale</option>\n                      {scales.map((scale, scaleIndex) => (\n                        <option key={scaleIndex} value={scale}>\n                          {scale}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <input\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto' }}\n                      placeholder=\"Enter Scale Value\"\n                      type=\"text\"\n                      name=\"value\"\n                      value={input.value}\n                      onChange={(event) => handleInputChange(index, event)}\n                    />\n                  </label>\n                </div>\n                <div className=\"col-md-2 d-flex justify-content-center\">\n                  {removeAndAddInput && (\n                    <button\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                      onClick={() => handleRemoveInput(index)}\n                    >\n                      Remove\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div className=\"d-flex justify-content-end\">\n              <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n                Add More\n              </button>\n            </div>\n          </form>\n          <div>\n            <textarea\n              rows={4}\n              className=\"form-control col-12\"\n              placeholder=\"Notes (Optional)\"\n              name=\"desc\"\n              value={desc}\n              onChange={(e) => setDesc(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"d-flex mt-2\">\n            <div className=\"w-auto\">\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['DateTimePicker']}>\n                  <DateTimePicker\n                    label=\"Next Appointment Date\"\n                    value={startingDate}\n                    onChange={handleStartingDateChange}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </div>\n          </div>\n          <div className=\"text-end\">\n            <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger mt-4 ms-2\"\n              style={{ width: '10rem' }}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  const [isSmallScreen, setIsSmallScreen] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      setIsSmallScreen(window.innerWidth <= 768) // Adjust the breakpoint as needed\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <div>\n      {isSmallScreen ? (\n        <>\n          {patientSearch?.map((patient) => {\n            const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n            const isDetailsOpen = selectedPatientId === _id\n            const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n            const inputDate = nextApointmentDate\n            const diagnosisProp = diagnosis\n            const date = new Date(inputDate)\n            const formattedDate = date\n              .toLocaleString('en-IN', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })\n              .replace(/\\//g, '/')\n\n            return (\n              <div key={_id}>\n                <div style={{ marginTop: '2rem' }}>\n                  <div className=\"card\" style={{ width: '100%' }}>\n                    <div className=\"card-body overflow-auto \">\n                      <div className=\"row\" style={{ marginBottom: '1rem' }}>\n                        <div style={{ width: '40%' }}>\n                          <span>\n                            <span style={{ fontWeight: 'bold' }}>CR No :</span> {crn}\n                          </span>\n                          <br />\n                          <span>\n                            <span style={{ fontWeight: 'bold' }}>Age : </span> {age}\n                          </span>\n                          <br />\n                          <span>\n                            <span style={{ fontWeight: 'bold' }}>Sex. </span> {sex}\n                          </span>\n                        </div>\n                        <div style={{ width: '60%' }}>\n                          <span>\n                            <span style={{ fontWeight: 'bold' }}>Name : </span> {name}\n                          </span>\n                          <br />\n                          <span>\n                            <span style={{ fontWeight: 'bold' }}>Mob. No.</span> {phone}\n                          </span>\n                          <br />\n                          <span>\n                            <span style={{ fontWeight: 'bold' }}>Next Appointment Date.</span>{' '}\n                            {nextApointmentDate ? formattedDate : '-'}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success\"\n                          onClick={() => handleToggleDetails(_id)}\n                          style={{ fontSize: '15px', whiteSpace: 'none', padding: '5px 10px' }}\n                        >\n                          Show Diagnosis\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning\"\n                          style={{ marginLeft: '2rem' }}\n                          onClick={() => handleAddDiagnosis(_id)}\n                        >\n                          {diagnosis ? 'Add New Follow-Up' : 'Add New Diagnosis'}\n                        </button>\n                      </div>\n\n                      {isDetailsOpen && isDetails && (\n                        <div>\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                      {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                        <div>\n                          <PatientAddNewRecord\n                            _id={_id}\n                            getSearchByPatient={getSearchByPatient}\n                            setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                            setIsDetailed={setIsDetailed}\n                            diagnosisProp={diagnosisProp}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </>\n      ) : (\n        <>\n          {patientSearch?.map((patient) => {\n            const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n            const isDetailsOpen = selectedPatientId === _id\n            const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n            const inputDate = nextApointmentDate\n            const diagnosisProp = diagnosis\n            const date = new Date(inputDate)\n            const formattedDate = date\n              .toLocaleString('en-IN', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })\n              .replace(/\\//g, '/')\n\n            return (\n              <div key={_id} className=\"row\">\n                <div style={{ marginTop: '2rem' }}>\n                  <div className=\"card\" style={{ width: '100%' }}>\n                    <div className=\"card-body overflow-auto \">\n                      <h5 className=\"card-title\"> CR No : {crn}</h5>\n                      <h6 className=\"card-subtitle mt-2\">\n                        <h5>Name : {name}</h5>\n                      </h6>\n                      <div style={{ display: 'flex', marginTop: '1rem' }}>\n                        {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                        <span style={{ display: 'flex' }}>\n                          <h6>Phone No. &nbsp;</h6>{' '}\n                          <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                          <h6 style={{ fontWeight: 'normal' }}>\n                            {nextApointmentDate ? formattedDate : '-'}\n                          </h6>\n                        </span>\n                      </div>\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success\"\n                          onClick={() => handleToggleDetails(_id)}\n                          style={{ fontSize: '15px', whiteSpace: 'none', padding: '5px 10px' }}\n                        >\n                          Show Diagnosis\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning\"\n                          style={{ marginLeft: '2rem' }}\n                          onClick={() => handleAddDiagnosis(_id)}\n                        >\n                          {diagnosis ? 'Add New Follow-Up' : 'Add New Diagnosis'}\n                        </button>\n                      </div>\n\n                      {isDetailsOpen && isDetails && (\n                        <div>\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                      {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                        <div>\n                          <PatientAddNewRecord\n                            _id={_id}\n                            getSearchByPatient={getSearchByPatient}\n                            setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                            setIsDetailed={setIsDetailed}\n                            diagnosisProp={diagnosisProp}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </>\n      )}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  // console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: '',\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  // const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  // console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  // console.log('problems', problems)\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      let searchData = search || location?.state?.crn\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      // console.log('searchData', data)\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // console.log('before', inputs)\n  })\n\n  const handleSubmit = async () => {\n    // console.log('updatedFormData', inputs)\n\n    setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '' && data.files.length === 0) {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        inputs.map(async (data, index) => {\n          if (data.files) {\n            const files = data.files\n            if (files.length > 0) {\n              const formData = new FormData()\n              files.forEach((file) => {\n                // Check if the file type is allowed\n                const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n                if (allowedFileTypes.includes(file.type)) {\n                  formData.append('files', file) // Append each allowed file to the FormData\n                } else {\n                  console.warn('File type not allowed:', file.type)\n                }\n              })\n              if (formData.has('files')) {\n                const response = await postFetchFile(\n                  `${API_URL}/api/user/uploadPatientReport`,\n                  formData,\n                )\n                if (response) {\n                  setfileUploadingSpinner(false)\n                  inputs[index].files = response.filesInfo\n                }\n              } else {\n                setfileUploadingSpinner(false)\n                console.warn('No valid files to upload')\n              }\n            }\n          } else {\n            inputs[index].files = null\n            setfileUploadingSpinner(false)\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false)\n      console.error('Error uploading files:', error)\n      return\n    }\n\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: inputs,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n\n    try {\n      // console.log('pre', updatedFormData)\\\n      const doctorRecord = await localStorage.getItem('patientRecord')\n      const doctorId = JSON.parse(doctorRecord)?._id\n      // console.log('Guarav', JSON.parse(doctorRecord)?._id)\n      const data = await postFetchData(`${API_URL}/api/patient/create/${doctorId}`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n        setfileUploadingSpinner(false)\n\n        setaddPatientLoader(true)\n        setData(false)\n        setTimeout(() => {\n          // toast.success('Patient Created Successfully')\n          setUpdateState(true)\n          setaddPatientLoader(false)\n          // setDiagnosis([])\n          setDesc('')\n          setStartingDate(null)\n          setInputs([{ problem: '', test: '', testInput: '', files: [], scale: '', value: '' }])\n        }, 2000)\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: '',\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message === 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      if (data.message === 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      // console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  // const handleSubmit = async () => {\n  //   console.log(inputs)\n  // }\n\n  // const handleSubmit = async () => {\n  //   // console.log('updatedFormData', inputs)\n\n  //   setSearch('')\n\n  //   // Check if required fields are filled\n  //   // if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n  //   //   return toast.warning('Please fill all Patient details')\n  //   // }\n\n  //   // if (inputs.length === 1 && inputs[0].problem === '') {\n  //   //   return toast.warning('Please select at least one Chief complaint')\n  //   // }\n\n  //   // for (const data of inputs) {\n  //   //   if (data.test !== '' && data.testInput === '') {\n  //   //     toast.warning('Please give input for selected test')\n  //   //     return // Stop further execution\n  //   //   }\n  //   //   if (data.scale !== '' && data.value === '') {\n  //   //     toast.warning('Please give input for selected scale')\n  //   //     return // Stop further execution\n  //   //   }\n  //   //   console.log('data', data)\n  //   // }\n  //   // // toast.warning('Uploading Files and Reports')\n  //   // setfileUploadingSpinner(true)\n  //   // try {\n  //   //   await Promise.all(\n  //   //     inputs.map(async (data, index) => {\n  //   //       if (data.testInput.files) {\n  //   //         const files = data.testInput.files\n  //   //         if (files.length > 0) {\n  //   //           const formData = new FormData()\n  //   //           files.forEach((file) => {\n  //   //             formData.append('files', file) // Append each file to the FormData\n  //   //           })\n  //   //           const response = await postFetchFile(\n  //   //             `${API_URL}/api/user/uploadPatientReport`,\n  //   //             formData,\n  //   //           )\n  //   //           if (response) {\n  //   //             setfileUploadingSpinner(false)\n  //   //             inputs[index].testInput.files = response.filesInfo\n  //   //           }\n  //   //         }\n  //   //       } else {\n  //   //         inputs[index].testInput.files = null\n  //   //       }\n  //   //     }),\n  //   //   )\n  //   // } catch (error) {\n  //   //   setfileUploadingSpinner(false)\n  //   //   console.error('Error uploading files:', error)\n  //   //   return\n  //   // }\n  //   // try {\n  //   //   await Promise.all(\n  //   //     // Use Promise.all to wait for all uploads to finish\n  //   //     inputs.map(async (data, index) => {\n  //   //       if (typeof data.testInput !== 'string') {\n  //   //         const file = data.testInput\n  //   //         const formData = new FormData()\n  //   //         formData.append('file', file)\n  //   //         const response = await postFetchFile(\n  //   //           `${API_URL}/api/user/uploadPatientReport`,\n  //   //           formData,\n  //   //         )\n  //   //         if (response) {\n  //   //           inputs[index].testInput = response?.fileName\n  //   //         }\n  //   //       }\n  //   //     }),\n  //   //   )\n  //   // } catch (error) {\n  //   //   setfileUploadingSpinner(false) // Set loading to false in case of an error\n  //   //   console.error('Error submitting data:', error)\n  //   // }\n\n  //   const updatedFormData = {\n  //     ...formData,\n  //     diagnosis: [\n  //       {\n  //         diagnosData: inputs,\n  //         date: Date(),\n  //         desc,\n  //       },\n  //     ],\n  //     nextApointmentDate: startingDate,\n  //   }\n  //   console.log(updatedFormData)\n  //   // try {\n  //   //   // console.log('pre', updatedFormData)\\\n  //   //   const data = await postFetchData(`${API_URL}/api/patient/create`, updatedFormData)\n  //   //   if (data.success === true) {\n  //   //     toast.success('Patient Created Successfully', {\n  //   //       autoClose: 2000,\n  //   //     })\n\n  //   //     setaddPatientLoader(true)\n  //   //     setData(false)\n  //   //     setTimeout(() => {\n  //   //       // toast.success('Patient Created Successfully')\n  //   //       setUpdateState(true)\n  //   //       setaddPatientLoader(false)\n  //   //       // setDiagnosis([])\n  //   //       setDesc('')\n  //   //       setStartingDate(null)\n  //   //       setInputs([\n  //   //         { problem: '', test: '', testInput: { files: '', text: '' }, scale: '', value: '' },\n  //   //       ])\n  //   //     }, 2000)\n  //   //     setFormData({\n  //   //       name: '',\n  //   //       age: '',\n  //   //       sex: 'male',\n  //   //       phone: '',\n  //   //       crn: '',\n  //   //       diagnosis: [],\n  //   //       desc: '',\n  //   //       doctor_id: patientRecord?._id,\n  //   //     })\n  //   //   }\n  //   //   if (data.message == 'phone Already Exists') {\n  //   //     toast.warning('phone Already Exists')\n  //   //     setfileUploadingSpinner(false) // Set loading to false in case of an error\n  //   //   }\n  //   //   if (data.message == 'Crn Already Exists') {\n  //   //     toast.warning('Crn Already Exists')\n  //   //     setfileUploadingSpinner(false) // Set loading to false in case of an error\n  //   //   }\n  //   //   console.log('data', data)\n  //   //   setSearch(data?.data?.crn)\n  //   // } catch (error) {\n  //   //   toast.warning('Something went wrong')\n  //   //   setfileUploadingSpinner(false) // Set loading to false in case of an error\n\n  //   //   console.error('Error submitting data:', error)\n  //   // }\n  // }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  //////// new updates\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleInputTestText = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  // const handleFileInputChange = (index, event) => {\n  //   const { name, files } = event.target\n  //   const updatedInputs = [...inputs]\n  //   updatedInputs[index][name] = files[0]\n  //   setInputs(updatedInputs)\n  //   console.log('Guarv', inputs)\n  // }\n\n  // const handleFileInputChange = (index, event) => {\n  //   const { name, files } = event.target\n  //   const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n  //   console.log('files', files[0]?.size)\n  //   if (files[0]?.size > 31457280) {\n  //     event.target.value = ''\n  //     return toast.warning('file size should be less than 30 mb', {\n  //       autoClose: 1500,\n  //     })\n  //   }\n  //   // Check if the file type is allowed\n  //   if (files && files[0] && allowedFileTypes.includes(files[0].type)) {\n  //     const updatedInputs = [...inputs]\n  //     updatedInputs[index][name] = files[0]\n  //     setInputs(updatedInputs)\n  //   } else {\n  //     event.target.value = ''\n  //     toast.warning('Only images and PDFs are allowed', {\n  //       autoClose: 1500,\n  //     })\n  //   }\n  // }\n\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n    const maxFiles = 3 // Maximum number of files allowed\n\n    // Check if the number of selected files exceeds the limit\n    if (files.length > maxFiles) {\n      event.target.value = '' // Clear the file input\n      toast.warning('You can only upload up to 3 files', { autoClose: 1500 })\n      return\n    }\n\n    const updatedInputs = [...inputs]\n\n    // Convert FileList to array and filter out files that exceed the size limit or are not of allowed types\n    const filesArray = Array.from(files).filter((file) => {\n      if (file.size > 31457280) {\n        toast.warning('File size should be less than 30 MB', { autoClose: 1500 })\n        return false\n      }\n      if (!allowedFileTypes.includes(file.type)) {\n        toast.warning('Only images and PDFs are allowed', { autoClose: 1500 })\n        return false\n      }\n      return true\n    })\n\n    updatedInputs[index][name] = filesArray // Store the array of files\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([\n      ...inputs,\n      { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n    ])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs)\n  }, [inputs])\n\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          // <div>\n          //   <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n          //   <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          //     <div className=\"d-flex\">\n          //       <input\n          //         style={{ paddingLeft: '5px' }}\n          //         className=\"form-control\"\n          //         placeholder=\"CR no. or Phone no.\"\n          //         type=\"text\"\n          //         name=\"search\"\n          //         value={search}\n          //         // autoComplete={false}\n          //         onKeyPress={handleKeyPress}\n          //         onChange={(e) => setSearch(e.target.value)}\n          //       />\n\n          //       {/* </button> */}\n          //       <button\n          //         className=\"btn btn-primary\"\n          //         style={{ marginLeft: '1rem', borderRadius: '5px' }}\n          //         type=\"button\"\n          //         onClick={getSearchByPatient}\n          //       >\n          //         Search\n          //       </button>\n          //       {search?.length ? (\n          //         <button\n          //           className=\"btn btn-danger text-light\"\n          //           style={{ marginLeft: '1rem', borderRadius: '5px' }}\n          //           type=\"button\"\n          //           onClick={clearSearch}\n          //         >\n          //           Clear\n          //         </button>\n          //       ) : (\n          //         ''\n          //       )}\n          //     </div>\n          //     <div>\n          //       <button\n          //         style={{ marginLeft: '1rem', borderRadius: '5px' }}\n          //         type=\"button\"\n          //         onClick={() => setData(true)}\n          //         className=\"btn btn-outline-dark\"\n          //       >\n          //         Add a Patient\n          //       </button>\n          //     </div>\n          //   </div>\n          // </div>\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div className=\"search-container\">\n              <div className=\"search-input\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n                <button\n                  className=\"btn btn-primary searchButton\"\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  <button\n                    className=\"btn btn-danger text-light clearButton\"\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : null}\n              </div>\n              <div className=\"add-patient-btn\">\n                <button\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <>\n                {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n\n                <div className=\"content-to-be-blurred\">\n                  <div style={{ marginTop: '1rem' }}>\n                    <div>\n                      <hr />\n                      <h4>Patient Details</h4>\n\n                      <div>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Name <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control \"\n                                  name=\"name\"\n                                  value={formData.name}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, name: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Age <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"number\"\n                                  className=\"form-control \"\n                                  name=\"age\"\n                                  value={formData.age}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, age: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Sex <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <select\n                                  className=\"form-control \"\n                                  name=\"sex\"\n                                  value={formData.sex}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, sex: e.target.value })\n                                  }\n                                >\n                                  <option value=\"male\">Male</option>\n                                  <option value=\"female\">Female</option>\n                                  <option value=\"other\">Other</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row \">\n                          <div className=\"col-md-4 mt-2\">\n                            <div>\n                              <label className=\"col-lg-4 patientNamediv\">\n                                Phone No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\" col-lg-8 col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"text\"\n                                  name=\"phone\"\n                                  value={formData.phone}\n                                  onChange={(e) => {\n                                    if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                                      setFormData({ ...formData, phone: e.target.value })\n                                    }\n                                  }}\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-md-4 mt-2\">\n                            <div>\n                              <label className=\"col-sm-4  patientNamediv\">\n                                CR No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"test\"\n                                  name=\"crn\"\n                                  value={formData.crn}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, crn: e.target.value })\n                                  }\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr />\n                      <div style={{ margin: '1rem auto 1rem 0' }}>\n                        <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n                      </div>\n                      <div>\n                        <form className=\"mb-3\">\n                          {inputs.map((input, index) => (\n                            <div key={index} className=\"row mt-1 mb-2\">\n                              <div className=\"col-md-2 col-12\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                                    name=\"problem\"\n                                    value={input.problem}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Chief complaint</option>\n                                    {problems.map((problem, problemIndex) => (\n                                      <option key={problemIndex} value={problem}>\n                                        {problem}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 col-6\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                                    name=\"test\"\n                                    value={input.test}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Test</option>\n                                    {tests.map((test, testIndex) => (\n                                      <option key={testIndex} value={test.name}>\n                                        {test.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              {input.test === '' ? (\n                                <div className=\"col-md-2 col-6\">\n                                  <label>\n                                    <input\n                                      className=\"form-control \"\n                                      style={{ width: '100%', appearance: 'auto' }}\n                                      placeholder=\"Select a Test\"\n                                      type=\"text\"\n                                      disabled=\"true\"\n                                    />\n                                  </label>\n                                </div>\n                              ) : (\n                                <div className=\"col-md-2 col-6\">\n                                  {tests.map((test, testIndex) => {\n                                    if (test.name === input.test) {\n                                      if (test.inputType === 'text') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '100%' }}\n                                              placeholder=\"Enter test Value\"\n                                              type=\"text\"\n                                              name=\"testInput\"\n                                              value={input.testInput.text} // Here is the issue\n                                              onChange={(event) =>\n                                                handleInputTestText(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      } else if (test.inputType === 'file') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '100%' }}\n                                              type=\"file\"\n                                              multiple\n                                              name=\"files\"\n                                              accept=\"image/jpeg, image/png, application/pdf\"\n                                              onChange={(event) =>\n                                                handleFileInputChange(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      }\n                                    }\n                                    return null\n                                  })}\n                                </div>\n                              )}\n                              <div className=\"col-md-2 col-6\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                                    name=\"scale\"\n                                    value={input.scale}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Scale</option>\n                                    {scales.map((scale, scaleIndex) => (\n                                      <option key={scaleIndex} value={scale}>\n                                        {scale}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 col-6\">\n                                <label>\n                                  <input\n                                    className=\"form-control \"\n                                    style={{ width: '100%', appearance: 'auto' }}\n                                    placeholder=\"Enter Scale Value\"\n                                    type=\"text\"\n                                    name=\"value\"\n                                    value={input.value}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 d-flex justify-content-end col-12\">\n                                {removeAndAddInput && (\n                                  <button\n                                    className=\"btn btn-danger me-4 mt-1\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveInput(index)}\n                                    // style={{ marginRight: '10px', marginTop: '3px' }}\n                                  >\n                                    Remove\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"d-flex justify-content-end\">\n                            <button\n                              className=\"btn btn-primary me-4\"\n                              type=\"button\"\n                              onClick={handleAddInput}\n                            >\n                              Add More\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                      <div>\n                        <textarea\n                          rows={4}\n                          className=\"form-control col-12\"\n                          placeholder=\"Notes (Optional)\"\n                          name=\"desc\"\n                          value={desc}\n                          onChange={(e) => setDesc(e.target.value)}\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"d-flex mt-2\">\n                        <div className=\"w-auto\">\n                          <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={['DateTimePicker']}>\n                              <DateTimePicker\n                                label=\"Next Appointment Date\"\n                                value={startingDate}\n                                onChange={handleStartingDateChange}\n                                // ampm={false}\n                              />\n                            </DemoContainer>\n                          </LocalizationProvider>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-end m-4\">\n                      <button className=\"btn btn-info mt-3 mx-2 w-auto\" onClick={handleSubmit}>\n                        Submit\n                      </button>\n                      <button className=\"btn btn-info mt-3 w-auto\" onClick={() => setData(false)}>\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '20vh',\n                      lineHeight: '20vh',\n                      textAlign: 'center',\n                      backgroundColor: 'white',\n                      marginTop: '10px',\n                    }}\n                  >\n                    {loader ? <Loader /> : 'No Data'}\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientPage\n"],"names":["_ref","diagnosis","console","log","reversedDiagnosis","setReversedDiagnosis","useState","loading","setLoading","requestedFileLoading","setRequestedFileLoading","useEffect","Array","isArray","reversed","reverse","showReportHandler","async","filename","index","response","axios","get","concat","process","responseType","blob","Blob","data","type","headers","blobUrl","URL","createObjectURL","window","open","error","hoveredFile","setHoveredFile","handleMouseEnter","fileName","fileNamee","name","parts","split","length","slice","join","editNameFun","handleMouseLeave","isSmallScreen","setIsSmallScreen","handleResize","innerWidth","addEventListener","removeEventListener","_jsxs","style","maxHeight","marginTop","children","map","elem","_elem$diagnosData","_elem$diagnosData2","formattedDate","Date","date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","_jsx","className","overflow","width","border","fontFamily","borderRadius","scope","diagnosData","element","innerIndex","problem","scale","test","testInput","files","value","SpinnerOverlay","message","display","file","fileIndex","alignItems","marginRight","onMouseEnter","onMouseLeave","onClick","title","margin","CIcon","icon","cilDataTransferDown","padding","desc","background","fontWeight","ToastContainer","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","diagnosisProp","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","inputs","setInputs","lastDiagnosis","setLastDiagnosis","lastRecords","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","fileUploadingSpinner","setfileUploadingSpinner","problems","setProblems","tests","setTests","scales","setScales","fetchProblems","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","scaleFilter","testFilter","_ref2","inputType","prevFormData","getPatientById","removeAndAddInput","setremoveAndAddInput","handleInputChange","event","target","updatedInputs","handleAddInput","handleRemoveInput","splice","_Fragment","departmentName","onSubmit","e","preventDefault","toast","warning","Promise","all","FormData","forEach","includes","append","warn","has","postFetchFile","filesInfo","updatedFormData","nextApointmentDate","putFetchData","success","autoClose","setTimeout","input","appearance","height","onChange","problemIndex","testIndex","placeholder","disabled","text","handleInputTestText","multiple","accept","handleFileInputChange","allowedFileTypes","filesArray","from","size","scaleIndex","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","handleToggleDetails","patientId","prevState","handleAddDiagnosis","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","marginBottom","fontSize","whiteSpace","marginLeft","PatientShowDetails","PatientAddNewRecord","AddPatientLoader","Box","lineHeight","textAlign","CircularProgress","PatientPage","location","useLocation","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","doctor_id","_location$state","_data$data","searchData","state","dateAndTime","setDateAndTime","_location$state2","_location$state3","paddingLeft","onKeyPress","key","clearSearch","color","required","_JSON$parse","_data$data2","doctorRecord","doctorId","postFetchData","backgroundColor","Loader","PatientInfoData"],"sourceRoot":""}