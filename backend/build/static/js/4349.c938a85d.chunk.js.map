{"version":3,"file":"static/js/4349.c938a85d.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport '../../dashboard/Dashboard.css'\nimport { faL } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nconst PatientShowDetails = ({ diagnosis, desc }) => {\n  let url = process.env.REACT_APP_API_URL\n  PatientShowDetails.propTypes = {\n    diagnosis: PropTypes.func.isRequired,\n    desc: PropTypes.func.isRequired,\n  }\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [requestedFileLoading, setRequestedFileLoading] = useState({})\n\n  // Reverse diagnosis array on component mount or whenever diagnosis changes\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n\n  const isFile = (value) => {\n    const regex = /^\\d{13}_/\n\n    if (regex.test(value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n  //no pdf\n  const showReportHandler = async (filename, index) => {\n    setRequestedFileLoading((prvState) => ({\n      ...prvState,\n      [index]: true,\n    }))\n\n    try {\n      // Fetch the image data from the server\n      const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n        responseType: 'blob', // Treat response data as blob\n      })\n\n      // Create a Blob object from the response data\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n      // Generate a URL for the Blob\n      const blobUrl = URL.createObjectURL(blob)\n\n      // Open the URL in a new tab\n      window.open(blobUrl)\n    } catch (error) {\n      console.error('Error fetching image:', error)\n    } finally {\n      setRequestedFileLoading((prvState) => ({\n        ...prvState,\n        [index]: false,\n      }))\n    }\n  }\n\n  /// opening pdf\n\n  return (\n    <div\n      style={{\n        maxHeight: '300px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        marginTop: '20px',\n      }}\n    >\n      {reversedDiagnosis?.map((elem, index) => {\n        const date = elem?.date\n\n        const datee = new Date(date)\n\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          // second: '2-digit',\n          hour12: true, // Set to true if you want 12-hour format with AM/PM\n        }\n        const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n        return (\n          <>\n            <div key={index}>\n              <div\n                className=\"row\"\n                // style={{ overflow: 'scroll !important', background: 'white' }}\n              >\n                <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n                  <h5>Diagnose Date : {formattedDate}</h5>\n\n                  <table\n                    className=\"table\"\n                    style={{\n                      width: '90%',\n                      border: '1px solid',\n                      fontFamily: 'ui-rounded',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    <colgroup>\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                    </colgroup>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Problems\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Test\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Test value\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Scale\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Scale value\n                        </th>\n                      </tr>\n                    </thead>\n                    {elem?.diagnosData?.map((element, innerIndex) => {\n                      let { problem, scale, test, testInput, value } = element\n                      return (\n                        <>\n                          <tbody key={innerIndex}>\n                            <tr>\n                              <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                              <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n                              <td style={{ fontWeight: 'bolder' }}>\n                                {testInput === '' ? (\n                                  '-'\n                                ) : isFile(testInput) ? (\n                                  <>\n                                    <button\n                                      className=\"btn btn-light\"\n                                      onClick={() => showReportHandler(testInput, innerIndex)}\n                                      disabled={requestedFileLoading[innerIndex]}\n                                    >\n                                      {requestedFileLoading[innerIndex]\n                                        ? 'Please Wait...'\n                                        : 'Show Report'}\n                                    </button>\n                                  </>\n                                ) : (\n                                  testInput\n                                )}\n                              </td>\n                              <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n                              <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n                            </tr>\n                          </tbody>\n                        </>\n                      )\n                    })}\n                  </table>\n                  <div className=\"row\">\n                    <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                      <div className=\"row\" style={{ marginTop: '1rem' }}>\n                        <div className=\"col-md-2 d-flex align-items-center\">\n                          <h5>Notes:</h5>\n                        </div>\n                        <div className=\"col-md-10 d-flex align-items-center\">\n                          <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                            <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n                  <div className=\"col-md-4\">\n                    <h6>Discription :</h6>{' '}\n                  </div>\n                  <div className=\"col-md-8\">\n                    <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n                  </div>\n                </div> */}\n                </div>\n                <hr />\n              </div>\n            </div>\n          </>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PatientShowDetails\n\n////working code\n\n// import React, { useEffect, useState } from 'react'\n// import PropTypes from 'prop-types'\n// import '../../dashboard/Dashboard.css'\n// import { faL } from '@fortawesome/free-solid-svg-icons'\n// import axios from 'axios'\n\n// const PatientShowDetails = ({ diagnosis, desc }) => {\n//   let url = process.env.REACT_APP_API_URL\n//   PatientShowDetails.propTypes = {\n//     diagnosis: PropTypes.func.isRequired,\n//     desc: PropTypes.func.isRequired,\n//   }\n//   const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n//   const [requestedFileLoading, setRequestedFileLoading] = useState({})\n\n//   // Reverse diagnosis array on component mount or whenever diagnosis changes\n//   useEffect(() => {\n//     if (diagnosis && Array.isArray(diagnosis)) {\n//       setReversedDiagnosis([...diagnosis].reverse())\n//     }\n//   }, [diagnosis])\n\n//   const isFile = (value) => {\n//     const regex = /^\\d{13}_/\n\n//     if (regex.test(value)) {\n//       return true\n//     } else {\n//       return false\n//     }\n//   }\n//   //no pdf\n//   const showReportHandler = async (filename, index) => {\n//     setRequestedFileLoading((prevState) => ({\n//       ...prevState,\n//       [index]: true,\n//     }))\n//     setTimeout(async () => {\n//       try {\n//         // Fetch the image data from the server\n//         const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n//           responseType: 'blob', // Treat response data as blob\n//         })\n\n//         // Create a Blob object from the response data\n//         const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n//         // Generate a URL for the Blob\n//         const blobUrl = URL.createObjectURL(blob)\n//         // Open the URL in a new tab\n//         window.open(blobUrl)\n//       } catch (error) {\n//         console.error('Error fetching image:', error)\n//       } finally {\n//         setRequestedFileLoading((prevState) => ({\n//           ...prevState,\n//           [index]: false,\n//         }))\n//       }\n//     }, 3000)\n//   }\n\n//   return (\n//     <div\n//       style={{\n//         maxHeight: '300px',\n//         overflowY: 'scroll',\n//         overflowX: 'hidden',\n//         marginTop: '20px',\n//       }}\n//     >\n//       {reversedDiagnosis?.map((elem, index) => {\n//         const date = elem?.date\n\n//         const datee = new Date(date)\n\n//         const options = {\n//           year: 'numeric',\n//           month: '2-digit',\n//           day: '2-digit',\n//           hour: '2-digit',\n//           minute: '2-digit',\n//           // second: '2-digit',\n//           hour12: true, // Set to true if you want 12-hour format with AM/PM\n//         }\n//         const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n//         return (\n//           <div key={index}>\n//             <div\n//               className=\"row\"\n//               // style={{ overflow: 'scroll !important', background: 'white' }}\n//             >\n//               <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n//                 <h5>Diagnose Date : {formattedDate}</h5>\n\n//                 <table\n//                   className=\"table\"\n//                   style={{\n//                     width: '90%',\n//                     border: '1px solid',\n//                     fontFamily: 'ui-rounded',\n//                     borderRadius: '10px',\n//                   }}\n//                 >\n//                   <colgroup>\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                   </colgroup>\n//                   <thead>\n//                     <tr>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Problems\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Test\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Test value\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Scale\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Scale value\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   {elem?.diagnosData?.map((element, innerIndex) => {\n//                     let { problem, scale, test, testInput, value } = element\n//                     return (\n//                       <>\n//                         <tbody key={innerIndex}>\n//                           <tr>\n//                             <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n//                             <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n//                             <td style={{ fontWeight: 'bolder' }}>\n//                               {testInput === '' ? (\n//                                 '-'\n//                               ) : isFile(testInput) ? (\n//                                 <>\n//                                   <button\n//                                     className=\"btn btn-light\"\n//                                     onClick={() => showReportHandler(testInput, index)}\n//                                     disabled={requestedFileLoading[index]}\n//                                   >\n//                                     {requestedFileLoading[index]\n//                                       ? 'Please wait...'\n//                                       : 'Show Report'}\n//                                   </button>\n//                                 </>\n//                               ) : (\n//                                 testInput\n//                               )}\n//                             </td>\n//                             <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n//                             <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n//                           </tr>\n//                         </tbody>\n//                       </>\n//                     )\n//                   })}\n//                 </table>\n//                 <div className=\"row\">\n//                   <div style={{ margin: '1rem auto 1rem 1rem' }}>\n//                     <div className=\"row\" style={{ marginTop: '1rem' }}>\n//                       <div className=\"col-md-2 d-flex align-items-center\">\n//                         <h5>Notes:</h5>\n//                       </div>\n//                       <div className=\"col-md-10 d-flex align-items-center\">\n//                         <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n//                           <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//                 {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n//                   <div className=\"col-md-4\">\n//                     <h6>Discription :</h6>{' '}\n//                   </div>\n//                   <div className=\"col-md-8\">\n//                     <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n//                   </div>\n//                 </div> */}\n//               </div>\n//               <hr />\n//             </div>\n//           </div>\n//         )\n//       })}\n//     </div>\n//   )\n// }\n\n// export default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, postFetchFile, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({ _id, getSearchByPatient, setIsAddNewDiagnosis, setIsDetailed }) => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n  }\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data?.test !== '' && data?.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data?.scale !== '' && data?.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')z\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        // Use Promise.all to wait for all uploads to finish\n        inputs.map(async (data, index) => {\n          if (typeof data.testInput !== 'string') {\n            const file = data.testInput\n            const formData = new FormData()\n            formData.append('file', file)\n            const response = await postFetchFile(\n              `${API_URL}/api/user/uploadPatientReport`,\n              formData,\n            )\n            if (response) {\n              inputs[index].testInput = response?.fileName\n            }\n          }\n        }),\n      )\n      // toast.dismiss()\n      setfileUploadingSpinner(false) // Set loading to false when all uploads are done\n    } catch (error) {\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n    try {\n      setLoading(true)\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: inputs,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n        setTimeout(() => {\n          setIsAddNewDiagnosis(false)\n          setIsDetailed(true)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n          setLoading(false)\n        }, 2000)\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = files[0]\n    setInputs(updatedInputs)\n    console.log('Guarv', inputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  return (\n    <>\n      {fileUploadingSpinner && (\n        <SpinnerOverlay loading={fileUploadingSpinner} message=\"Uploading Files\" />\n      )}\n      {loading && <SpinnerOverlay message=\"Adding Diagnosis\" />}\n      <div style={{ margin: '1rem auto 1rem 1rem' }}>\n        <div style={{ margin: '1rem auto 1rem 0' }}>\n          <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <form className=\"mb-2\">\n            {inputs?.map((input, index) => (\n              <div key={index} className=\"row mt-1 mb-2\">\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"problem\"\n                      value={input.problem}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Chief complaint</option>\n                      {problems?.map((problem, problemIndex) => (\n                        <option key={problemIndex} value={problem}>\n                          {problem}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"test\"\n                      value={input.test}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Test</option>\n                      {tests?.map((test, testIndex) => (\n                        <option key={testIndex} value={test.name}>\n                          {test.name}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                {input?.test === '' ? (\n                  ''\n                ) : (\n                  <div className=\"col-md-2\">\n                    {tests?.map((test, testIndex) => {\n                      if (test.name === input.test) {\n                        if (test?.inputType === 'text') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                placeholder=\"Enter test Value\"\n                                type=\"text\"\n                                name=\"testInput\"\n                                value={input.testInput}\n                                onChange={(event) => handleInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        } else if (test?.inputType === 'file') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                type=\"file\"\n                                name=\"testInput\"\n                                onChange={(event) => handleFileInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        }\n                      }\n                      return null\n                    })}\n                  </div>\n                )}\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"scale\"\n                      value={input.scale}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Scale</option>\n                      {scales?.map((scale, scaleIndex) => (\n                        <option key={scaleIndex} value={scale}>\n                          {scale}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <input\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto' }}\n                      placeholder=\"Enter Scale Value\"\n                      type=\"text\"\n                      name=\"value\"\n                      value={input.value}\n                      onChange={(event) => handleInputChange(index, event)}\n                    />\n                  </label>\n                </div>\n                <div className=\"col-md-2 d-flex justify-content-center\">\n                  {removeAndAddInput && (\n                    <button\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                      onClick={() => handleRemoveInput(index)}\n                    >\n                      Remove\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div className=\"d-flex justify-content-end\">\n              <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n                Add More\n              </button>\n            </div>\n          </form>\n          <div>\n            <textarea\n              rows={4}\n              className=\"form-control col-12\"\n              placeholder=\"Notes (Optional)\"\n              name=\"desc\"\n              value={desc}\n              onChange={(e) => setDesc(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"d-flex mt-2\">\n            <div className=\"w-auto\">\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['DateTimePicker']}>\n                  <DateTimePicker\n                    label=\"Next Appointment Date\"\n                    value={startingDate}\n                    onChange={handleStartingDateChange}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </div>\n          </div>\n          <div className=\"text-end\">\n            <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger mt-4 ms-2\"\n              style={{ width: '10rem' }}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  return (\n    <div>\n      {patientSearch?.map((patient) => {\n        const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n        const isDetailsOpen = selectedPatientId === _id\n        const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n        const inputDate = nextApointmentDate\n\n        const date = new Date(inputDate)\n        const formattedDate = date\n          .toLocaleString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={_id} className=\"row\">\n            <div style={{ marginTop: '2rem' }}>\n              <div className=\"card\" style={{ width: '100%' }}>\n                <div className=\"card-body overflow-auto \">\n                  <h5 className=\"card-title\"> CR No : {crn}</h5>\n                  <h6 className=\"card-subtitle mt-2\">\n                    <h5>Name : {name}</h5>\n                  </h6>\n                  <div style={{ display: 'flex', marginTop: '1rem' }}>\n                    {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                    <span style={{ display: 'flex' }}>\n                      <h6>Phone No. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                      <h6 style={{ fontWeight: 'normal' }}>\n                        {nextApointmentDate ? formattedDate : '-'}\n                      </h6>\n                    </span>\n                    {/* <p className=\"card-text\">Phone No. {phone}</p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Age : {age}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Sex : {sex}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Next Appointment Date : {formattedDate}\n                    </p> */}\n                  </div>\n                  <div className=\"text-end\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => handleToggleDetails(_id)}\n                    >\n                      {/* {isDetails ? 'Close Details' : 'Show Details'} */}\n                      Show Diagnosis\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      style={{ marginLeft: '2rem' }}\n                      onClick={() => handleAddDiagnosis(_id)}\n                    >\n                      Add New Diagnosis\n                    </button>\n                  </div>\n                  {isDetailsOpen && isDetails && (\n                    <div>\n                      <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                    </div>\n                  )}\n                  {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                    <div>\n                      <PatientAddNewRecord\n                        _id={_id}\n                        getSearchByPatient={getSearchByPatient}\n                        setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                        setIsDetailed={setIsDetailed}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: '',\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  // const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n  }, [])\n\n  // const fetchProblems = async () => {\n  //   try {\n  //     const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id?._id}`)\n  //     const problemFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'problem',\n  //     )\n  //     const testFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'test',\n  //     )\n  //     const scaleFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'scale',\n  //     )\n  //     console.log('Gaurav', problemFilter)\n  //     setTests(testFilter)\n  //     setScales(scaleFilter)\n  //     setProblems(problemFilter)\n  //   } catch (error) {\n  //     console.error('Error fetching problems:', error)\n  //   }\n  // }\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  console.log('problems', problems)\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      let searchData = search || location?.state?.crn\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      console.log('searchData', data)\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async () => {\n    // console.log('updatedFormData', inputs)\n\n    setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        // Use Promise.all to wait for all uploads to finish\n        inputs.map(async (data, index) => {\n          if (typeof data.testInput !== 'string') {\n            const file = data.testInput\n            const formData = new FormData()\n            formData.append('file', file)\n            const response = await postFetchFile(\n              `${API_URL}/api/user/uploadPatientReport`,\n              formData,\n            )\n            if (response) {\n              inputs[index].testInput = response?.fileName\n            }\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: inputs,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n\n    try {\n      // console.log('pre', updatedFormData)\\\n      const data = await postFetchData(`${API_URL}/api/patient/create`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n\n        setaddPatientLoader(true)\n        setData(false)\n        setTimeout(() => {\n          // toast.success('Patient Created Successfully')\n          setUpdateState(true)\n          setaddPatientLoader(false)\n          // setDiagnosis([])\n          setDesc('')\n          setStartingDate(null)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: '',\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message == 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      if (data.message == 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  // const handleSubmit = async () => {\n  //   console.log(inputs)\n  // }\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  //////// new updates\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = files[0]\n    setInputs(updatedInputs)\n    console.log('Guarv', inputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs)\n  }, [inputs])\n\n  //// testing codes\n\n  ////////////////////////////////////////////////////////////////////\n  // let [file, setFile] = useState('')\n  // const submitHandler = async () => {\n  //   try {\n  //     const formData = new FormData()\n  //     formData.append('file', file)\n  //     const response = await postFetchFile(`${API_URL}/api/user/uploadPatientReport`, formData)\n  //     console.log('File uploaded successfullsdsy:', response)\n  //   } catch (error) {\n  //     console.error('Error uploading file:', error)\n  //   }\n  // }\n  // const handleFileChange = (event) => {\n  //   setFile(event.target.files[0])\n  // }\n\n  ///////////////////////////\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div className=\"d-flex\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  // autoComplete={false}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n\n                {/* </button> */}\n                <button\n                  className=\"btn btn-primary\"\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  <button\n                    className=\"btn btn-danger text-light\"\n                    style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : (\n                  ''\n                )}\n              </div>\n              <div>\n                <button\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <>\n                {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n\n                <div className=\"content-to-be-blurred\">\n                  <div style={{ marginTop: '1rem' }}>\n                    <div>\n                      <hr />\n                      <h4>Patient Details</h4>\n\n                      <div>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Name <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control \"\n                                  name=\"name\"\n                                  value={formData.name}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, name: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Age <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"number\"\n                                  className=\"form-control \"\n                                  name=\"age\"\n                                  value={formData.age}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, age: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Sex <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <select\n                                  className=\"form-control \"\n                                  name=\"sex\"\n                                  value={formData.sex}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, sex: e.target.value })\n                                  }\n                                >\n                                  <option value=\"male\">Male</option>\n                                  <option value=\"female\">Female</option>\n                                  <option value=\"other\">Other</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row \">\n                          <div className=\"col-md-4 mt-4\">\n                            <div>\n                              <label className=\"col-lg-4 patientNamediv\">\n                                Phone No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\" col-lg-8 col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"text\"\n                                  name=\"phone\"\n                                  value={formData.phone}\n                                  onChange={(e) => {\n                                    if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                                      setFormData({ ...formData, phone: e.target.value })\n                                    }\n                                  }}\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-md-4 mt-4\">\n                            <div>\n                              <label className=\"col-sm-4  patientNamediv\">\n                                CR No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"test\"\n                                  name=\"crn\"\n                                  value={formData.crn}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, crn: e.target.value })\n                                  }\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr />\n                      <div style={{ margin: '1rem auto 1rem 0' }}>\n                        <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n                      </div>\n                      <div>\n                        <form className=\"mb-3\">\n                          {inputs.map((input, index) => (\n                            <div key={index} className=\"row mt-1 mb-2\">\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"problem\"\n                                    value={input.problem}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Chief complaint</option>\n                                    {problems.map((problem, problemIndex) => (\n                                      <option key={problemIndex} value={problem}>\n                                        {problem}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"test\"\n                                    value={input.test}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Test</option>\n                                    {tests.map((test, testIndex) => (\n                                      <option key={testIndex} value={test.name}>\n                                        {test.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              {input.test === '' ? (\n                                ''\n                              ) : (\n                                <div className=\"col-md-2\">\n                                  {tests.map((test, testIndex) => {\n                                    if (test.name === input.test) {\n                                      if (test.inputType === 'text') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '10rem' }}\n                                              placeholder=\"Enter test Value\"\n                                              type=\"text\"\n                                              name=\"testInput\"\n                                              value={input.testInput}\n                                              onChange={(event) => handleInputChange(index, event)}\n                                            />\n                                          </label>\n                                        )\n                                      } else if (test.inputType === 'file') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '10rem' }}\n                                              type=\"file\"\n                                              name=\"testInput\"\n                                              onChange={(event) =>\n                                                handleFileInputChange(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      }\n                                    }\n                                    return null\n                                  })}\n                                </div>\n                              )}\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"scale\"\n                                    value={input.scale}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Scale</option>\n                                    {scales.map((scale, scaleIndex) => (\n                                      <option key={scaleIndex} value={scale}>\n                                        {scale}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <input\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto' }}\n                                    placeholder=\"Enter Scale Value\"\n                                    type=\"text\"\n                                    name=\"value\"\n                                    value={input.value}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 d-flex justify-content-center\">\n                                {removeAndAddInput && (\n                                  <button\n                                    className=\"btn btn-danger\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveInput(index)}\n                                  >\n                                    Remove\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"d-flex justify-content-end\">\n                            <button\n                              className=\"btn btn-primary me-4\"\n                              type=\"button\"\n                              onClick={handleAddInput}\n                            >\n                              Add More\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                      <div>\n                        <textarea\n                          rows={4}\n                          className=\"form-control col-12\"\n                          placeholder=\"Notes (Optional)\"\n                          name=\"desc\"\n                          value={desc}\n                          onChange={(e) => setDesc(e.target.value)}\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"d-flex mt-2\">\n                        <div className=\"w-auto\">\n                          <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={['DateTimePicker']}>\n                              <DateTimePicker\n                                label=\"Next Appointment Date\"\n                                value={startingDate}\n                                onChange={handleStartingDateChange}\n                                // ampm={false}\n                              />\n                            </DemoContainer>\n                          </LocalizationProvider>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-end m-4\">\n                      <button className=\"btn btn-info mt-3 mx-2 w-auto\" onClick={handleSubmit}>\n                        Submit\n                      </button>\n                      <button className=\"btn btn-info mt-3 w-auto\" onClick={() => setData(false)}>\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '20vh',\n                      lineHeight: '20vh',\n                      textAlign: 'center',\n                      backgroundColor: 'white',\n                      marginTop: '10px',\n                    }}\n                  >\n                    {loader ? <Loader /> : 'No Data'}\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n    // <>\n    //   <h1>Gaurav</h1>\n    //   <input type=\"file\" onChange={handleFileChange}></input>\n    //   <button onClick={submitHandler}>submit</button>\n    // </>\n  )\n}\n\nexport default PatientPage\n"],"names":["_ref","diagnosis","desc","reversedDiagnosis","setReversedDiagnosis","useState","requestedFileLoading","setRequestedFileLoading","useEffect","Array","isArray","reverse","isFile","value","test","_jsx","style","maxHeight","overflowY","overflowX","marginTop","children","map","elem","index","_elem$diagnosData","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","_Fragment","_jsxs","className","margin","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","innerIndex","problem","scale","testInput","fontWeight","onClick","async","filename","prvState","response","axios","get","concat","process","responseType","blob","Blob","data","type","headers","blobUrl","URL","createObjectURL","window","open","error","console","showReportHandler","disabled","padding","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","fileUploadingSpinner","setfileUploadingSpinner","problems","setProblems","tests","setTests","scales","setScales","loading","setLoading","fetchProblems","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","name","scaleFilter","testFilter","_ref2","inputType","prevFormData","log","getPatientById","removeAndAddInput","setremoveAndAddInput","inputs","setInputs","handleInputChange","event","target","updatedInputs","handleAddInput","handleRemoveInput","splice","length","SpinnerOverlay","message","departmentName","onSubmit","e","preventDefault","toast","warning","Promise","all","file","FormData","append","postFetchFile","fileName","updatedFormData","nextApointmentDate","putFetchData","success","autoClose","setTimeout","input","appearance","height","onChange","problemIndex","testIndex","placeholder","handleFileInputChange","files","scaleIndex","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","ToastContainer","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","display","marginLeft","handleToggleDetails","patientId","prevState","handleAddDiagnosis","PatientShowDetails","PatientAddNewRecord","AddPatientLoader","Box","lineHeight","textAlign","CircularProgress","PatientPage","_location$state","location","useLocation","Number","state","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","doctor_id","_location$state2","_data$data","searchData","dateAndTime","setDateAndTime","_location$state3","_location$state4","justifyContent","paddingLeft","onKeyPress","key","clearSearch","color","required","_data$data2","postFetchData","backgroundColor","Loader","PatientInfoData"],"sourceRoot":""}