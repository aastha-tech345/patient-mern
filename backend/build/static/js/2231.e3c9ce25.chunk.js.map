{"version":3,"file":"static/js/2231.e3c9ce25.chunk.js","mappings":"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","sources":["constant.js","views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","views/pages/loader/Loader.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["// export const API_URL = 'http://localhost:8090'\nexport const API_URL = 'http://18.204.141.1:8090'\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nconst PatientShowDetails = ({ diagnosis, desc }) => {\n  // console.log('DateBuDat', Date())\n  PatientShowDetails.propTypes = {\n    diagnosis: PropTypes.func.isRequired,\n    desc: PropTypes.func.isRequired,\n  }\n  console.log('dia', diagnosis)\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n\n  // Reverse diagnosis array on component mount or whenever diagnosis changes\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n  return (\n    <div\n      style={{\n        maxHeight: '300px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        marginTop: '20px',\n      }}\n    >\n      {reversedDiagnosis?.map((elem) => {\n        const date = elem?.date\n\n        // let dateData = Number(date)\n        // const timestamp = dateData\n        // const datee = new Date(timestamp)\n\n        // // Adjusting for Indian time zone (UTC+5:30)\n        // datee.setHours(datee.getHours() + 5)\n        // datee.setMinutes(datee.getMinutes() + 30)\n\n        // const hours = datee.getHours()\n        // const am_pm = hours >= 12 ? 'PM' : 'AM'\n        // const formattedHours = hours % 12 || 12 // Convert 24-hour to 12-hour format\n\n        // const formattedDate = `${datee.getDate().toString().padStart(2, '0')}-${(\n        //   datee.getMonth() + 1\n        // )\n        //   .toString()\n        //   .padStart(2, '0')}-${datee.getFullYear()} ${formattedHours\n        //   .toString()\n        //   .padStart(2, '0')}:${datee.getMinutes().toString().padStart(2, '0')} ${am_pm}`\n\n        // console.log(formattedDate)\n        const datee = new Date(date)\n\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          // second: '2-digit',\n          hour12: true, // Set to true if you want 12-hour format with AM/PM\n        }\n        const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n        return (\n          <>\n            <div className=\"row\">\n              <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                <h5>Diagnose Date : {formattedDate}</h5>\n\n                <table\n                  className=\"table\"\n                  style={{\n                    width: '90%',\n                    border: '1px solid',\n                    fontFamily: 'ui-rounded',\n                    borderRadius: '10px',\n                  }}\n                >\n                  <colgroup>\n                    <col style={{ width: '31%' }} />\n                    <col style={{ width: '23%' }} />\n                    <col style={{ width: '23%' }} />\n                    <col style={{ width: '23%' }} />\n                  </colgroup>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Problems\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        VAS\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        ODI\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        MPSI\n                      </th>\n                    </tr>\n                  </thead>\n                  {elem.problem.map((element) => {\n                    let { name, scale1, scale2, scale3 } = element\n                    return (\n                      <>\n                        <tbody>\n                          <tr>\n                            <td style={{ fontWeight: 'bolder' }}>{name}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{scale1}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{scale2}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{scale3}</td>\n                          </tr>\n                        </tbody>\n                      </>\n                    )\n                  })}\n                </table>\n                <div className=\"row\">\n                  <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                    <div className=\"row\" style={{ marginTop: '1rem' }}>\n                      <div className=\"col-md-2 d-flex align-items-center\">\n                        <h5>Discription:</h5>\n                      </div>\n                      <div className=\"col-md-10 d-flex align-items-center\">\n                        <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                          <p style={{ margin: '0' }}>{elem.desc}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n                  <div className=\"col-md-4\">\n                    <h6>Discription :</h6>{' '}\n                  </div>\n                  <div className=\"col-md-8\">\n                    <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n                  </div>\n                </div> */}\n              </div>\n              <hr />\n            </div>\n          </>\n        )\n      })}\n      {/* <div className=\"row\">\n        <div style={{ margin: '1rem auto 1rem 1rem' }}>\n          <div className=\"row\" style={{ marginTop: '1rem' }}>\n            <div className=\"col-md-5\">\n              <h6>Discription :</h6>{' '}\n            </div>\n            <div className=\"col-md-7\">\n              <p>{desc}</p>\n            </div>\n            <div className=\"col-md-2\" style={{ paddingTop: '1rem' }}>\n              <h5>Discription:</h5>\n            </div>\n            <div className=\"col-md-10\">\n              <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem 1rem 2rem' }}>\n                <p>{desc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"row\">\n        <div style={{ margin: '1rem auto 1rem 1rem' }}>\n          <div className=\"row\" style={{ marginTop: '1rem' }}>\n            <div className=\"col-md-2 d-flex align-items-center\">\n              <h5>Discription:</h5>\n            </div>\n            <div className=\"col-md-10 d-flex align-items-center\">\n              <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                <p style={{ margin: '0' }}>{desc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  )\n}\n\nexport default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({ _id, getSearchByPatient, setIsAddNewDiagnosis, setIsDetailed }) => {\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n  }\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  const [problems, setProblems] = useState([])\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id}`)\n      setProblems(problems?.data?.data[0]?.problemName)\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleCheckboxChange = (problemName, checked) => {\n    console.log('dateHere', Date.now())\n    if (checked) {\n      setDiagnosis((prevDiagnosis) => [\n        ...prevDiagnosis,\n        {\n          problem: {\n            name: problemName,\n            scale1: '',\n            scale2: '',\n            scale3: '',\n          },\n          date: Date.now(),\n        },\n      ])\n    } else {\n      setDiagnosis((prevDiagnosis) =>\n        prevDiagnosis.filter((item) => item.problem.name !== problemName),\n      )\n    }\n  }\n\n  const handleInputChange = (problemName, key, value) => {\n    setDiagnosis((prevDiagnosis) =>\n      prevDiagnosis.map((item) => {\n        if (item.problem.name === problemName) {\n          return {\n            ...item,\n            problem: {\n              ...item.problem,\n              [key]: value,\n            },\n          }\n        }\n        return item\n      }),\n    )\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (diagnosis.length === 0) {\n      return toast.warning('Please select at least one problem')\n    }\n    try {\n      let dataP = []\n      diagnosis?.map((elem) => {\n        dataP.push(elem.problem)\n      })\n      // const updatedFormData = {\n      //   ...formData,\n      //   desc: formData.desc,\n      //   diagnosis: [diagnosis],\n      //   nextApointmentDate: startingDate,\n      // }\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            problem: dataP,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n        setTimeout(() => {\n          setIsAddNewDiagnosis(false)\n          setIsDetailed(true)\n        }, 2000)\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  return (\n    <div style={{ margin: '1rem auto 1rem 1rem' }}>\n      <div style={{ margin: '1rem auto 1rem 0' }}>\n        <h4>Diagnosis</h4>\n        <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-md-4 alignCenterAndMiddle\" style={{ border: '1px solid black' }}>\n              <h5 style={{ marginTop: '0.5rem' }}>Problems</h5>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"row\" style={{ border: '1px solid black' }}>\n                <div className=\"col-md-4 alignCenterAndMiddle\">\n                  <h5 style={{ marginTop: '0.5rem' }}>VAS</h5>\n                </div>\n                <div className=\"col-md-4 alignCenterAndMiddle\">\n                  <h5 style={{ marginTop: '0.5rem' }}>ODI</h5>\n                </div>\n                <div className=\"col-md-4 alignCenterAndMiddle\">\n                  <h5 style={{ marginTop: '0.5rem' }}>MPSI</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        {problems.map((problem, index) => (\n          <div key={index} style={{ alignItems: 'center', marginBottom: '10px' }}>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <input\n                  type=\"checkbox\"\n                  value={problem.name}\n                  onChange={(e) => handleCheckboxChange(problem.name, e.target.checked)}\n                />\n                <label>{problem.name}</label>\n              </div>\n              <div className=\"col-sm-8\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Scale 1\"\n                      value={\n                        diagnosis.find((item) => item.problem.name === problem.name)?.problem\n                          .scale1 || ''\n                      }\n                      onChange={(e) => handleInputChange(problem.name, 'scale1', e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Scale 2\"\n                      value={\n                        diagnosis.find((item) => item.problem.name === problem.name)?.problem\n                          .scale2 || ''\n                      }\n                      onChange={(e) => handleInputChange(problem.name, 'scale2', e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Scale 3\"\n                      value={\n                        diagnosis.find((item) => item.problem.name === problem.name)?.problem\n                          .scale3 || ''\n                      }\n                      onChange={(e) => handleInputChange(problem.name, 'scale3', e.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n        <div>\n          <textarea\n            rows={4}\n            className=\"form-control col-12\"\n            placeholder=\"description\"\n            name=\"desc\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className=\"d-flex mt-2\">\n          <div className=\"w-50\">\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DemoContainer components={['DateTimePicker']}>\n                <DateTimePicker\n                  label=\"Next Appointment Date\"\n                  value={startingDate}\n                  onChange={handleStartingDateChange}\n                />\n              </DemoContainer>\n            </LocalizationProvider>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary mt-4\">\n          Submit\n        </button>\n      </form>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  return (\n    <div>\n      {patientSearch.map((patient) => {\n        const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n        const isDetailsOpen = selectedPatientId === _id\n        const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n        const inputDate = nextApointmentDate\n\n        const date = new Date(inputDate)\n        const formattedDate = date\n          .toLocaleString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={_id} className=\"row\">\n            <div style={{ marginTop: '2rem' }}>\n              <div className=\"card\" style={{ width: '100%' }}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Patient CRN No : {crn}</h5>\n                  <h6 className=\"card-subtitle mt-2\">\n                    <h5>Name : {name}</h5>\n                  </h6>\n                  <div style={{ display: 'flex', marginTop: '1rem' }}>\n                    {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                    <span style={{ display: 'flex' }}>\n                      <h6>Phone No. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                      <h6 style={{ fontWeight: 'normal' }}>{formattedDate}</h6>\n                    </span>\n                    {/* <p className=\"card-text\">Phone No. {phone}</p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Age : {age}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Sex : {sex}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Next Appointment Date : {formattedDate}\n                    </p> */}\n                  </div>\n                  <div style={{ textAlign: 'end' }}>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => handleToggleDetails(_id)}\n                    >\n                      {/* {isDetails ? 'Close Details' : 'Show Details'} */}\n                      Show Details\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      style={{ marginLeft: '2rem' }}\n                      onClick={() => handleAddDiagnosis(_id)}\n                    >\n                      Add New Diagnosis\n                    </button>\n                  </div>\n                  {isDetailsOpen && isDetails && (\n                    <div>\n                      <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                    </div>\n                  )}\n                  {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                    <div>\n                      <PatientAddNewRecord\n                        _id={_id}\n                        getSearchByPatient={getSearchByPatient}\n                        setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                        setIsDetailed={setIsDetailed}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetchData } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { API_URL } from 'src/constant'\n\nconst PatientPage = () => {\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: '',\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id}`)\n\n      setProblems(problems?.data?.data[0]?.problemName)\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n  console.log('problems', problems)\n  const handleCheckboxChange = (problemName, checked) => {\n    if (checked) {\n      setDiagnosis((prevDiagnosis) => [\n        ...prevDiagnosis,\n        {\n          problem: {\n            name: problemName,\n            scale1: '',\n            scale2: '',\n            scale3: '',\n          },\n          // date: Date(),\n        },\n      ])\n    } else {\n      setDiagnosis((prevDiagnosis) =>\n        prevDiagnosis.filter((item) => item.problem.name !== problemName),\n      )\n    }\n  }\n\n  const handleInputChange = (problemName, key, value) => {\n    setDiagnosis((prevDiagnosis) =>\n      prevDiagnosis.map((item) => {\n        if (item.problem.name === problemName) {\n          return {\n            ...item,\n            problem: {\n              ...item.problem,\n              [key]: value,\n            },\n          }\n        }\n        return item\n      }),\n    )\n  }\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      setLoader(true)\n\n      const data = await getFetch(`${API_URL}/api/patient/${search}/${patientRecord?._id}`)\n\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async () => {\n    console.log('hello')\n    setSearch('')\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (diagnosis.length === 0) {\n      return toast.warning('Please select at least one problem')\n    }\n\n    let dataP = []\n    diagnosis?.map((elem) => {\n      dataP.push(elem.problem)\n    })\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          problem: dataP,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n    console.log('updatedFormData', updatedFormData)\n    try {\n      console.log('pre', updatedFormData)\n      const data = await postFetchData(`${API_URL}/api/patient/create`, updatedFormData)\n      console.log('Data', data)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n        setaddPatientLoader(true)\n        setData(false)\n\n        setTimeout(() => {\n          // toast.success('Patient Created Successfully')\n          setUpdateState(true)\n          setaddPatientLoader(false)\n          setDiagnosis([])\n          setDesc('')\n          setStartingDate(null)\n        }, 2000)\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: '',\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message == 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n      }\n      if (data.message == 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n      }\n      console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div className=\"d-flex\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CRN or PhoneNumber\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  // autoComplete={false}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n\n                {search?.length ? (\n                  <FontAwesomeIcon\n                    icon={faXmark}\n                    style={{\n                      marginLeft: '1rem',\n                      borderRadius: '5px',\n                      position: 'absolute',\n                      marginLeft: '240px',\n                      marginTop: '10px',\n                      cursor: 'pointer',\n                    }}\n                    onClick={clearSearch}\n                  />\n                ) : (\n                  ''\n                )}\n                {/* </button> */}\n                <button\n                  className=\"btn btn-primary\"\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n              </div>\n              <div>\n                <button\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <div style={{ marginTop: '1rem' }}>\n                <div>\n                  <hr />\n                  <h4>Patient Details</h4>\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <div>\n                        <label className=\"col-sm-2 mt-2 patientNamediv\">Name*</label>\n                        <div className=\"col-sm-8\">\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"name\"\n                            value={formData.name}\n                            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div>\n                        <label className=\"col-sm-2 mt-2 patientNamediv\">Age*</label>\n                        <div className=\"col-sm-8\">\n                          <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            name=\"age\"\n                            value={formData.age}\n                            onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div>\n                        <label className=\"col-sm-2 mt-2 patientNamediv\">Sex*</label>\n                        <div className=\"col-sm-8\">\n                          <select\n                            className=\"form-control\"\n                            name=\"sex\"\n                            value={formData.sex}\n                            onChange={(e) => setFormData({ ...formData, sex: e.target.value })}\n                          >\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                            <option value=\"other\">Other</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row mt-4\">\n                      <div className=\"col-md-5\">\n                        <div>\n                          <label className=\"col-sm-4 mt-2 patientNamediv\">Phone Number*</label>\n                          <div className=\"col-sm-7\">\n                            <input\n                              className=\"form-control\"\n                              type=\"tel\"\n                              name=\"phone\"\n                              value={formData.phone}\n                              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                              required={true}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-5\">\n                        <div>\n                          <label className=\"col-sm-4 mt-2 patientNamediv\">CRN Number*</label>\n                          <div className=\"col-sm-7\">\n                            <input\n                              className=\"form-control\"\n                              type=\"tel\"\n                              name=\"crn\"\n                              value={formData.crn}\n                              onChange={(e) => setFormData({ ...formData, crn: e.target.value })}\n                              required={true}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                  <div style={{ margin: '1rem auto 1rem 0' }}>\n                    <h4>Diagnosis</h4>\n                    <div className=\"row\">\n                      <div className=\"row\">\n                        <div\n                          className=\"col-md-4 alignCenterAndMiddle\"\n                          style={{ border: '1px solid black' }}\n                        >\n                          <h5 style={{ marginTop: '0.5rem' }}>Problems</h5>\n                        </div>\n                        <div className=\"col-md-8\">\n                          <div className=\"row\" style={{ border: '1px solid black' }}>\n                            <div className=\"col-md-4 alignCenterAndMiddle\">\n                              <h5 style={{ marginTop: '0.5rem' }}>VAS</h5>\n                            </div>\n                            <div className=\"col-md-4 alignCenterAndMiddle\">\n                              <h5 style={{ marginTop: '0.5rem' }}>ODI</h5>\n                            </div>\n                            <div className=\"col-md-4 alignCenterAndMiddle\">\n                              <h5 style={{ marginTop: '0.5rem' }}>MPSI</h5>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <form>\n                    {problems.map((problem, index) => (\n                      <div key={index} style={{ alignItems: 'center', marginBottom: '10px' }}>\n                        <div className=\"row\">\n                          <div className=\"col-md-4 \">\n                            <input\n                              type=\"checkbox\"\n                              value={problem.name}\n                              onChange={(e) => handleCheckboxChange(problem.name, e.target.checked)}\n                            />\n                            <label>&nbsp;{problem.name}</label>\n                          </div>\n                          <div className=\"col-sm-8\">\n                            <div className=\"row\">\n                              <div className=\"col-sm-4\">\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Scale 1\"\n                                  value={\n                                    diagnosis.find((item) => item.problem.name === problem.name)\n                                      ?.problem.scale1 || ''\n                                  }\n                                  onChange={(e) =>\n                                    handleInputChange(problem.name, 'scale1', e.target.value)\n                                  }\n                                  disabled={\n                                    !diagnosis.some((item) => item.problem.name === problem.name)\n                                  }\n                                />\n                              </div>\n                              <div className=\"col-sm-4\">\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Scale 2\"\n                                  value={\n                                    diagnosis.find((item) => item.problem.name === problem.name)\n                                      ?.problem.scale2 || ''\n                                  }\n                                  onChange={(e) =>\n                                    handleInputChange(problem.name, 'scale2', e.target.value)\n                                  }\n                                  disabled={\n                                    !diagnosis.some((item) => item.problem.name === problem.name)\n                                  }\n                                />\n                              </div>\n                              <div className=\"col-sm-4\">\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Scale 3\"\n                                  value={\n                                    diagnosis.find((item) => item.problem.name === problem.name)\n                                      ?.problem.scale3 || ''\n                                  }\n                                  onChange={(e) =>\n                                    handleInputChange(problem.name, 'scale3', e.target.value)\n                                  }\n                                  disabled={\n                                    !diagnosis.some((item) => item.problem.name === problem.name)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </form>\n                  <div>\n                    <textarea\n                      rows={4}\n                      className=\"form-control col-12\"\n                      placeholder=\"Prescription\"\n                      name=\"desc\"\n                      value={desc}\n                      onChange={(e) => setDesc(e.target.value)}\n                    ></textarea>\n                  </div>\n                </div>\n                <div>\n                  {/* <DateTimePicker /> */}\n                  {/* <LocalizationProvider>\n                    <DateTimePicker\n                      label=\"DateTimePicker\"\n                      value={dateAndTime}\n                      onChange={(newValue) => {\n                        setDateAndTime(newValue)\n                      }}\n                    />\n                  </LocalizationProvider> */}\n                  <div className=\"d-flex mt-2\">\n                    <div className=\"w-50\">\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DemoContainer components={['DateTimePicker']}>\n                          <DateTimePicker\n                            label=\"Next Appointment Date\"\n                            value={startingDate}\n                            onChange={handleStartingDateChange}\n                          />\n                        </DemoContainer>\n                      </LocalizationProvider>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-end m-4\">\n                  <button\n                    className=\"btn btn-info mt-3 mx-2\"\n                    style={{ width: '10%' }}\n                    onClick={handleSubmit}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"btn btn-info mt-3\"\n                    style={{ width: '10%' }}\n                    onClick={() => setData(false)}\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '20vh',\n                      lineHeight: '20vh',\n                      textAlign: 'center',\n                      backgroundColor: 'white',\n                      marginTop: '10px',\n                    }}\n                  >\n                    {loader ? <Loader /> : 'No Data'}\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientPage\n"],"names":["API_URL","_ref","diagnosis","desc","console","log","reversedDiagnosis","setReversedDiagnosis","useState","useEffect","Array","isArray","reverse","_jsx","style","maxHeight","overflowY","overflowX","marginTop","children","map","elem","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","_Fragment","_jsxs","className","margin","width","border","fontFamily","borderRadius","scope","background","problem","element","name","scale1","scale2","scale3","fontWeight","padding","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","patientData","localStorage","getItem","patientRecord","JSON","parse","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","problems","setProblems","fetchProblems","async","_problems$data","_problems$data$data$","getFetch","concat","department_id","data","problemName","error","handleInputChange","key","value","prevDiagnosis","item","prevFormData","getPatientById","onSubmit","e","preventDefault","length","toast","warning","dataP","push","updatedFormData","nextApointmentDate","putFetchData","success","autoClose","setTimeout","index","_diagnosis$find","_diagnosis$find2","_diagnosis$find3","alignItems","marginBottom","type","onChange","handleCheckboxChange","checked","target","now","filter","placeholder","find","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","ToastContainer","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","display","marginLeft","textAlign","onClick","handleToggleDetails","patientId","prevState","handleAddDiagnosis","PatientShowDetails","PatientAddNewRecord","Loader","Box","height","lineHeight","backgroundColor","CircularProgress","AddPatientLoader","PatientPage","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","doctor_id","_data$data","dateAndTime","setDateAndTime","justifyContent","paddingLeft","FontAwesomeIcon","icon","faXmark","position","cursor","clearSearch","required","disabled","some","_data$data2","postFetchData","message","PatientInfoData"],"sourceRoot":""}