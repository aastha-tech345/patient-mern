{"version":3,"file":"static/js/4701.29e94eb5.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","views/pages/loader/Loader.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport '../../dashboard/Dashboard.css'\nconst PatientShowDetails = ({ diagnosis, desc }) => {\n  // console.log('DateBuDat', Date())\n  console.log('Guarv', diagnosis)\n  PatientShowDetails.propTypes = {\n    diagnosis: PropTypes.func.isRequired,\n    desc: PropTypes.func.isRequired,\n  }\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n\n  // Reverse diagnosis array on component mount or whenever diagnosis changes\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n  return (\n    <div\n      style={{\n        maxHeight: '300px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        marginTop: '20px',\n      }}\n    >\n      {reversedDiagnosis?.map((elem) => {\n        const date = elem?.date\n\n        // let dateData = Number(date)\n        // const timestamp = dateData\n        // const datee = new Date(timestamp)\n\n        // // Adjusting for Indian time zone (UTC+5:30)\n        // datee.setHours(datee.getHours() + 5)\n        // datee.setMinutes(datee.getMinutes() + 30)\n\n        // const hours = datee.getHours()\n        // const am_pm = hours >= 12 ? 'PM' : 'AM'\n        // const formattedHours = hours % 12 || 12 // Convert 24-hour to 12-hour format\n\n        // const formattedDate = `${datee.getDate().toString().padStart(2, '0')}-${(\n        //   datee.getMonth() + 1\n        // )\n        //   .toString()\n        //   .padStart(2, '0')}-${datee.getFullYear()} ${formattedHours\n        //   .toString()\n        //   .padStart(2, '0')}:${datee.getMinutes().toString().padStart(2, '0')} ${am_pm}`\n\n        // console.log(formattedDate)\n        const datee = new Date(date)\n\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          // second: '2-digit',\n          hour12: true, // Set to true if you want 12-hour format with AM/PM\n        }\n        const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n        return (\n          <>\n            <div\n              className=\"row\"\n              // style={{ overflow: 'scroll !important', background: 'white' }}\n            >\n              <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n                <h5>Diagnose Date : {formattedDate}</h5>\n\n                <table\n                  className=\"table\"\n                  style={{\n                    width: '90%',\n                    border: '1px solid',\n                    fontFamily: 'ui-rounded',\n                    borderRadius: '10px',\n                  }}\n                >\n                  <colgroup>\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                  </colgroup>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Problems\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Test\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Test value\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Scale\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Scale value\n                      </th>\n                    </tr>\n                  </thead>\n                  {elem.diagnosData.map((element) => {\n                    let { problem, scale, test, testInput, value } = element\n                    return (\n                      <>\n                        <tbody>\n                          <tr>\n                            <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n                            <td style={{ fontWeight: 'bolder' }}>\n                              {testInput === '' ? '-' : testInput}\n                            </td>\n                            <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n                          </tr>\n                        </tbody>\n                      </>\n                    )\n                  })}\n                </table>\n                <div className=\"row\">\n                  <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                    <div className=\"row\" style={{ marginTop: '1rem' }}>\n                      <div className=\"col-md-2 d-flex align-items-center\">\n                        <h5>Notes:</h5>\n                      </div>\n                      <div className=\"col-md-10 d-flex align-items-center\">\n                        <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                          <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n                  <div className=\"col-md-4\">\n                    <h6>Discription :</h6>{' '}\n                  </div>\n                  <div className=\"col-md-8\">\n                    <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n                  </div>\n                </div> */}\n              </div>\n              <hr />\n            </div>\n          </>\n        )\n      })}\n      {/* <div className=\"row\">\n        <div style={{ margin: '1rem auto 1rem 1rem' }}>\n          <div className=\"row\" style={{ marginTop: '1rem' }}>\n            <div className=\"col-md-5\">\n              <h6>Discription :</h6>{' '}\n            </div>\n            <div className=\"col-md-7\">\n              <p>{desc}</p>\n            </div>\n            <div className=\"col-md-2\" style={{ paddingTop: '1rem' }}>\n              <h5>Discription:</h5>\n            </div>\n            <div className=\"col-md-10\">\n              <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem 1rem 2rem' }}>\n                <p>{desc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"row\">\n        <div style={{ margin: '1rem auto 1rem 1rem' }}>\n          <div className=\"row\" style={{ marginTop: '1rem' }}>\n            <div className=\"col-md-2 d-flex align-items-center\">\n              <h5>Discription:</h5>\n            </div>\n            <div className=\"col-md-10 d-flex align-items-center\">\n              <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                <p style={{ margin: '0' }}>{desc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  )\n  // return (\n  //   <>\n  //     <h1>Gaurav</h1>\n  //   </>\n  // )\n}\n\nexport default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({ _id, getSearchByPatient, setIsAddNewDiagnosis, setIsDetailed }) => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n  }\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  // const fetchProblems = async () => {\n  //   try {\n  //     const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id?._id}`)\n  //     setProblems(problems?.data?.data[0]?.problemName)\n  //   } catch (error) {\n  //     console.error('Error fetching problems:', error)\n  //   }\n  // }\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map((test) => test.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  // const handleCheckboxChange = (problemName, checked) => {\n  //   console.log('dateHere', Date.now())\n  //   if (checked) {\n  //     setDiagnosis((prevDiagnosis) => [\n  //       ...prevDiagnosis,\n  //       {\n  //         problem: {\n  //           name: problemName,\n  //           scale1: '',\n  //           scale2: '',\n  //           scale3: '',\n  //         },\n  //         date: Date.now(),\n  //       },\n  //     ])\n  //   } else {\n  //     setDiagnosis((prevDiagnosis) =>\n  //       prevDiagnosis.filter((item) => item.problem.name !== problemName),\n  //     )\n  //   }\n  // }\n\n  // const handleInputChange = (problemName, key, value) => {\n  //   setDiagnosis((prevDiagnosis) =>\n  //     prevDiagnosis.map((item) => {\n  //       if (item.problem.name === problemName) {\n  //         return {\n  //           ...item,\n  //           problem: {\n  //             ...item.problem,\n  //             [key]: value,\n  //           },\n  //         }\n  //       }\n  //       return item\n  //     }),\n  //   )\n  // }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    try {\n      // let dataP = []\n      // diagnosis?.map((elem) => {\n      //   dataP.push(elem.problem)\n      // })\n      // const updatedFormData = {\n      //   ...formData,\n      //   desc: formData.desc,\n      //   diagnosis: [diagnosis],\n      //   nextApointmentDate: startingDate,\n      // }\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: inputs,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n        setTimeout(() => {\n          setIsAddNewDiagnosis(false)\n          setIsDetailed(true)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  return (\n    <div style={{ margin: '1rem auto 1rem 1rem' }}>\n      <div style={{ margin: '1rem auto 1rem 0' }}>\n        <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        {/* <div className=\"row\">\n          <div className=\"row\">\n            <div className=\"col-md-4 alignCenterAndMiddle\" style={{ border: '1px solid black' }}>\n              <h5 style={{ marginTop: '0.5rem' }}>Problems</h5>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"row\" style={{ border: '1px solid black' }}>\n                <div className=\"col-md-4 alignCenterAndMiddle\">\n                  <h5 style={{ marginTop: '0.5rem' }}>VAS</h5>\n                </div>\n                <div className=\"col-md-4 alignCenterAndMiddle\">\n                  <h5 style={{ marginTop: '0.5rem' }}>ODI</h5>\n                </div>\n                <div className=\"col-md-4 alignCenterAndMiddle\">\n                  <h5 style={{ marginTop: '0.5rem' }}>MPSI</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n      </div>\n      <form onSubmit={handleSubmit}>\n        {/* {problems.map((problem, index) => (\n          <div key={index} style={{ alignItems: 'center', marginBottom: '10px' }}>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <input\n                  type=\"checkbox\"\n                  value={problem.name}\n                  onChange={(e) => handleCheckboxChange(problem.name, e.target.checked)}\n                />\n                <label>&nbsp;{problem.name}</label>\n              </div>\n              <div className=\"col-sm-8\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Scale 1\"\n                      value={\n                        diagnosis.find((item) => item.problem.name === problem.name)?.problem\n                          .scale1 || ''\n                      }\n                      onChange={(e) => handleInputChange(problem.name, 'scale1', e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Scale 2\"\n                      value={\n                        diagnosis.find((item) => item.problem.name === problem.name)?.problem\n                          .scale2 || ''\n                      }\n                      onChange={(e) => handleInputChange(problem.name, 'scale2', e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-sm-4\">\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Scale 3\"\n                      value={\n                        diagnosis.find((item) => item.problem.name === problem.name)?.problem\n                          .scale3 || ''\n                      }\n                      onChange={(e) => handleInputChange(problem.name, 'scale3', e.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))} */}\n        <form className=\"mb-2\">\n          {inputs.map((input, index) => (\n            <div key={index} className=\"row mt-1 mb-2\">\n              <div className=\"col-md-2\">\n                <label>\n                  <select\n                    className=\"form-control \"\n                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                    name=\"problem\"\n                    value={input.problem}\n                    onChange={(event) => handleInputChange(index, event)}\n                  >\n                    <option value=\"\">Chief complaint</option>\n                    {problems.map((problem, problemIndex) => (\n                      <option key={problemIndex} value={problem}>\n                        {problem}\n                      </option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n              <div className=\"col-md-2\">\n                <label>\n                  <select\n                    className=\"form-control \"\n                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                    name=\"test\"\n                    value={input.test}\n                    onChange={(event) => handleInputChange(index, event)}\n                  >\n                    <option value=\"\">Test</option>\n                    {tests.map((test, testIndex) => (\n                      <option key={testIndex} value={test}>\n                        {test}\n                      </option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n              <div className=\"col-md-2\">\n                <label>\n                  <input\n                    className=\"form-control \"\n                    style={{ width: '10rem' }}\n                    placeholder=\"Enter test Value\"\n                    type=\"text\"\n                    name=\"testInput\"\n                    value={input.testInput}\n                    onChange={(event) => handleInputChange(index, event)}\n                  />\n                </label>\n              </div>\n              <div className=\"col-md-2\">\n                <label>\n                  <select\n                    className=\"form-control \"\n                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                    name=\"scale\"\n                    value={input.scale}\n                    onChange={(event) => handleInputChange(index, event)}\n                  >\n                    <option value=\"\">Select Scale</option>\n                    {scales.map((scale, scaleIndex) => (\n                      <option key={scaleIndex} value={scale}>\n                        {scale}\n                      </option>\n                    ))}\n                  </select>\n                </label>\n              </div>\n              <div className=\"col-md-2\">\n                <label>\n                  <input\n                    className=\"form-control \"\n                    style={{ width: '10rem', appearance: 'auto' }}\n                    placeholder=\"Enter Scale Value\"\n                    type=\"text\"\n                    name=\"value\"\n                    value={input.value}\n                    onChange={(event) => handleInputChange(index, event)}\n                  />\n                </label>\n              </div>\n              <div className=\"col-md-2 d-flex justify-content-center\">\n                {removeAndAddInput && (\n                  <button\n                    className=\"btn btn-danger\"\n                    type=\"button\"\n                    onClick={() => handleRemoveInput(index)}\n                  >\n                    Remove\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n          <div className=\"d-flex justify-content-end\">\n            <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n              Add More\n            </button>\n          </div>\n        </form>\n        <div>\n          <textarea\n            rows={4}\n            className=\"form-control col-12\"\n            placeholder=\"Notes : (Optional)\"\n            name=\"desc\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className=\"d-flex mt-2\">\n          <div className=\"w-auto\">\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DemoContainer components={['DateTimePicker']}>\n                <DateTimePicker\n                  label=\"Next Appointment Date\"\n                  value={startingDate}\n                  onChange={handleStartingDateChange}\n                />\n              </DemoContainer>\n            </LocalizationProvider>\n          </div>\n        </div>\n        <div className=\"text-end\">\n          <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n            Submit\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-danger mt-4 ms-2\"\n            style={{ width: '10rem' }}\n            onClick={() => handleClose()}\n          >\n            Close\n          </button>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  return (\n    <div>\n      {patientSearch?.map((patient) => {\n        const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n        const isDetailsOpen = selectedPatientId === _id\n        const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n        const inputDate = nextApointmentDate\n\n        const date = new Date(inputDate)\n        const formattedDate = date\n          .toLocaleString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={_id} className=\"row\">\n            <div style={{ marginTop: '2rem' }}>\n              <div className=\"card\" style={{ width: '100%' }}>\n                <div className=\"card-body overflow-auto \">\n                  <h5 className=\"card-title\">Patient CR No : {crn}</h5>\n                  <h6 className=\"card-subtitle mt-2\">\n                    <h5>Name : {name}</h5>\n                  </h6>\n                  <div style={{ display: 'flex', marginTop: '1rem' }}>\n                    {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                    <span style={{ display: 'flex' }}>\n                      <h6>Phone No. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                      <h6 style={{ fontWeight: 'normal' }}>{formattedDate}</h6>\n                    </span>\n                    {/* <p className=\"card-text\">Phone No. {phone}</p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Age : {age}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Sex : {sex}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Next Appointment Date : {formattedDate}\n                    </p> */}\n                  </div>\n                  <div className=\"text-end\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => handleToggleDetails(_id)}\n                    >\n                      {/* {isDetails ? 'Close Details' : 'Show Details'} */}\n                      Show Diagnosis\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      style={{ marginLeft: '2rem' }}\n                      onClick={() => handleAddDiagnosis(_id)}\n                    >\n                      Add New Diagnosis\n                    </button>\n                  </div>\n                  {isDetailsOpen && isDetails && (\n                    <div>\n                      <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                    </div>\n                  )}\n                  {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                    <div>\n                      <PatientAddNewRecord\n                        _id={_id}\n                        getSearchByPatient={getSearchByPatient}\n                        setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                        setIsDetailed={setIsDetailed}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetchData } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\n// import { API_URL } from 'src/constant'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: '',\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  // const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n  }, [])\n\n  // const fetchProblems = async () => {\n  //   try {\n  //     const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id?._id}`)\n  //     const problemFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'problem',\n  //     )\n  //     const testFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'test',\n  //     )\n  //     const scaleFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'scale',\n  //     )\n  //     console.log('Gaurav', problemFilter)\n  //     setTests(testFilter)\n  //     setScales(scaleFilter)\n  //     setProblems(problemFilter)\n  //   } catch (error) {\n  //     console.error('Error fetching problems:', error)\n  //   }\n  // }\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map((test) => test.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  console.log('problems', problems)\n\n  // const handleCheckboxChange = (problemName, checked) => {\n  //   if (checked) {\n  //     setDiagnosis((prevDiagnosis) => [\n  //       ...prevDiagnosis,\n  //       {\n  //         problem: {\n  //           name: problemName,\n  //           scale1: '',\n  //           scale2: '',\n  //           scale3: '',\n  //         },\n  //         // date: Date(),\n  //       },\n  //     ])\n  //   } else {\n  //     setDiagnosis((prevDiagnosis) =>\n  //       prevDiagnosis.filter((item) => item.problem.name !== problemName),\n  //     )\n  //   }\n  // }\n\n  // const handleInputChange = (problemName, key, value) => {\n  //   setDiagnosis((prevDiagnosis) =>\n  //     prevDiagnosis.map((item) => {\n  //       if (item.problem.name === problemName) {\n  //         return {\n  //           ...item,\n  //           problem: {\n  //             ...item.problem,\n  //             [key]: value,\n  //           },\n  //         }\n  //       }\n  //       return item\n  //     }),\n  //   )\n  // }\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      let searchData = search || location?.state?.crn\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      console.log('searchData', data)\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async () => {\n    setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n\n    // let dataP = []\n    // inputs?.map((elem) => {\n    //   dataP.push(elem.problem)\n    // })\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: inputs,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n\n    // console.log('updatedFormData', updatedFormData)\n    try {\n      // console.log('pre', updatedFormData)\\\n      const data = await postFetchData(`${API_URL}/api/patient/create`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n\n        setaddPatientLoader(true)\n        setData(false)\n        setTimeout(() => {\n          // toast.success('Patient Created Successfully')\n          setUpdateState(true)\n          setaddPatientLoader(false)\n          // setDiagnosis([])\n          setDesc('')\n          setStartingDate(null)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: '',\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message == 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n      }\n      if (data.message == 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n      }\n      console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  // const handleSubmit = async () => {\n  //   console.log(inputs)\n  // }\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  //////// new updates\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs)\n  }, [inputs])\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div className=\"d-flex\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  // autoComplete={false}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n\n                {/* </button> */}\n                <button\n                  className=\"btn btn-primary\"\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  // <FontAwesomeIcon\n                  //   icon={faXmark}\n                  //   style={{\n                  //     marginLeft: '1rem',\n                  //     borderRadius: '5px',\n                  //     position: 'absolute',\n                  //     marginLeft: '240px',\n                  //     marginTop: '10px',\n                  //     cursor: 'pointer',\n                  //   }}\n                  //   onClick={clearSearch}\n                  // />\n                  <button\n                    className=\"btn btn-danger text-light\"\n                    style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : (\n                  ''\n                )}\n              </div>\n              <div>\n                <button\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <div style={{ marginTop: '1rem' }}>\n                <div>\n                  <hr />\n                  <h4>Patient Details</h4>\n                  {/* <h1 className=\"redColor\">Hero</h1> */}\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div>\n                          <label className=\"col-sm-4 mt-2 patientNamediv\">\n                            Name <span style={{ color: 'red' }}>*</span>\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control \"\n                              name=\"name\"\n                              value={formData.name}\n                              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div>\n                          <label className=\"col-sm-4 mt-2 patientNamediv\">\n                            Age <span style={{ color: 'red' }}>*</span>\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <input\n                              type=\"number\"\n                              className=\"form-control \"\n                              name=\"age\"\n                              value={formData.age}\n                              onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div>\n                          <label className=\"col-sm-4 mt-2 patientNamediv\">\n                            Sex <span style={{ color: 'red' }}>*</span>\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <select\n                              className=\"form-control \"\n                              name=\"sex\"\n                              value={formData.sex}\n                              onChange={(e) => setFormData({ ...formData, sex: e.target.value })}\n                            >\n                              <option value=\"male\">Male</option>\n                              <option value=\"female\">Female</option>\n                              <option value=\"other\">Other</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row \">\n                      {/* <div className=\"col-md-5\">\n                        <div>\n                          <label className=\"col-sm-4 mt-2 patientNamediv\">Phone Number*</label>\n                          <div className=\"col-sm-7\">\n                            <input\n                              className=\"form-control\"\n                              type=\"phone\"\n                              name=\"phone\"\n                              value={formData.phone}\n                              onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                              required={true}\n                            />\n                          </div>\n                        </div>\n                      </div> */}\n                      <div className=\"col-md-4 mt-4\">\n                        <div>\n                          <label className=\"col-lg-4 patientNamediv\">\n                            Phone No <span style={{ color: 'red' }}>*</span>\n                          </label>\n                          <div className=\" col-lg-8 col-sm-8\">\n                            <input\n                              className=\"form-control \"\n                              type=\"text\"\n                              name=\"phone\"\n                              value={formData.phone}\n                              onChange={(e) => {\n                                if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                                  setFormData({ ...formData, phone: e.target.value })\n                                }\n                              }}\n                              required={true}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-4 mt-4\">\n                        <div>\n                          <label className=\"col-sm-4  patientNamediv\">\n                            CR No <span style={{ color: 'red' }}>*</span>\n                          </label>\n                          <div className=\"col-sm-8\">\n                            <input\n                              className=\"form-control \"\n                              type=\"test\"\n                              name=\"crn\"\n                              value={formData.crn}\n                              onChange={(e) => setFormData({ ...formData, crn: e.target.value })}\n                              required={true}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                  <div style={{ margin: '1rem auto 1rem 0' }}>\n                    <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n                    {/* <div className=\"row\">\n                      <div className=\"row\">\n                        <div\n                          className=\"col-md-4 alignCenterAndMiddle\"\n                          style={{ border: '1px solid black' }}\n                        >\n                          <h5 style={{ marginTop: '0.5rem' }}>Problems</h5>\n                        </div>\n                        <div className=\"col-md-8\">\n                          <div className=\"row\" style={{ border: '1px solid black' }}>\n                            <div className=\"col-md-4 alignCenterAndMiddle\">\n                              <h5 style={{ marginTop: '0.5rem' }}>VAS</h5>\n                            </div>\n                            <div className=\"col-md-4 alignCenterAndMiddle\">\n                              <h5 style={{ marginTop: '0.5rem' }}>ODI</h5>\n                            </div>\n                            <div className=\"col-md-4 alignCenterAndMiddle\">\n                              <h5 style={{ marginTop: '0.5rem' }}>MPSI</h5>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div> */}\n                  </div>\n                  <div>\n                    {/* newely Added */}\n                    <form className=\"mb-3\">\n                      {inputs.map((input, index) => (\n                        <div key={index} className=\"row mt-1 mb-2\">\n                          <div className=\"col-md-2\">\n                            <label>\n                              <select\n                                className=\"form-control \"\n                                style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                name=\"problem\"\n                                value={input.problem}\n                                onChange={(event) => handleInputChange(index, event)}\n                              >\n                                <option value=\"\">Chief complaint</option>\n                                {problems.map((problem, problemIndex) => (\n                                  <option key={problemIndex} value={problem}>\n                                    {problem}\n                                  </option>\n                                ))}\n                              </select>\n                            </label>\n                          </div>\n                          <div className=\"col-md-2\">\n                            <label>\n                              <select\n                                className=\"form-control \"\n                                style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                name=\"test\"\n                                value={input.test}\n                                onChange={(event) => handleInputChange(index, event)}\n                              >\n                                <option value=\"\">Test</option>\n                                {tests.map((test, testIndex) => (\n                                  <option key={testIndex} value={test}>\n                                    {test}\n                                  </option>\n                                ))}\n                              </select>\n                            </label>\n                          </div>\n                          <div className=\"col-md-2\">\n                            <label>\n                              <input\n                                className=\"form-control \"\n                                style={{ width: '10rem' }}\n                                placeholder=\"Enter test Value\"\n                                type=\"text\"\n                                name=\"testInput\"\n                                value={input.testInput}\n                                onChange={(event) => handleInputChange(index, event)}\n                              />\n                            </label>\n                          </div>\n                          <div className=\"col-md-2\">\n                            <label>\n                              <select\n                                className=\"form-control \"\n                                style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                name=\"scale\"\n                                value={input.scale}\n                                onChange={(event) => handleInputChange(index, event)}\n                              >\n                                <option value=\"\">Select Scale</option>\n                                {scales.map((scale, scaleIndex) => (\n                                  <option key={scaleIndex} value={scale}>\n                                    {scale}\n                                  </option>\n                                ))}\n                              </select>\n                            </label>\n                          </div>\n                          <div className=\"col-md-2\">\n                            <label>\n                              <input\n                                className=\"form-control \"\n                                style={{ width: '10rem', appearance: 'auto' }}\n                                placeholder=\"Enter Scale Value\"\n                                type=\"text\"\n                                name=\"value\"\n                                value={input.value}\n                                onChange={(event) => handleInputChange(index, event)}\n                              />\n                            </label>\n                          </div>\n                          <div className=\"col-md-2 d-flex justify-content-center\">\n                            {removeAndAddInput && (\n                              <button\n                                className=\"btn btn-danger\"\n                                type=\"button\"\n                                onClick={() => handleRemoveInput(index)}\n                              >\n                                Remove\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          className=\"btn btn-primary me-4\"\n                          type=\"button\"\n                          onClick={handleAddInput}\n                        >\n                          Add More\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n\n                  {/* <form>\n                    {problems.map((problem, index) => (\n                      <div key={index} style={{ alignItems: 'center', marginBottom: '10px' }}>\n                        <div className=\"row\">\n                          <div className=\"col-md-4 \">\n                            <input\n                              type=\"checkbox\"\n                              value={problem.name}\n                              onChange={(e) => handleCheckboxChange(problem.name, e.target.checked)}\n                            />\n                            <label>&nbsp;{problem.name}</label>\n                          </div>\n                          <div className=\"col-sm-8\">\n                            <div className=\"row\">\n                              <div className=\"col-sm-4\">\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Scale 1\"\n                                  value={\n                                    diagnosis.find((item) => item.problem.name === problem.name)\n                                      ?.problem.scale1 || ''\n                                  }\n                                  onChange={(e) =>\n                                    handleInputChange(problem.name, 'scale1', e.target.value)\n                                  }\n                                  disabled={\n                                    !diagnosis.some((item) => item.problem.name === problem.name)\n                                  }\n                                />\n                              </div>\n                              <div className=\"col-sm-4\">\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Scale 2\"\n                                  value={\n                                    diagnosis.find((item) => item.problem.name === problem.name)\n                                      ?.problem.scale2 || ''\n                                  }\n                                  onChange={(e) =>\n                                    handleInputChange(problem.name, 'scale2', e.target.value)\n                                  }\n                                  disabled={\n                                    !diagnosis.some((item) => item.problem.name === problem.name)\n                                  }\n                                />\n                              </div>\n                              <div className=\"col-sm-4\">\n                                <input\n                                  className=\"form-control\"\n                                  type=\"text\"\n                                  placeholder=\"Scale 3\"\n                                  value={\n                                    diagnosis.find((item) => item.problem.name === problem.name)\n                                      ?.problem.scale3 || ''\n                                  }\n                                  onChange={(e) =>\n                                    handleInputChange(problem.name, 'scale3', e.target.value)\n                                  }\n                                  disabled={\n                                    !diagnosis.some((item) => item.problem.name === problem.name)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </form> */}\n                  <div>\n                    <textarea\n                      rows={4}\n                      className=\"form-control col-12\"\n                      placeholder=\"Notes : (Optional)\"\n                      name=\"desc\"\n                      value={desc}\n                      onChange={(e) => setDesc(e.target.value)}\n                    ></textarea>\n                  </div>\n                </div>\n                <div>\n                  {/* <DateTimePicker /> */}\n                  {/* <LocalizationProvider>\n                    <DateTimePicker\n                      label=\"DateTimePicker\"\n                      value={dateAndTime}\n                      onChange={(newValue) => {\n                        setDateAndTime(newValue)\n                      }}\n                    />\n                  </LocalizationProvider> */}\n                  <div className=\"d-flex mt-2\">\n                    <div className=\"w-auto\">\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DemoContainer components={['DateTimePicker']}>\n                          <DateTimePicker\n                            label=\"Next Appointment Date\"\n                            value={startingDate}\n                            onChange={handleStartingDateChange}\n                            // ampm={false}\n                          />\n                        </DemoContainer>\n                      </LocalizationProvider>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-end m-4\">\n                  <button\n                    className=\"btn btn-info mt-3 mx-2 w-auto\"\n                    // style={{ width: '10%' }}\n                    onClick={handleSubmit}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"btn btn-info mt-3 w-auto\"\n                    // style={{ width: '10%' }}\n                    onClick={() => setData(false)}\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '20vh',\n                      lineHeight: '20vh',\n                      textAlign: 'center',\n                      backgroundColor: 'white',\n                      marginTop: '10px',\n                    }}\n                  >\n                    {loader ? <Loader /> : 'No Data'}\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientPage\n"],"names":["_ref","diagnosis","desc","console","log","reversedDiagnosis","setReversedDiagnosis","useState","useEffect","Array","isArray","reverse","_jsx","style","maxHeight","overflowY","overflowX","marginTop","children","map","elem","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","_Fragment","_jsxs","className","margin","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","problem","scale","test","testInput","value","fontWeight","padding","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","API_URL","process","patientData","localStorage","getItem","patientRecord","JSON","parse","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","problems","setProblems","tests","setTests","scales","setScales","fetchProblems","async","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","concat","department_id","problemsData","data","problemFilter","problemName","filter","item","type","name","testFilter","scaleFilter","error","prevFormData","getPatientById","removeAndAddInput","setremoveAndAddInput","inputs","setInputs","handleInputChange","index","event","target","updatedInputs","handleAddInput","handleRemoveInput","splice","length","departmentName","onSubmit","e","preventDefault","toast","warning","updatedFormData","nextApointmentDate","putFetchData","success","autoClose","setTimeout","input","appearance","height","onChange","problemIndex","testIndex","placeholder","scaleIndex","onClick","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","ToastContainer","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","display","marginLeft","handleToggleDetails","patientId","prevState","handleAddDiagnosis","PatientShowDetails","PatientAddNewRecord","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","transition","transitions","create","vars","palette","main","_ref2","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","inProps","ref","useThemeProps","size","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","role","viewBox","cx","cy","r","fill","strokeWidth","defaultTheme","createTheme","Box","options","arguments","undefined","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","useTheme","_extendSxProp","extendSxProp","component","as","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate","Loader","lineHeight","textAlign","backgroundColor","CircularProgress","AddPatientLoader","PatientPage","_location$state","location","useLocation","Number","state","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","doctor_id","_location$state2","_data$data","searchData","dateAndTime","setDateAndTime","_location$state3","_location$state4","justifyContent","paddingLeft","onKeyPress","key","clearSearch","required","_data$data2","postFetchData","message","PatientInfoData"],"sourceRoot":""}