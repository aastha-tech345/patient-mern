{"version":3,"file":"static/js/4688.d4361c6c.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/helpers/colors.js","../node_modules/react-spinners/esm/BarLoader.js","views/publicItems/ SpinnerOverlay.js","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","views/pages/loader/Loader.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport '../../dashboard/Dashboard.css'\nimport { faL } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nconst PatientShowDetails = ({ diagnosis, desc }) => {\n  let url = process.env.REACT_APP_API_URL\n  PatientShowDetails.propTypes = {\n    diagnosis: PropTypes.func.isRequired,\n    desc: PropTypes.func.isRequired,\n  }\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n\n  // Reverse diagnosis array on component mount or whenever diagnosis changes\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n\n  const isFile = (value) => {\n    const regex = /^\\d{13}_/\n\n    if (regex.test(value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n  //no pdf\n  const showReportHandler = async (filename) => {\n    try {\n      // Fetch the image data from the server\n      const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n        responseType: 'blob', // Treat response data as blob\n      })\n\n      // Create a Blob object from the response data\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n      // Generate a URL for the Blob\n      const blobUrl = URL.createObjectURL(blob)\n\n      // Open the URL in a new tab\n      window.open(blobUrl)\n    } catch (error) {\n      console.error('Error fetching image:', error)\n    }\n  }\n\n  /// opening pdf\n\n  return (\n    <div\n      style={{\n        maxHeight: '300px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        marginTop: '20px',\n      }}\n    >\n      {reversedDiagnosis?.map((elem) => {\n        const date = elem?.date\n\n        const datee = new Date(date)\n\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          // second: '2-digit',\n          hour12: true, // Set to true if you want 12-hour format with AM/PM\n        }\n        const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n        return (\n          <>\n            <div\n              className=\"row\"\n              // style={{ overflow: 'scroll !important', background: 'white' }}\n            >\n              <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n                <h5>Diagnose Date : {formattedDate}</h5>\n\n                <table\n                  className=\"table\"\n                  style={{\n                    width: '90%',\n                    border: '1px solid',\n                    fontFamily: 'ui-rounded',\n                    borderRadius: '10px',\n                  }}\n                >\n                  <colgroup>\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                  </colgroup>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Problems\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Test\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Test value\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Scale\n                      </th>\n                      <th scope=\"col\" style={{ background: '#FBF295' }}>\n                        Scale value\n                      </th>\n                    </tr>\n                  </thead>\n                  {elem?.diagnosData?.map((element) => {\n                    let { problem, scale, test, testInput, value } = element\n                    return (\n                      <>\n                        <tbody>\n                          <tr>\n                            <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n                            <td style={{ fontWeight: 'bolder' }}>\n                              {testInput === '' ? (\n                                '-'\n                              ) : isFile(testInput) ? (\n                                <>\n                                  <button\n                                    className=\"btn btn-light\"\n                                    onClick={() => showReportHandler(testInput)}\n                                  >\n                                    Show Report\n                                  </button>\n                                </>\n                              ) : (\n                                testInput\n                              )}\n                            </td>\n                            <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n                            <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n                          </tr>\n                        </tbody>\n                      </>\n                    )\n                  })}\n                </table>\n                <div className=\"row\">\n                  <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                    <div className=\"row\" style={{ marginTop: '1rem' }}>\n                      <div className=\"col-md-2 d-flex align-items-center\">\n                        <h5>Notes:</h5>\n                      </div>\n                      <div className=\"col-md-10 d-flex align-items-center\">\n                        <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                          <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n                  <div className=\"col-md-4\">\n                    <h6>Discription :</h6>{' '}\n                  </div>\n                  <div className=\"col-md-8\">\n                    <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n                  </div>\n                </div> */}\n              </div>\n              <hr />\n            </div>\n          </>\n        )\n      })}\n      {/* <div className=\"row\">\n        <div style={{ margin: '1rem auto 1rem 1rem' }}>\n          <div className=\"row\" style={{ marginTop: '1rem' }}>\n            <div className=\"col-md-5\">\n              <h6>Discription :</h6>{' '}\n            </div>\n            <div className=\"col-md-7\">\n              <p>{desc}</p>\n            </div>\n            <div className=\"col-md-2\" style={{ paddingTop: '1rem' }}>\n              <h5>Discription:</h5>\n            </div>\n            <div className=\"col-md-10\">\n              <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem 1rem 2rem' }}>\n                <p>{desc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n      {/* <div className=\"row\">\n        <div style={{ margin: '1rem auto 1rem 1rem' }}>\n          <div className=\"row\" style={{ marginTop: '1rem' }}>\n            <div className=\"col-md-2 d-flex align-items-center\">\n              <h5>Discription:</h5>\n            </div>\n            <div className=\"col-md-10 d-flex align-items-center\">\n              <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                <p style={{ margin: '0' }}>{desc}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  )\n  // return (\n  //   <>\n  //     <h1>Gaurav</h1>\n  //   </>\n  // )\n}\n\nexport default PatientShowDetails\n","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var BasicColors;\n(function (BasicColors) {\n    BasicColors[\"maroon\"] = \"#800000\";\n    BasicColors[\"red\"] = \"#FF0000\";\n    BasicColors[\"orange\"] = \"#FFA500\";\n    BasicColors[\"yellow\"] = \"#FFFF00\";\n    BasicColors[\"olive\"] = \"#808000\";\n    BasicColors[\"green\"] = \"#008000\";\n    BasicColors[\"purple\"] = \"#800080\";\n    BasicColors[\"fuchsia\"] = \"#FF00FF\";\n    BasicColors[\"lime\"] = \"#00FF00\";\n    BasicColors[\"teal\"] = \"#008080\";\n    BasicColors[\"aqua\"] = \"#00FFFF\";\n    BasicColors[\"blue\"] = \"#0000FF\";\n    BasicColors[\"navy\"] = \"#000080\";\n    BasicColors[\"black\"] = \"#000000\";\n    BasicColors[\"gray\"] = \"#808080\";\n    BasicColors[\"silver\"] = \"#C0C0C0\";\n    BasicColors[\"white\"] = \"#FFFFFF\";\n})(BasicColors || (BasicColors = {}));\nexport var calculateRgba = function (color, opacity) {\n    if (Object.keys(BasicColors).includes(color)) {\n        color = BasicColors[color];\n    }\n    if (color[0] === \"#\") {\n        color = color.slice(1);\n    }\n    if (color.length === 3) {\n        var res_1 = \"\";\n        color.split(\"\").forEach(function (c) {\n            res_1 += c;\n            res_1 += c;\n        });\n        color = res_1;\n    }\n    var rgbValues = (color.match(/.{2}/g) || []).map(function (hex) { return parseInt(hex, 16); }).join(\", \");\n    return \"rgba(\".concat(rgbValues, \", \").concat(opacity, \")\");\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nimport { calculateRgba } from \"./helpers/colors\";\nvar long = createAnimation(\"BarLoader\", \"0% {left: -35%;right: 100%} 60% {left: 100%;right: -90%} 100% {left: 100%;right: -90%}\", \"long\");\nvar short = createAnimation(\"BarLoader\", \"0% {left: -200%;right: 100%} 60% {left: 107%;right: -8%} 100% {left: 107%;right: -8%}\", \"short\");\nfunction BarLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.height, height = _f === void 0 ? 4 : _f, _g = _a.width, width = _g === void 0 ? 100 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"height\", \"width\"]);\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: cssValue(width), height: cssValue(height), overflow: \"hidden\", backgroundColor: calculateRgba(color, 0.2), backgroundClip: \"padding-box\" }, cssOverride);\n    var style = function (i) {\n        return {\n            position: \"absolute\",\n            height: cssValue(height),\n            overflow: \"hidden\",\n            backgroundColor: color,\n            backgroundClip: \"padding-box\",\n            display: \"block\",\n            borderRadius: 2,\n            willChange: \"left, right\",\n            animationFillMode: \"forwards\",\n            animation: \"\".concat(i === 1 ? long : short, \" \").concat(2.1 / speedMultiplier, \"s \").concat(i === 2 ? \"\".concat(1.15 / speedMultiplier, \"s\") : \"\", \" \").concat(i === 1 ? \"cubic-bezier(0.65, 0.815, 0.735, 0.395)\" : \"cubic-bezier(0.165, 0.84, 0.44, 1)\", \" infinite\"),\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) })));\n}\nexport default BarLoader;\n","// SpinnerOverlay.js\nimport React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst SpinnerOverlay = (loading) => {\n  return (\n    <div style={overlayStyle(loading)}>\n      <BarLoader loading={loading} color=\"#36D7B7\" />\n    </div>\n  )\n}\n\nconst overlayStyle = (loading) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  display: loading ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 9999,\n})\n\nexport default SpinnerOverlay\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, postFetchFile, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({ _id, getSearchByPatient, setIsAddNewDiagnosis, setIsDetailed }) => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n  }\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data?.test !== '' && data?.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data?.scale !== '' && data?.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')z\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        // Use Promise.all to wait for all uploads to finish\n        inputs.map(async (data, index) => {\n          if (typeof data.testInput !== 'string') {\n            const file = data.testInput\n            const formData = new FormData()\n            formData.append('file', file)\n            const response = await postFetchFile(\n              `${API_URL}/api/user/uploadPatientReport`,\n              formData,\n            )\n            if (response) {\n              inputs[index].testInput = response?.fileName\n            }\n          }\n        }),\n      )\n      // toast.dismiss()\n      setfileUploadingSpinner(false) // Set loading to false when all uploads are done\n    } catch (error) {\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n    try {\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: inputs,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n        setTimeout(() => {\n          setIsAddNewDiagnosis(false)\n          setIsDetailed(true)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = files[0]\n    setInputs(updatedInputs)\n    console.log('Guarv', inputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  return (\n    <>\n      {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n      <div style={{ margin: '1rem auto 1rem 1rem' }}>\n        <div style={{ margin: '1rem auto 1rem 0' }}>\n          <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <form className=\"mb-2\">\n            {inputs?.map((input, index) => (\n              <div key={index} className=\"row mt-1 mb-2\">\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"problem\"\n                      value={input.problem}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Chief complaint</option>\n                      {problems?.map((problem, problemIndex) => (\n                        <option key={problemIndex} value={problem}>\n                          {problem}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"test\"\n                      value={input.test}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Test</option>\n                      {tests?.map((test, testIndex) => (\n                        <option key={testIndex} value={test.name}>\n                          {test.name}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                {input?.test === '' ? (\n                  ''\n                ) : (\n                  <div className=\"col-md-2\">\n                    {tests?.map((test, testIndex) => {\n                      if (test.name === input.test) {\n                        if (test?.inputType === 'text') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                placeholder=\"Enter test Value\"\n                                type=\"text\"\n                                name=\"testInput\"\n                                value={input.testInput}\n                                onChange={(event) => handleInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        } else if (test?.inputType === 'file') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                type=\"file\"\n                                name=\"testInput\"\n                                onChange={(event) => handleFileInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        }\n                      }\n                      return null\n                    })}\n                  </div>\n                )}\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"scale\"\n                      value={input.scale}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Scale</option>\n                      {scales?.map((scale, scaleIndex) => (\n                        <option key={scaleIndex} value={scale}>\n                          {scale}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <input\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto' }}\n                      placeholder=\"Enter Scale Value\"\n                      type=\"text\"\n                      name=\"value\"\n                      value={input.value}\n                      onChange={(event) => handleInputChange(index, event)}\n                    />\n                  </label>\n                </div>\n                <div className=\"col-md-2 d-flex justify-content-center\">\n                  {removeAndAddInput && (\n                    <button\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                      onClick={() => handleRemoveInput(index)}\n                    >\n                      Remove\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div className=\"d-flex justify-content-end\">\n              <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n                Add More\n              </button>\n            </div>\n          </form>\n          <div>\n            <textarea\n              rows={4}\n              className=\"form-control col-12\"\n              placeholder=\"Notes (Optional)\"\n              name=\"desc\"\n              value={desc}\n              onChange={(e) => setDesc(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"d-flex mt-2\">\n            <div className=\"w-auto\">\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['DateTimePicker']}>\n                  <DateTimePicker\n                    label=\"Next Appointment Date\"\n                    value={startingDate}\n                    onChange={handleStartingDateChange}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </div>\n          </div>\n          <div className=\"text-end\">\n            <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger mt-4 ms-2\"\n              style={{ width: '10rem' }}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  return (\n    <div>\n      {patientSearch?.map((patient) => {\n        const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n        const isDetailsOpen = selectedPatientId === _id\n        const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n        const inputDate = nextApointmentDate\n\n        const date = new Date(inputDate)\n        const formattedDate = date\n          .toLocaleString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={_id} className=\"row\">\n            <div style={{ marginTop: '2rem' }}>\n              <div className=\"card\" style={{ width: '100%' }}>\n                <div className=\"card-body overflow-auto \">\n                  <h5 className=\"card-title\"> CR No : {crn}</h5>\n                  <h6 className=\"card-subtitle mt-2\">\n                    <h5>Name : {name}</h5>\n                  </h6>\n                  <div style={{ display: 'flex', marginTop: '1rem' }}>\n                    {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                    <span style={{ display: 'flex' }}>\n                      <h6>Phone No. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                      <h6 style={{ fontWeight: 'normal' }}>{formattedDate}</h6>\n                    </span>\n                    {/* <p className=\"card-text\">Phone No. {phone}</p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Age : {age}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Sex : {sex}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Next Appointment Date : {formattedDate}\n                    </p> */}\n                  </div>\n                  <div className=\"text-end\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => handleToggleDetails(_id)}\n                    >\n                      {/* {isDetails ? 'Close Details' : 'Show Details'} */}\n                      Show Diagnosis\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      style={{ marginLeft: '2rem' }}\n                      onClick={() => handleAddDiagnosis(_id)}\n                    >\n                      Add New Diagnosis\n                    </button>\n                  </div>\n                  {isDetailsOpen && isDetails && (\n                    <div>\n                      <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                    </div>\n                  )}\n                  {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                    <div>\n                      <PatientAddNewRecord\n                        _id={_id}\n                        getSearchByPatient={getSearchByPatient}\n                        setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                        setIsDetailed={setIsDetailed}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: '',\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  // const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n  }, [])\n\n  // const fetchProblems = async () => {\n  //   try {\n  //     const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id?._id}`)\n  //     const problemFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'problem',\n  //     )\n  //     const testFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'test',\n  //     )\n  //     const scaleFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'scale',\n  //     )\n  //     console.log('Gaurav', problemFilter)\n  //     setTests(testFilter)\n  //     setScales(scaleFilter)\n  //     setProblems(problemFilter)\n  //   } catch (error) {\n  //     console.error('Error fetching problems:', error)\n  //   }\n  // }\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  console.log('problems', problems)\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      let searchData = search || location?.state?.crn\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      console.log('searchData', data)\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async () => {\n    // console.log('updatedFormData', inputs)\n\n    setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        // Use Promise.all to wait for all uploads to finish\n        inputs.map(async (data, index) => {\n          if (typeof data.testInput !== 'string') {\n            const file = data.testInput\n            const formData = new FormData()\n            formData.append('file', file)\n            const response = await postFetchFile(\n              `${API_URL}/api/user/uploadPatientReport`,\n              formData,\n            )\n            if (response) {\n              inputs[index].testInput = response?.fileName\n            }\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: inputs,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n\n    try {\n      // console.log('pre', updatedFormData)\\\n      const data = await postFetchData(`${API_URL}/api/patient/create`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n\n        setaddPatientLoader(true)\n        setData(false)\n        setTimeout(() => {\n          // toast.success('Patient Created Successfully')\n          setUpdateState(true)\n          setaddPatientLoader(false)\n          // setDiagnosis([])\n          setDesc('')\n          setStartingDate(null)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: '',\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message == 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n      }\n      if (data.message == 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n      }\n      console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  // const handleSubmit = async () => {\n  //   console.log(inputs)\n  // }\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  //////// new updates\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = files[0]\n    setInputs(updatedInputs)\n    console.log('Guarv', inputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs)\n  }, [inputs])\n\n  //// testing codes\n\n  ////////////////////////////////////////////////////////////////////\n  // let [file, setFile] = useState('')\n  // const submitHandler = async () => {\n  //   try {\n  //     const formData = new FormData()\n  //     formData.append('file', file)\n  //     const response = await postFetchFile(`${API_URL}/api/user/uploadPatientReport`, formData)\n  //     console.log('File uploaded successfullsdsy:', response)\n  //   } catch (error) {\n  //     console.error('Error uploading file:', error)\n  //   }\n  // }\n  // const handleFileChange = (event) => {\n  //   setFile(event.target.files[0])\n  // }\n\n  ///////////////////////////\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div className=\"d-flex\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  // autoComplete={false}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n\n                {/* </button> */}\n                <button\n                  className=\"btn btn-primary\"\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  <button\n                    className=\"btn btn-danger text-light\"\n                    style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : (\n                  ''\n                )}\n              </div>\n              <div>\n                <button\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <>\n                {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n\n                <div className=\"content-to-be-blurred\">\n                  <div style={{ marginTop: '1rem' }}>\n                    <div>\n                      <hr />\n                      <h4>Patient Details</h4>\n\n                      <div>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Name <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control \"\n                                  name=\"name\"\n                                  value={formData.name}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, name: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Age <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"number\"\n                                  className=\"form-control \"\n                                  name=\"age\"\n                                  value={formData.age}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, age: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Sex <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <select\n                                  className=\"form-control \"\n                                  name=\"sex\"\n                                  value={formData.sex}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, sex: e.target.value })\n                                  }\n                                >\n                                  <option value=\"male\">Male</option>\n                                  <option value=\"female\">Female</option>\n                                  <option value=\"other\">Other</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row \">\n                          <div className=\"col-md-4 mt-4\">\n                            <div>\n                              <label className=\"col-lg-4 patientNamediv\">\n                                Phone No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\" col-lg-8 col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"text\"\n                                  name=\"phone\"\n                                  value={formData.phone}\n                                  onChange={(e) => {\n                                    if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                                      setFormData({ ...formData, phone: e.target.value })\n                                    }\n                                  }}\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-md-4 mt-4\">\n                            <div>\n                              <label className=\"col-sm-4  patientNamediv\">\n                                CR No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"test\"\n                                  name=\"crn\"\n                                  value={formData.crn}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, crn: e.target.value })\n                                  }\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr />\n                      <div style={{ margin: '1rem auto 1rem 0' }}>\n                        <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n                      </div>\n                      <div>\n                        <form className=\"mb-3\">\n                          {inputs.map((input, index) => (\n                            <div key={index} className=\"row mt-1 mb-2\">\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"problem\"\n                                    value={input.problem}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Chief complaint</option>\n                                    {problems.map((problem, problemIndex) => (\n                                      <option key={problemIndex} value={problem}>\n                                        {problem}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"test\"\n                                    value={input.test}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Test</option>\n                                    {tests.map((test, testIndex) => (\n                                      <option key={testIndex} value={test.name}>\n                                        {test.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              {input.test === '' ? (\n                                ''\n                              ) : (\n                                <div className=\"col-md-2\">\n                                  {tests.map((test, testIndex) => {\n                                    if (test.name === input.test) {\n                                      if (test.inputType === 'text') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '10rem' }}\n                                              placeholder=\"Enter test Value\"\n                                              type=\"text\"\n                                              name=\"testInput\"\n                                              value={input.testInput}\n                                              onChange={(event) => handleInputChange(index, event)}\n                                            />\n                                          </label>\n                                        )\n                                      } else if (test.inputType === 'file') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '10rem' }}\n                                              type=\"file\"\n                                              name=\"testInput\"\n                                              onChange={(event) =>\n                                                handleFileInputChange(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      }\n                                    }\n                                    return null\n                                  })}\n                                </div>\n                              )}\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"scale\"\n                                    value={input.scale}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Scale</option>\n                                    {scales.map((scale, scaleIndex) => (\n                                      <option key={scaleIndex} value={scale}>\n                                        {scale}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <input\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto' }}\n                                    placeholder=\"Enter Scale Value\"\n                                    type=\"text\"\n                                    name=\"value\"\n                                    value={input.value}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 d-flex justify-content-center\">\n                                {removeAndAddInput && (\n                                  <button\n                                    className=\"btn btn-danger\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveInput(index)}\n                                  >\n                                    Remove\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"d-flex justify-content-end\">\n                            <button\n                              className=\"btn btn-primary me-4\"\n                              type=\"button\"\n                              onClick={handleAddInput}\n                            >\n                              Add More\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                      <div>\n                        <textarea\n                          rows={4}\n                          className=\"form-control col-12\"\n                          placeholder=\"Notes (Optional)\"\n                          name=\"desc\"\n                          value={desc}\n                          onChange={(e) => setDesc(e.target.value)}\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"d-flex mt-2\">\n                        <div className=\"w-auto\">\n                          <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={['DateTimePicker']}>\n                              <DateTimePicker\n                                label=\"Next Appointment Date\"\n                                value={startingDate}\n                                onChange={handleStartingDateChange}\n                                // ampm={false}\n                              />\n                            </DemoContainer>\n                          </LocalizationProvider>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-end m-4\">\n                      <button className=\"btn btn-info mt-3 mx-2 w-auto\" onClick={handleSubmit}>\n                        Submit\n                      </button>\n                      <button className=\"btn btn-info mt-3 w-auto\" onClick={() => setData(false)}>\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '20vh',\n                      lineHeight: '20vh',\n                      textAlign: 'center',\n                      backgroundColor: 'white',\n                      marginTop: '10px',\n                    }}\n                  >\n                    {loader ? <Loader /> : 'No Data'}\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n    // <>\n    //   <h1>Gaurav</h1>\n    //   <input type=\"file\" onChange={handleFileChange}></input>\n    //   <button onClick={submitHandler}>submit</button>\n    // </>\n  )\n}\n\nexport default PatientPage\n"],"names":["_ref","diagnosis","desc","reversedDiagnosis","setReversedDiagnosis","useState","useEffect","Array","isArray","reverse","isFile","value","test","_jsx","style","maxHeight","overflowY","overflowX","marginTop","children","map","elem","_elem$diagnosData","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","_Fragment","_jsxs","className","margin","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","problem","scale","testInput","fontWeight","onClick","async","response","axios","get","concat","process","filename","responseType","blob","Blob","data","type","headers","blobUrl","URL","createObjectURL","window","open","error","console","showReportHandler","padding","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","size","unit","valueString","match","toString","includes","parseFloat","parseInt","warn","parseLengthAndUnit","BasicColors","createAnimation","loaderName","frames","suffix","animationName","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","calculateRgba","color","opacity","Object","keys","slice","length","res_1","split","forEach","c","rgbValues","hex","join","__assign","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","long","short","_a","_b","loading","_c","_d","speedMultiplier","_e","cssOverride","_f","height","_g","additionalprops","wrapper","display","position","backgroundColor","backgroundClip","willChange","animationFillMode","animation","React","overlayStyle","top","left","justifyContent","alignItems","zIndex","BarLoader","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","startingDate","setStartingDate","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","fileUploadingSpinner","setfileUploadingSpinner","problems","setProblems","tests","setTests","scales","setScales","fetchProblems","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","name","scaleFilter","testFilter","_ref2","inputType","prevFormData","log","getPatientById","removeAndAddInput","setremoveAndAddInput","inputs","setInputs","handleInputChange","index","event","target","updatedInputs","handleAddInput","handleRemoveInput","splice","SpinnerOverlay","departmentName","onSubmit","preventDefault","toast","warning","Promise","all","file","FormData","append","postFetchFile","fileName","updatedFormData","nextApointmentDate","putFetchData","success","autoClose","setTimeout","input","appearance","onChange","problemIndex","testIndex","placeholder","handleFileInputChange","files","scaleIndex","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","ToastContainer","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","marginLeft","handleToggleDetails","patientId","prevState","handleAddDiagnosis","PatientShowDetails","PatientAddNewRecord","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","variant","capitalize","theme","_extends","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","inProps","ref","useThemeProps","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","role","viewBox","cx","cy","r","fill","strokeWidth","defaultTheme","createTheme","Box","options","undefined","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","useTheme","_extendSxProp","extendSxProp","component","as","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate","Loader","lineHeight","textAlign","CircularProgress","AddPatientLoader","PatientPage","_location$state","location","useLocation","Number","state","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","doctor_id","_location$state2","_data$data","searchData","dateAndTime","setDateAndTime","_location$state3","_location$state4","paddingLeft","onKeyPress","key","clearSearch","required","_data$data2","postFetchData","message","PatientInfoData"],"sourceRoot":""}