{"version":3,"file":"static/js/7196.0888a303.chunk.js","mappings":"kdAQA,MAsbA,EAtboBA,IAAyC,IAAxC,QAAEC,EAAO,UAAEC,EAAS,WAAEC,GAAYH,EACrDI,QAAQC,IAAI,YAAaH,EAAWC,GACpC,IAAIG,EAAqB,OAATJ,QAAS,IAATA,OAAS,EAATA,EAAWI,UAG3B,MAAOC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,KACpDC,EAAcC,IAAmBF,EAAAA,EAAAA,UAASG,MAAe,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWO,QAAQC,KAAK,MACxEC,EAASC,IAAcP,EAAAA,EAAAA,WAAS,IAmCvCQ,EAAAA,EAAAA,YAAU,KACJX,GAAaM,MAAMM,QAAQZ,IAC7BE,EAAqB,IAAIF,GAAWa,UACtC,GACC,CAACb,IAEJ,MAMMc,EAAeC,IACnB,GAAIA,EAAM,CACR,MAAMC,EAAWD,EACXE,EAAQD,EAASE,MAAM,KAE7B,GAAID,EAAMV,OAAS,EAAG,CAIpB,OAFuBU,EAAME,MAAM,GAAGC,KAAK,KACLF,MAAM,KAAK,EAEnD,CAEE,OAAOF,CAEX,CAEE,MAAO,EACT,GAGKK,EAAaC,IAAkBnB,EAAAA,EAAAA,UAAS,MAW/C,OACEoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OACEG,UAAU,iBACVC,UAAW,EACXC,MAAO,CACLC,QAAS,QACTC,gBAAiB,kBACjBC,UAAW,OACXC,MAAO,SACPP,UAEFF,EAAAA,EAAAA,KAAA,OACEG,UAAU,eACVD,UAEAQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gBAAeD,SAAA,EAC5BQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,eAAcD,SAAA,EAC3BQ,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,cAAaD,SAAC,uBAC5BQ,EAAAA,EAAAA,MAAA,KAAGL,MAAO,CAAEM,SAAU,QAAST,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEO,WAAY,UAAWV,SAAC,WAAa,IAAW,OAAT7B,QAAS,IAATA,OAAS,EAATA,EAAWwC,IAAK,IAAI,wBAE1Eb,EAAAA,EAAAA,KAAA,QAAMK,MAAO,CAAEO,WAAY,UAAWV,SAAC,YAC7B,OAAT7B,QAAS,IAATA,OAAS,EAATA,EAAWmB,YAGhBQ,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLX,UAAU,YACV,kBAAgB,QAChB,aAAW,QACXY,QAASA,IAAM3C,GAAQ,SAG3B4B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBF,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLG,UAAW,QACXQ,UAAW,SACXC,UAAW,SACXC,UAAW,OACXC,QAAS,KACTjB,SAEgB,OAAjBxB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB0C,KAAI,CAACC,EAAMC,KAAW,IAADC,EAAAC,EAAAC,EACvC,MACMC,EADO,IAAIC,KAAKN,EAAKO,MAExBC,mBAAmB,QAAS,CAC3BC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETC,QAAQ,MAAO,KAClB,IAAIC,GAAgB,EAChBC,GAAY,EAEhB,OACEtC,EAAAA,EAAAA,KAAA,OAAiBK,MAAO,CAAEkC,OAAQ,QAASrC,UACzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAME,MAAO,CAAEY,UAAW,QAASf,UAChDQ,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEmC,SAAU,mBAAoBtC,SAAA,EAC1CQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,CAAI,kBAAgBwB,MACpBhB,EAAAA,EAAAA,MAAA,SACEP,UAAU,QACVE,MAAO,CACLoC,MAAO,OACPC,OAAQ,YACRC,WAAY,aACZC,aAAc,QACd1C,SAAA,EAEFQ,EAAAA,EAAAA,MAAA,YAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoC,MAAO,UACrBzC,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoC,MAAO,UACrBzC,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoC,MAAO,UACrBzC,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoC,MAAO,aAEvBzC,EAAAA,EAAAA,KAAA,SAAAE,UACEQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,MACE6C,MAAM,MACN1C,UAAU,aACVE,MAAO,CAAEyC,WAAY,WAAY5C,SAClC,cAGDF,EAAAA,EAAAA,KAAA,MACE6C,MAAM,MACN1C,UAAU,aACVE,MAAO,CAAEyC,WAAY,WAAY5C,SAClC,iBAGDF,EAAAA,EAAAA,KAAA,MACE6C,MAAM,MACN1C,UAAU,aACVE,MAAO,CAAEyC,WAAY,WAAY5C,SAClC,WAGDF,EAAAA,EAAAA,KAAA,MACE6C,MAAM,MACN1C,UAAU,aACVE,MAAO,CAAEyC,WAAY,WAAY5C,SAClC,gBAMA,OAAJmB,QAAI,IAAJA,GAAiB,QAAbE,EAAJF,EAAM0B,mBAAW,IAAAxB,OAAb,EAAJA,EAAmBH,KAAI,CAAC4B,EAASC,KAChC,MAAM,QAAEC,EAAO,WAAEC,EAAU,MAAEC,EAAK,KAAEC,GAASL,EAC7C,OAAK1E,EAAWgF,SAASJ,IAIzBb,GAAgB,EAChBC,GAAY,GAEV5B,EAAAA,EAAAA,MAAA,SAAwBL,MAAO,CAAEkD,aAAc,aAAcrD,SAAA,CAC1DhB,IAAWc,EAAAA,EAAAA,KAACwD,EAAAA,EAAc,CAACC,QAAQ,iBACnCnF,EAAWgF,SAASJ,IACnBxC,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAAC,SAAA,EACEQ,EAAAA,EAAAA,MAAA,MAAIL,MAAO,CAAEO,WAAY,UAAWV,SAAA,CAAC,WACtBgD,MAEflD,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEO,WAAY,UAAWV,SACjCiD,GAA0B,OAE7BnD,EAAAA,EAAAA,KAAA,MAAAE,SACGmD,EAAKjC,KAAI,CAACsC,EAAUC,KAAS,IAAAC,EAAA,OAC5B5D,EAAAA,EAAAA,KAAA,OAAAE,SACqB,KAAlBwD,EAASlE,KACR,KAEAkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAME,MAAO,CAAEkC,OAAQ,GAAIrC,SAAA,EACxCQ,EAAAA,EAAAA,MAAA,MAEEL,MAAO,CACLoC,MAAO,MACPoB,aAAc,OACdtB,OAAQ,OACR3B,WAAY,UACZV,SAAA,CAEDwD,EAASlE,KAAK,SAEjBQ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoC,MAAO,OAAQvC,UAC3BF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEkC,OAAQ,IAAKpB,QAAS,GAAIjB,SACb,KAAvBwD,EAASI,WACR9D,EAAAA,EAAAA,KAAA,MACEK,MAAO,CACLoC,MAAO,MACPoB,aAAc,OACdtB,OAAQ,QACRrC,SAEDwD,EAASI,aAGZ9D,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,QAAS,OAAQiC,OAAQ,GAAIrC,SAC1B,QAD0B0D,EACxCF,EAASK,aAAK,IAAAH,OAAA,EAAdA,EAAgBxC,KAAI,CAAC4C,EAAMC,KAC1BjE,EAAAA,EAAAA,KAAA,OAEEkE,MAAOF,EAAKvE,SACZY,MAAO,CACLC,QAAS,OACT6D,WAAY,SACZC,YAAa,OACb7B,OAAQ,aAEV8B,aAAcA,KACZ,MAAMC,EAAa/E,EACjByE,EAAKvE,UAEPM,EAAeuE,EAAW,EAE5BC,aAAcA,IAAMxE,EAAe,IACnCgB,QAASA,IAvPzCyD,OAAOC,EAAUnD,KACzC,IACEnC,GAAW,GAEX,MAAMuF,QAAiBC,EAAAA,EAAMC,IAAI,GAADC,OApB1BC,2BAoBiC,+BAAAD,OAA8BJ,GAAY,CAC/EM,aAAc,SAIVC,EAAO,IAAIC,KAAK,CAACP,EAASQ,MAAO,CAAEpE,KAAM4D,EAASS,QAAQ,kBAG1DC,EAAUC,IAAIC,gBAAgBN,GAGpCO,OAAOC,KAAKJ,EACd,CAAE,MAAOK,GACPlH,QAAQkH,MAAM,wBAAyBA,EACzC,CAAC,QACCtG,GAAW,EACb,GAoO0DuG,CACM,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMvE,UAGTS,UAEDF,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLX,UAAU,yBACV,cAAY,UACZwF,MAAO7F,EACPO,MAAO,CAAEkC,OAAQ,KAAMrC,UAEvBF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OA7BV7B,eAhCbN,EAuEJ,OAGV3D,EAAAA,EAAAA,KAAA,MAAAE,SACGkD,EAAMhC,KAAI,CAAC2E,EAAWC,KACrBhG,EAAAA,EAAAA,KAAA,OAAAE,SACsB,KAAnB6F,EAAUvG,KACT,KAEAkB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAME,MAAO,CAAEkC,OAAQ,GAAIrC,SAAA,EACxCQ,EAAAA,EAAAA,MAAA,OACEP,UAAU,WACVE,MAAO,CACLO,WAAY,SACZiD,aAAc,OACdtB,OAAQ,OACR0D,SAAU,cACV/F,SAAA,CAED6F,EAAUvG,KAAK,QAGlBQ,EAAAA,EAAAA,KAAA,OACEG,UAAU,sBACVE,MAAO,CACLkC,OAAQ,IACRpB,QAAS,EACT8E,SAAU,cACV/F,SAED6F,EAAU7B,YAzBT8B,UAiCd,MACJhG,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEoC,MAAO,YA1HVQ,IALL,IAgIC,OAKe,KAAxB,OAAJ5B,QAAI,IAAJA,GAAe,QAAXG,EAAJH,EAAM6E,iBAAS,IAAA1E,OAAX,EAAJA,EAAiBxC,SAAgBqD,GAChCrC,EAAAA,EAAAA,KAAA,SACEG,UAAU,QACVE,MAAO,CACLoC,MAAO,OACPC,OAAQ,YACRC,WAAY,aACZC,aAAc,QACd1C,UAEFQ,EAAAA,EAAAA,MAAA,SAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAImG,QAAQ,IAAGjG,UACbF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEO,WAAY,UAAWV,SAAC,qBAGzCQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEyC,WAAY,UAAWlC,WAAY,QAASV,SAAC,kBAG1DF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEyC,WAAY,UAAWlC,WAAY,QAASV,SAAC,mBAG1DF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEyC,WAAY,UAAWlC,WAAY,QAASV,SAAC,aAG1DF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEyC,WAAY,UAAWlC,WAAY,QAASV,SAAC,YAIvD,OAAJmB,QAAI,IAAJA,GAAe,QAAXI,EAAJJ,EAAM6E,iBAAS,IAAAzE,OAAX,EAAJA,EAAiBL,KAAI,CAACgF,EAAeC,KACpC,MACM3E,EADO,IAAIC,KAAKyE,EAAcxE,MAEjCC,mBAAmB,QAAS,CAC3BC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETC,QAAQ,MAAO,KAClB,OACE1B,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACEQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,CAAI,WAAakG,EAAc5G,SAC/BQ,EAAAA,EAAAA,KAAA,MAAAE,SAAKkG,EAAcE,iBACnBtG,EAAAA,EAAAA,KAAA,MAAAE,SAAKkG,EAAcG,UACnBvG,EAAAA,EAAAA,KAAA,MAAAE,SAAKwB,MAJE2E,EAKJ,SAKX,KAEH/D,IACCtC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAME,MAAO,CAAEkC,OAAQ,oBAAqBrC,UACzDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKD,UAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAOE,MAAO,CAAEc,QAAS,aAAcjB,UACpDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACrBQ,EAAAA,EAAAA,MAAA,KAAGL,MAAO,CAAEkC,OAAQ,KAAMrC,SAAA,CACvB,IAAI,sBAEU,KAAdmB,EAAKmF,KAAc,IAAMnF,EAAKmF,wBA7PzClF,EAwQJ,SAKdtB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,UAC3BF,EAAAA,EAAAA,KAAA,UACEc,KAAK,SACLX,UAAU,oBACV,kBAAgB,QAChBY,QAASA,IAAM3C,GAAQ,GAAO8B,SAC/B,oBAOR,E,gDC9ZP,MA8nBA,EA9nBsBuG,KACpB,IAAIC,EAAU5B,2BACV6B,EAAcC,aAAaC,QAAQ,iBACnCC,EAAgBC,KAAKC,MAAML,GAC/B,MAAOzH,EAASC,IAAcP,EAAAA,EAAAA,WAAS,GAEjCqI,GAAWC,EAAAA,EAAAA,OACVC,EAAM/I,IAAWQ,EAAAA,EAAAA,WAAS,IAC1BP,EAAW+I,IAAgBxI,EAAAA,EAAAA,UAAS,CAAC,IACrCyI,EAAaC,IAAkB1I,EAAAA,EAAAA,WAAS,IACxCN,EAAYiJ,IAAiB3I,EAAAA,EAAAA,UAAS,KACtC4I,EAAWC,IAAgB7I,EAAAA,EAAAA,UAAS,IACpC8I,EAAMC,IAAW/I,EAAAA,EAAAA,UAAS,IAC1BgJ,EAAUC,IAAejJ,EAAAA,EAAAA,UAAS,KAClCkJ,EAAOC,IAAYnJ,EAAAA,EAAAA,UAAS,KAC5BoJ,EAAQC,IAAarJ,EAAAA,EAAAA,UAAS,KAC9BsJ,EAAiBC,IAAsBvJ,EAAAA,EAAAA,UAAS,KAChDwJ,EAAqBC,IAA0BzJ,EAAAA,EAAAA,UAAS,IACzD0J,EAAe,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAwElFC,EAAU,CACd,CACE5C,MAAO,QACP6C,UAAW,OAOb,CACE7C,MAAO,OACP6C,UAAW,QAIb,CACE7C,MAAO,MACP6C,UAAW,MACXC,OAAQA,CAACC,EAAGC,IAAMD,EAAEE,IAAMD,EAAEC,KAE9B,CACEjD,MAAO,MACP6C,UAAW,MACXC,OAAQA,CAACC,EAAGC,IAAMD,EAAEG,IAAIC,cAAcH,EAAEE,MAE1C,CACElD,MAAO,SACPoD,OAASC,IAGLhJ,EAAAA,EAAAA,KAAA,UAAQG,UAAU,kBAAkBY,QAASA,IAAMkI,GAAgBD,GAAM9I,SAAC,oBAMhF,CACEyF,MAAO,SAEPoD,OAASC,IAGLhJ,EAAAA,EAAAA,KAAA,UACEG,UAAU,kBACVY,QAAUmI,GAAMjC,EAAS,eAAgB,CAAEkC,MAAOH,IAAQ9I,SAC3D,mBAOHkJ,EAAYC,OACXC,EAAcC,IAAmB3K,EAAAA,EAAAA,UAASyK,MAAQG,SAAS,EAAG,SAC9DC,EAASC,KAAc9K,EAAAA,EAAAA,UAASwK,IA8BhCO,GAAqBC,KAAyBhL,EAAAA,EAAAA,UAAS,IAExDiL,GAAarF,UACjB,GAAmB,KAAflG,EACF,OAAOwL,EAAAA,GAAMC,QAAQ,yCAEvB,GAAIN,EAAQO,SAASV,EAAc,OAEjC,YADAQ,EAAAA,GAAMC,QAAQ,8CAGhB5K,GAAW,GACX,MAAMyC,EAAO,IAAID,KAAK2H,GAChBW,EAAQ,IAAItI,KAAK8H,GAEvBlL,QAAQC,IAAI,gBAADqG,OAAiBjD,EAAI,oBAAAiD,OAAmBoF,IAWnD1L,QAAQC,IAAI,oBAAqBF,GACjC,MAAM4G,EAAO,CACX0C,SAAUtJ,GAGN4L,QAAYC,EAAAA,EAAAA,IAAc,GAADtF,OAC1B6B,EAAO,0CAAA7B,OAAyCvG,EAAU,eAAAuG,OAAciC,EAAcsD,IAAG,eAAAvF,OAAcjD,EAAI,aAAAiD,OAAYoF,EAAK,UAAApF,OAAS6C,GACxIxC,GAGF,IAAqB,KAAd,OAAHgF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,SAAkB,CAAC,IAADC,EAAAC,EAAAC,EACzBjM,QAAQC,IAAI,gBAAiB0L,GAE7B,MAAMO,QAAwBC,QAAQC,IACjC,OAAHT,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKhF,YAAI,IAAAoF,OAAN,EAAHA,EAAWlJ,KAAIoD,UACb,MAAMoG,OAjD0BC,EAACnG,EAAUpG,KACjD,IAAK,MAAMG,KAAaiG,EACtBjG,EAAUsE,YAActE,EAAUsE,YAAY+H,QAAQ5F,GACpD5G,EAAWgF,SAAS4B,EAAKhC,WAG7B,OAAOwB,EAASoG,QAAQrM,GAAcA,EAAUsE,YAAY/D,OAAS,GAAE,EA2CjC6L,CAAgCE,EAAItM,UAAWH,GAC/E,MAAO,IAAKyM,EAAKtM,UAAWmM,EAAmB,KAInDhB,GAAsBa,GAEtBlM,QAAQC,IAAI,gBAAiBiM,GAE7BhD,EAAgB,OAAHyC,QAAG,IAAHA,OAAG,EAAHA,EAAK1C,WAClBW,EAAsB,OAAH+B,QAAG,IAAHA,OAAG,EAAHA,EAAKhF,MAExB,MAAM8F,EAAgB,CAAC,EAEvBzM,QAAQC,IAAI,WAAY0L,GAErB,OAAHA,QAAG,IAAHA,GAAS,QAANK,EAAHL,EAAKhF,YAAI,IAAAqF,GAATA,EAAWU,SAASC,IAAa,IAADC,EAC9B,MAAMC,EAAoB,IAAIC,IACvB,OAAPH,QAAO,IAAPA,GAAkB,QAAXC,EAAPD,EAASzM,iBAAS,IAAA0M,GAAlBA,EAAoBF,SAASjI,IAAa,IAADsI,EAChC,OAAPtI,QAAO,IAAPA,GAAoB,QAAbsI,EAAPtI,EAASD,mBAAW,IAAAuI,GAApBA,EAAsBL,SAASxM,IAC7B,MAAMyE,EAAUzE,EAAUyE,QAEtB5E,EAAWgF,SAASJ,KAAakI,EAAkBG,IAAIrI,KACzD8H,EAAc9H,IAAY8H,EAAc9H,IAAY,GAAK,EACzDkI,EAAkBI,IAAItI,GACxB,GACA,GACF,IAEJ,IAAIuI,EAAY,EACZC,EAAc,EACdC,EAAa,EACd,OAAHzB,QAAG,IAAHA,GAAS,QAANM,EAAHN,EAAKhF,YAAI,IAAAsF,GAATA,EAAWS,SAASC,IACE,SAAhBA,EAAQrC,IACV4C,GAAwB,EACC,WAAhBP,EAAQrC,IACjB6C,GAA4B,EAE5BC,GAA0B,CAC5B,IAEFC,GAAmB,CACjBC,KAAMJ,EACNK,OAAQJ,EACRK,MAAOJ,IAETpN,QAAQC,IAAI,oBAAqBwN,IAEjCC,GAAQjB,GACR7L,GAAW,EACb,MACEA,GAAW,GACXZ,QAAQC,IAAI,WACd,GAGK6E,GAAM4I,KAAWrN,EAAAA,EAAAA,UAAS,IACjCL,QAAQC,IAAI,OAAQ6E,IACpB,MAAO2I,GAAiBJ,KAAsBhN,EAAAA,EAAAA,UAAS,CACrDiN,KAAM,EACNC,OAAQ,EACRC,MAAO,IAETxN,QAAQC,IAAI,kBAAmBwN,IAE/B,MAAME,GAAYA,KAChB3C,EAAgBH,GAChBM,GAAWN,GACX9B,GAAgBD,GAChBE,EAAc,kBACdY,EAAmB,IACnByD,GAAmB,IACnBK,GAAQ,IACR5D,EAAuB,IACvBuB,GAAsB,GAAG,EAGrBX,GAAmBD,IACvB5K,GAAQ,GACRG,QAAQC,IAAI,qBAAsBwK,GAClC5B,EAAa4B,EAAK,GAGpB5J,EAAAA,EAAAA,YAAU,KACUoF,gBAvREA,WACpB,IAAK,IAAD2H,EAAAC,EACFjN,GAAW,GACX,MAAMkN,QAAyBC,EAAAA,EAAAA,IAAS,GAADzH,OAClC6B,EAAO,iBAAA7B,OAA6B,OAAbiC,QAAa,IAAbA,GAA4B,QAAfqF,EAAbrF,EAAeyF,qBAAa,IAAAJ,OAAf,EAAbA,EAA8B/B,MAEpDoC,EAA+B,OAAhBH,QAAgB,IAAhBA,GAAsB,QAAND,EAAhBC,EAAkBnH,YAAI,IAAAkH,OAAN,EAAhBA,EAAwBlH,KAAK,GAClD,GAAIsH,EAAc,CAChB,MAAMC,EAAgBD,EAAaE,YAChC5B,QAAQ6B,GAAuB,YAAdA,EAAK7L,OACtBM,KAAK8B,GAAYA,EAAQ1D,OACtBoN,EAAaJ,EAAaE,YAC7B5B,QAAQ6B,GAAuB,SAAdA,EAAK7L,OACtBM,KAAKiC,GAASA,EAAK7D,OAChBqN,EAAcL,EAAaE,YAC9B5B,QAAQ6B,GAAuB,UAAdA,EAAK7L,OACtBM,KAAKgC,GAAUA,EAAM5D,OAElBsN,EAAUL,EAAcrL,KAAK8B,IAAO,CACxCgB,MAAOhB,EACP6J,MAAO7J,MAET6E,EAAS6E,GACT3E,EAAU4E,GACVhF,EAAYiF,GACZzE,EAAuByE,GACvBvF,EACEuF,EAAQ1L,KAAK4L,GACJA,EAAG9I,SAGd/E,GAAW,EACb,CACF,CAAE,MAAOsG,GACPtG,GAAW,GACXZ,QAAQkH,MAAM,2BAA4BA,EAC5C,GAoPQwH,GAEF3O,EAAWU,QACb6K,IACF,EAEFqD,EAAW,GACV,KAEH9N,EAAAA,EAAAA,YAAU,KACJd,EAAWU,QACb6K,IACF,GACC,CAACvL,EAAYoJ,EAAML,IA2JtB,OACE3G,EAAAA,EAAAA,MAAA,OAAKP,UAAU,QAAQE,MAAO,CAAEC,QAAS,OAAQ6M,cAAe,SAAUC,OAAQ,SAAUlN,SAAA,CACzFiH,GAAOnH,EAAAA,EAAAA,KAACqN,EAAW,CAACjP,QAASA,EAASC,UAAWA,EAAWC,WAAYA,IAAiB,GACzFY,GAAUc,EAAAA,EAAAA,KAACwD,EAAAA,EAAc,CAACC,QAAQ,YAAe,IAClD/C,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,KAACsN,EAAAA,GAAM,CACLR,QAASlF,EACT2F,SAAO,EACPrJ,MAAOkE,EAEPoF,SApKoBC,IAhQNpM,MAiQjBoM,GAA8C,IAA3BA,EAAgBzO,QA/PxCqJ,EAFsBhH,EAoQLoM,GAjQjBlG,EACElG,EAAKD,KAAK4L,GACDA,EAAG9I,UA6PZgI,IAGF,EAgKQwB,YAAY,yBACZC,cAAe,IACfC,OAAQ,CACNC,YAAaA,CAACC,EAAU3E,KAAK,IACxB2E,EACHV,OAAQ,OACRW,WAAY,eAMpBrN,EAAAA,EAAAA,MAAA,OAAKP,UAAU,WAAUD,SAAA,EACvBQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,6BAA4BD,SAAA,EACzCQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,WAAUD,SAAA,CACtB,KACDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACgO,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAahO,UAC9CF,EAAAA,EAAAA,KAACmO,EAAAA,EAAa,CAACC,WAAY,CAAC,kBAAkBlO,UAC5CF,EAAAA,EAAAA,KAACqO,EAAAA,EAAc,CACbtB,MAAM,OACN7I,MAAOoF,EACPkE,SA/Vc5L,IAChC,GAAIA,EAAO,IAAID,KAEb,OADAmI,EAAAA,GAAMC,QAAQ,qCACPR,EAAgBH,GAEzBG,EAAgB3H,EAAK,EA2VH0M,YAAY,aACZC,MAAM,EACNC,aAAa,EACbC,MAAO,CAAC,OAAQ,QAAS,OAIzBpO,MAAO,CAAEY,UAAW,iCAM9BP,EAAAA,EAAAA,MAAA,OAAKP,UAAU,WAAUD,SAAA,CACtB,KACDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACgO,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAahO,UAC9CF,EAAAA,EAAAA,KAACmO,EAAAA,EAAa,CAACC,WAAY,CAAC,kBAAkBlO,UAC5CF,EAAAA,EAAAA,KAACqO,EAAAA,EAAc,CACbtB,MAAM,KACN7I,MAAOuF,EACP+D,SA9WS5L,IAC3B,GAAIA,EAAO,IAAID,KAEb,OADAmI,EAAAA,GAAMC,QAAQ,iCACPL,GAAWN,GAEpBM,GAAW9H,EAAK,EA0WE0M,YAAY,aACZC,MAAM,EACNC,aAAa,EACbC,MAAO,CAAC,OAAQ,QAAS,sBAQrCzO,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEqO,UAAW,gBAAiB7K,aAAc,SAAU3D,UAChEQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBD,SAAA,EACpCF,EAAAA,EAAAA,KAAA,UAAQG,UAAU,4BAA4BY,QAAS8I,GAAW3J,SAAC,YAGnEF,EAAAA,EAAAA,KAAA,UAAQG,UAAU,wBAAwBY,QAASA,IAAMmL,KAAYhM,SAAC,kBAMnD,KAAxByJ,IACC3J,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UAEEG,UAAU,0BACVY,QArOU4N,KACpBxP,GAAW,GAEX,MAAMyP,EAAWC,EAAAA,GAAWC,WAsBtBC,EAAYF,EAAAA,GAAWG,aAAa,CApBzB,CACf,MACA,OACA,MACA,MACA,QACA,wBACA,UACA,cACA,QAGA,aACA,cACA,iBACA,0BACA,oBACA,oBAKFrF,GAAoBsB,SAAS0B,IAC3B,MAAM,IAAEvC,EAAG,KAAE5K,EAAI,IAAEoJ,EAAG,IAAEC,EAAG,IAAEhI,EAAG,MAAEoO,EAAK,mBAAEC,EAAkB,UAAEzQ,GAAckO,EACrEwC,EAAM,IAAIxN,KAAKuN,GACfE,EAA4B,GAAAvK,OAAMsK,EAAIE,UAAS,KAAAxK,OACnDsK,EAAIG,WAAa,EAAC,KAAAzK,OAChBsK,EAAII,eAER9Q,EAAUwM,SAASuE,IACjB,MAAM,YAAEzM,EAAW,UAAEmD,EAAS,KAAEM,GAASgJ,EAEzCzM,EAAYkI,SAASwE,IACnB,MAAM,QAAEvM,EAAO,WAAEC,EAAU,KAAEE,EAAI,MAAED,GAAUqM,EAC7C,IAAIC,GAAiB,EAQrB,MAAMC,EAAYvM,EAAMhC,KAAKgC,GAAUA,EAAM5D,OAAMK,KAAK,MAClD+P,EAAaxM,EAAMhC,KAAKgC,GAAUA,EAAMc,QAAOrE,KAAK,MAC1D,GAAIqG,EAAUlH,OACZkH,EAAU+E,SAAS4E,IACjB,MAAQrQ,KAAMsQ,EAAa,cAAExJ,EAAa,OAAEC,EAAM,KAAE3E,GAASiO,EAC7D,IAAuB,IAAnBH,EAA0B,CAC5BnR,QAAQC,IAAI,WAAYoD,GACxB,MAAMmO,EAAM,IAAIpO,KAAKC,GAEfF,EAAa,GAAAmD,OAAMkL,EAAIV,UAAS,KAAAxK,OAAIkL,EAAIT,WAAa,EAAC,KAAAzK,OAAIkL,EAAIR,eAE9DS,EAAU,CACdnP,EACArB,EACAoJ,EACAC,EACAoG,EACAG,EACAlM,EACAC,EACAqD,EAGAmJ,EACAC,EACAE,EACAxJ,EACAC,EACA7E,GAEFgO,GAAiB,EAEjBb,EAAAA,GAAWoB,cAAclB,EAAW,CAACiB,GAAU,CAAEE,QAAS,GAC5D,KAAO,CACL,MAAMH,EAAM,IAAIpO,KAAKC,GAIfoO,EAAU,CAAC,CAAD,UAYdF,EACAxJ,EACAC,EAhBiB,GAAA1B,OAAMkL,EAAIV,UAAS,KAAAxK,OAAIkL,EAAIT,WAAa,EAAC,KAAAzK,OAAIkL,EAAIR,gBAoBpEV,EAAAA,GAAWoB,cAAclB,EAAW,CAACiB,GAAU,CAAEE,QAAS,GAC5D,SAEG,CACL,MAAMF,EAAU,CACdnP,EACArB,EACAoJ,EACAC,EACAoG,EACAG,EACAlM,EACAC,EACAqD,EAGAmJ,EACAC,GAEFf,EAAAA,GAAWoB,cAAclB,EAAW,CAACiB,GAAU,CAAEE,QAAS,GAC5D,IAIA,GACF,IAGJrB,EAAAA,GAAWsB,kBAAkBvB,EAAUG,EAAW,UAElD,MAAMqB,EAAcvB,EAAAA,GAAWD,EAAU,CAAEyB,SAAU,OAAQvP,KAAM,UAE7DkE,EAAO,IAAIC,KAAK,CAACmL,GAAc,CACnCtP,KAAM,sEAEFc,EAAO,IAAID,MAEjB2O,EAAAA,EAAAA,QAAOtL,EAAK,QAADH,OAAUjD,EAAKyN,UAAS,KAAAxK,OAAIjD,EAAK0N,WAAU,KAAAzK,OAAIjD,EAAK2N,gBAE/DpQ,GAAW,EAAM,EAuFgBe,SACxB,sBAKH,OAIJF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAQE,MAAO,CAAEkQ,SAAU,KAAMrQ,SAC7ChB,GACCc,EAAAA,EAAAA,KAACwQ,EAAAA,EAAM,KAEPxQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACyQ,EAAAA,EAAK,CACJlI,QAASA,EACTmI,WAAY/G,GACZgH,YAAY,SAMpB3Q,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kCAAiCD,UAC9CQ,EAAAA,EAAAA,MAACkQ,EAAAA,EAAK,CAACC,QAAS,EAAE3Q,SAAA,CACf3B,QAAQC,IAAI,uBAAwBgJ,EAAWE,IAChD1H,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAU,CAACC,MAAOvJ,EAAWE,KAAMA,EAAM8F,SAhbzBwD,CAACC,EAAO/M,KAC/ByD,EAAQzD,EAAM,SAkbXgN,OAAOC,KAAK9N,IAAMrE,OAAS,GAC1B0B,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKD,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,KAACoR,EAAAA,GAAM,CACLtQ,KAAK,MACLoE,KAAM,CACJmM,OAAQH,OAAOC,KAAK9N,IACpBiO,SAAU,CACR,CACE/Q,gBAAiB+H,EAAa1I,MAAM,EAAGsR,OAAOC,KAAK9N,IAAMrE,QACzDkG,KAAMgM,OAAOK,OAAOlO,OAI1ByJ,QAAS,CACP0E,QAAS,CACPC,OAAQ,CACNJ,OAAQ,CACN,IAINK,aAAa,GAEftE,OAAQ,aAGZpN,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,KAACoR,EAAAA,GAAM,CACLtQ,KAAK,WACLoE,KAAM,CACJmM,OAAQ,CAAC,OAAQ,SAAU,UAC3BC,SAAU,CACR,CACEvE,MAAO,kBACPxM,gBAAiB+H,EAAa1I,MAAM,EAAG,GACvCsF,KAAM,CAAC8G,GAAgBH,KAAMG,GAAgBF,OAAQE,GAAgBD,UAI3Ee,QAAS,CACP4E,aAAa,GAEftE,OAAQ,eAKd,IAGFpN,EAAAA,EAAAA,KAAC2R,EAAAA,GAAc,MACX,E,mCCvoBV,MAAMC,GAAYC,EAAAA,EAAAA,IAAmBC,KAiHrC,EA/GwBC,KAEtB,MAAOC,EAAcC,IAAmBrT,EAAAA,EAAAA,UAAS,CAAEsT,MAAO,IAAIvQ,KAAQwQ,IAAK,IAAIxQ,QACxEyQ,EAAcC,IAAmBzT,EAAAA,EAAAA,UAAS,KAC1CM,EAASC,IAAcP,EAAAA,EAAAA,WAAS,GAGjC0T,IAFWpL,EAAAA,EAAAA,MAEMoL,CAAC1Q,EAAM2Q,KAC5B,IAAIL,EAAOC,EAEX,GAAa,UAATI,EACFL,EAAQ,IAAIvQ,KAAKC,EAAK2N,cAAe3N,EAAK0N,WAAY,GACtD6C,EAAM,IAAIxQ,KAAKC,EAAK2N,cAAe3N,EAAK0N,WAAa,EAAG,QACnD,GAAa,SAATiD,EAAiB,CAC1B,MAAMC,EAAiB5Q,EAAKyN,UAAYzN,EAAK6Q,SAC7CP,EAAQ,IAAIvQ,KAAKC,EAAK2N,cAAe3N,EAAK0N,WAAYkD,GACtD,MAAME,EAAgBF,EAAiB,EACvCL,EAAM,IAAIxQ,KAAKC,EAAK2N,cAAe3N,EAAK0N,WAAYoD,EACtD,MACER,EAAQ,IAAIvQ,KAAKC,EAAK2N,cAAe3N,EAAK0N,WAAY1N,EAAKyN,WAC3D8C,EAAM,IAAIxQ,KAAKC,EAAK2N,cAAe3N,EAAK0N,WAAY1N,EAAKyN,WAG3D4C,EAAgB,CAAEC,QAAOC,OAAM,IA6BjC/S,EAAAA,EAAAA,YAAU,KACR,MAAMuT,EAAc,IAAIhR,KAClBuQ,EAAQ,IAAIvQ,KAAKgR,EAAYpD,cAAeoD,EAAYrD,WAAY,GACpE6C,EAAM,IAAIxQ,KAAKgR,EAAYpD,cAAeoD,EAAYrD,WAAa,EAAG,GAC5E2C,EAAgB,CAAEC,MAAOA,EAAOC,IAAKA,GAAM,GAC1C,KAEH/S,EAAAA,EAAAA,YAAU,KA5BSoF,WACjB,IACErF,GAAW,GACX,MAAM+K,QAAYoC,EAAAA,EAAAA,IAAS,GAADzH,OAjChBC,2BAkCE,+CAAAD,OAA8CmN,EAAaE,MAAK,aAAArN,OACxEmN,EAAaG,IAAG,kBACA,MAEM,IAAD7H,EAAL,OAAb,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAK0I,SACPP,EAAmB,OAAHnI,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKhF,YAAI,IAAAoF,OAAN,EAAHA,EAAWpF,MAC3B/F,GAAW,KAEXZ,QAAQC,IAAI,gCACZW,GAAW,GAEf,CAAE,MAAOsG,GACPlH,QAAQC,IAAIiH,GACZtG,GAAW,EACb,GAWA0K,EAAY,GACX,CAACmI,KAEJ5S,EAAAA,EAAAA,YAAU,KACRb,QAAQC,IAAI4T,EAAa,GACxB,CAACA,IAEJ,MAAMS,EACJT,GAAgBrT,MAAMM,QAAQ+S,GAC1BA,EAAahR,KAAK0R,IAAW,CAC3BnN,MAAM,GAADd,OAAKiO,EAAYtT,KAAI,kBAC1B0S,MAAO,IAAIvQ,KAAKmR,EAAY5D,oBAC5BiD,IAAK,IAAIxQ,KAAKmR,EAAY5D,oBAC1B6D,gBAAiBD,MAEnB,GAeN,OACEpS,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAE+M,OAAQ,QAASlN,SAAA,CAC5BhB,IAAWc,EAAAA,EAAAA,KAACwD,EAAAA,EAAc,CAACC,QAAQ,sBACpCzD,EAAAA,EAAAA,KAACgT,EAAAA,GAAQ,CACPpB,UAAWA,EACXqB,cAAc,QACdC,YAAY,MAEZtR,KAAMoQ,EAAaE,MACnBiB,WAAYb,EACZc,OA1EoBb,IACxB,MAAMI,EAAc,IAAIhR,KACxB2Q,EAAeK,EAAaJ,EAAK,EAyE7BM,OAAQA,EACRQ,QA1Be,CACnBC,qBAAsBA,IAAM,MA0BxBC,YAAY,OACZC,cAnBoBtO,IACxB,MAAMrE,EAAU,OAAJqE,QAAI,IAAJA,OAAI,EAAJA,EAAM6N,gBAAgBlS,IAC5B4S,EAAG,oBAAA5O,OAAuBhE,GAChC0E,OAAOC,KAAKiO,EAAK,SAAS,MAmBpB,E,0BCjGV,MAuIA,EAvI6BC,KAC3B,MAAMzM,GAAWC,EAAAA,EAAAA,OAEVhI,EAASC,IAAcP,EAAAA,EAAAA,WAAS,IAEhCsG,EAAMyO,IAAW/U,EAAAA,EAAAA,UAAS,CAC/BgV,SAAU,GACVC,gBAAiB,KAGbC,EAAgB5K,IACpB,MAAM,KAAE1J,EAAI,MAAE0E,GAAUgF,EAAE6K,OAC1BJ,EAAQ,IAAKzO,EAAM,CAAC1F,GAAO0E,GAAQ,EAyCrC,OAFA3F,QAAQC,IAAI,SAAU0G,IAGpBxE,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAE2T,UAAW,OAAQ1T,QAAS,OAAQ6M,cAAe,UAAWjN,SAAA,EAC1EQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8CAA8CE,MAAO,CAAE4T,KAAM,GAAI/T,SAAA,CAC7EhB,GAAUc,EAAAA,EAAAA,KAACwD,EAAAA,EAAc,CAACC,QAAQ,0BAA6B,IAChEzD,EAAAA,EAAAA,KAACkU,EAAAA,GAAU,CAAAhU,UACTF,EAAAA,EAAAA,KAACmU,EAAAA,GAAI,CAAChU,UAAU,yBAAwBD,UACtCF,EAAAA,EAAAA,KAACoU,EAAAA,GAAI,CAACC,GAAI,EAAEnU,UACVF,EAAAA,EAAAA,KAACsU,EAAAA,GAAU,CAAApU,UACTF,EAAAA,EAAAA,KAACuU,EAAAA,GAAK,CAACpU,UAAU,MAAKD,UACpBF,EAAAA,EAAAA,KAACwU,EAAAA,GAAS,CAAAtU,UACRQ,EAAAA,EAAAA,MAAC+T,EAAAA,GAAK,CAAAvU,SAAA,EACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAC,qCAapCQ,EAAAA,EAAAA,MAACgU,EAAAA,GAAW,CAACvU,UAAU,OAAMD,SAAA,EAC3BF,EAAAA,EAAAA,KAAC2U,EAAAA,GAAe,CAAAzU,UACdF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAM+O,EAAAA,OAEf5U,EAAAA,EAAAA,KAAC6U,EAAAA,GAAU,CACT/T,KAAK,OACL4M,YAAY,eAEZlO,KAAK,WACL0E,MAAOgB,EAAK0O,SACZpG,SAAUsG,QAGdpT,EAAAA,EAAAA,MAACgU,EAAAA,GAAW,CAACvU,UAAU,OAAMD,SAAA,EAC3BF,EAAAA,EAAAA,KAAC2U,EAAAA,GAAe,CAAAzU,UACdF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAM+O,EAAAA,OAEf5U,EAAAA,EAAAA,KAAC6U,EAAAA,GAAU,CACT/T,KAAK,WACL4M,YAAY,oBAEZlO,KAAK,kBACL0E,MAAOgB,EAAK2O,gBACZrG,SAAUsG,QAGd9T,EAAAA,EAAAA,KAACmU,EAAAA,GAAI,CAAAjU,UACHF,EAAAA,EAAAA,KAACoU,EAAAA,GAAI,CAACU,GAAI,GAAIzU,MAAO,CAAEqO,UAAW,UAAWxO,UAC3CF,EAAAA,EAAAA,KAAC+U,EAAAA,GAAO,CACNtU,MAAM,UACNN,UAAU,OACVW,KAAK,SACLC,QAAUmI,GA/Fd1E,WACpB0E,EAAE8L,iBACF,IACE,GAAI9P,EAAK0O,SAAS5U,OAAS,EAEzB,YADA8K,EAAAA,GAAMC,QAAQ,gDAGhB5K,GAAW,GAEX,MAAM+K,QAAY+K,EAAAA,EAAAA,IAAa,GAADpQ,OAtBlBC,2BAsB6B,oBAAoBI,GACrC,IAADoF,EAShBC,EATA,OAAHL,QAAG,IAAHA,GAAAA,EAAKhF,KAAKmF,SACZzD,aAAasO,WAAW,SACxBtO,aAAasO,WAAW,iBACxBpL,EAAAA,GAAMO,QAAW,OAAHH,QAAG,IAAHA,GAAS,QAANI,EAAHJ,EAAKhF,YAAI,IAAAoF,OAAN,EAAHA,EAAW7G,QAAS,CAAE0R,UAAW,MAC/CC,YAAW,KACTnO,EAAS,UACT1B,OAAO8P,SAASC,SAChBnW,GAAW,EAAM,GAChB,OAEHA,GAAW,GACX2K,EAAAA,GAAMC,QAAW,OAAHG,QAAG,IAAHA,GAAS,QAANK,EAAHL,EAAKhF,YAAI,IAAAqF,OAAN,EAAHA,EAAW9G,QAAS,CAAE0R,UAAW,OAEjD5W,QAAQC,IAAI,MAAO0L,EACrB,CAAE,MAAOzE,GACPtG,GAAW,GACXZ,QAAQC,IAAIiH,EACd,GAoEwC8P,CAAcrM,GAAGhJ,SAClC,kCAgBrBF,EAAAA,EAAAA,KAAC2R,EAAAA,GAAc,MAIX,EC/IJ6D,EAAYC,EAAAA,MAAW,IAAM,2DAC7BC,EAASD,EAAAA,MAAW,IAAM,kCAC1BE,EAAaF,EAAAA,MAAW,IAAM,iCAG9BG,EAAYH,EAAAA,MAAW,IAAM,kCAC7BI,EAAcJ,EAAAA,MAAW,IAAM,kCAC/BK,EAAQL,EAAAA,MAAW,IAAM,kCACzBM,EAAYN,EAAAA,MAAW,IAAM,kCAC7BO,EAAYP,EAAAA,MAAW,IAAM,kCAC7BQ,EAAaR,EAAAA,MAAW,IAAM,iCAC9BS,EAAOT,EAAAA,MAAW,IAAM,iCACxBU,EAAcV,EAAAA,MAAW,IAAM,kCAC/BW,EAAeX,EAAAA,MAAW,IAAM,kCAChCY,EAAWZ,EAAAA,MAAW,IAAM,kCAC5Ba,EAAWb,EAAAA,MAAW,IAAM,iCAC5Bc,EAAWd,EAAAA,MAAW,IAAM,kCAC5Be,EAASf,EAAAA,MAAW,IAAM,kCAC1BgB,EAAWhB,EAAAA,MAAW,IAAM,kCAG5BiB,GAAUjB,EAAAA,MAAW,IAAM,kCAC3BkB,GAAelB,EAAAA,MAAW,IAAM,kCAChCmB,GAAYnB,EAAAA,MAAW,IAAM,kCAG7BoB,GAAepB,EAAAA,MAAW,IAAM,kCAChCqB,GAAiBrB,EAAAA,MAAW,IAAM,kCAClCsB,GAActB,EAAAA,MAAW,IAAM,iCAC/BuB,GAAavB,EAAAA,MAAW,IAAM,kCAC9BwB,GAASxB,EAAAA,MAAW,IAAM,kCAC1ByB,GAAQzB,EAAAA,MAAW,IAAM,kCACzBnI,GAASmI,EAAAA,MAAW,IAAM,kCAC1B0B,GAAa1B,EAAAA,MAAW,IAAM,kCAE9B2B,GAAS3B,EAAAA,MAAW,IAAM,kCAG1B4B,GAAc5B,EAAAA,MAAW,IAAM,qEAC/B6B,GAAQ7B,EAAAA,MAAW,IAAM,oEACzB8B,GAAS9B,EAAAA,MAAW,IAAM,wDAG1B+B,GAAS/B,EAAAA,MAAW,IAAM,kCAC1BgC,GAAShC,EAAAA,MAAW,IAAM,kCAC1BiC,GAASjC,EAAAA,MAAW,IAAM,kCAC1BkC,GAASlC,EAAAA,MAAW,IAAM,kCAC1BmC,GAAcnC,EAAAA,MAAW,IAAM,kCAC/BoC,GAAUpC,EAAAA,MAAW,IAAM,kCAIjC,IAAIqC,GAEFA,GAHWlR,aAAaC,QAAQ,SAGvB,CACP,CAAEkR,KAAM,IAAKC,OAAO,EAAMxY,KAAM,QAEhC,CAAEuY,KAAM,aAAcvY,KAAM,YAAawD,QAASwS,GAClD,CAAEuC,KAAM,eAAgBvY,KAAM,UAAWwD,QAAS4U,IAClD,CAAEG,KAAM,UAAWvY,KAAM,SAAUwD,QAASyD,GAC5C,CAAEsR,KAAM,YAAavY,KAAM,WAAYwD,QAAS+O,GAChD,CAAEgG,KAAM,kBAAmBvY,KAAM,kBAAmBwD,QAAS0Q,GAE7D,CAAEqE,KAAM,SAAUvY,KAAM,QAASwD,QAAS0S,EAAQsC,OAAO,GACzD,CAAED,KAAM,gBAAiBvY,KAAM,SAAUwD,QAAS0S,GAClD,CAAEqC,KAAM,oBAAqBvY,KAAM,aAAcwD,QAAS2S,GAC1D,CAAEoC,KAAM,QAASvY,KAAM,OAAQwD,QAAS8S,EAAOkC,OAAO,GACtD,CAAED,KAAM,kBAAmBvY,KAAM,YAAawD,QAAS4S,GACvD,CAAEmC,KAAM,oBAAqBvY,KAAM,cAAewD,QAAS6S,GAC3D,CAAEkC,KAAM,cAAevY,KAAM,QAASwD,QAAS8S,GAC/C,CAAEiC,KAAM,kBAAmBvY,KAAM,WAAYwD,QAAS+S,GACtD,CAAEgC,KAAM,kBAAmBvY,KAAM,WAAYwD,QAASgT,GACtD,CAAE+B,KAAM,oBAAqBvY,KAAM,cAAewD,QAASiT,GAC3D,CAAE8B,KAAM,aAAcvY,KAAM,OAAQwD,QAASkT,GAC7C,CAAE6B,KAAM,oBAAqBvY,KAAM,cAAewD,QAASmT,GAC3D,CAAE4B,KAAM,qBAAsBvY,KAAM,eAAgBwD,QAASoT,GAC7D,CAAE2B,KAAM,iBAAkBvY,KAAM,WAAYwD,QAASqT,GACrD,CAAE0B,KAAM,iBAAkBvY,KAAM,WAAYwD,QAASsT,GACrD,CAAEyB,KAAM,iBAAkBvY,KAAM,WAAYwD,QAASuT,GACrD,CAAEwB,KAAM,eAAgBvY,KAAM,SAAUwD,QAASwT,GACjD,CAAEuB,KAAM,iBAAkBvY,KAAM,WAAYwD,QAASyT,GACrD,CAAEsB,KAAM,WAAYvY,KAAM,UAAWwD,QAAS0T,GAASsB,OAAO,GAC9D,CAAED,KAAM,mBAAoBvY,KAAM,UAAWwD,QAAS0T,IACtD,CAAEqB,KAAM,qBAAsBvY,KAAM,YAAawD,QAAS4T,IAC1D,CAAEmB,KAAM,yBAA0BvY,KAAM,gBAAiBwD,QAAS2T,IAClE,CAAEoB,KAAM,UAAWvY,KAAM,SAAUwD,QAASoU,IAC5C,CAAEW,KAAM,SAAUvY,KAAM,QAASwD,QAAS+T,GAAaiB,OAAO,GAC9D,CAAED,KAAM,sBAAuBvY,KAAM,eAAgBwD,QAAS+T,IAC9D,CAAEgB,KAAM,gBAAiBvY,KAAM,SAAUwD,QAASsK,IAClD,CAAEyK,KAAM,uBAAwBvY,KAAM,kBAAmBwD,QAAS6T,IAClE,CAAEkB,KAAM,eAAgBvY,KAAM,QAASwD,QAASkU,IAChD,CAAEa,KAAM,qBAAsBvY,KAAM,cAAewD,QAASgU,IAC5D,CAAEe,KAAM,yBAA0BvY,KAAM,kBAAmBwD,QAAS8T,IACpE,CAAEiB,KAAM,gBAAiBvY,KAAM,SAAUwD,QAASiU,IAClD,CAAEc,KAAM,oBAAqBvY,KAAM,aAAcwD,QAASmU,IAC1D,CAAEY,KAAM,SAAUC,OAAO,EAAMxY,KAAM,QAASwD,QAASqU,IACvD,CAAEU,KAAM,sBAAuBvY,KAAM,eAAgBwD,QAASqU,IAC9D,CAAEU,KAAM,eAAgBvY,KAAM,QAASwD,QAASsU,IAChD,CAAES,KAAM,gBAAiBvY,KAAM,SAAUwD,QAASuU,IAClD,CAAEQ,KAAM,iBAAkBvY,KAAM,gBAAiBwD,QAASwU,GAAQQ,OAAO,GACzE,CAAED,KAAM,wBAAyBvY,KAAM,SAAUwD,QAASwU,IAC1D,CAAEO,KAAM,wBAAyBvY,KAAM,SAAUwD,QAASyU,IAC1D,CAAEM,KAAM,wBAAyBvY,KAAM,SAAUwD,QAAS0U,IAC1D,CAAEK,KAAM,wBAAyBvY,KAAM,SAAUwD,QAAS2U,IAC1D,CAAEI,KAAM,WAAYvY,KAAM,UAAWwD,QAAS6U,KAGvC,CACP,CACEE,KAAM,SACN/U,QAASiV,EAAAA,UAKf,YCrHMC,GAAaA,KAEflY,EAAAA,EAAAA,KAACkU,EAAAA,GAAU,CAACiE,IAAE,EAAAjY,UACZF,EAAAA,EAAAA,KAACoY,EAAAA,SAAQ,CAACC,UAAUrY,EAAAA,EAAAA,KAACsY,EAAAA,GAAQ,CAAC7X,MAAM,YAAaP,UAC/CQ,EAAAA,EAAAA,MAAC6X,EAAAA,GAAM,CAAArY,SAAA,CACJ4X,GAAO1W,KAAI,CAACoX,EAAOC,IAEhBD,EAAMxV,UACJhD,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAK,CAEJX,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,MACbxY,KAAMgZ,EAAMhZ,KACZwD,SAAShD,EAAAA,EAAAA,KAACwY,EAAMxV,QAAO,KAJlByV,MASbzY,EAAAA,EAAAA,KAAC0Y,EAAAA,GAAK,CAACX,KAAK,IAAI/U,SAAShD,EAAAA,EAAAA,KAAC2Y,EAAAA,GAAQ,CAACC,GAAG,YAAYxW,SAAO,aAOnE,GAAeqT,EAAAA,KAAWyC,I,gGCiD1B,GAtD0BW,KACxB,MAAM5R,GAAWC,EAAAA,EAAAA,MAYjB,OACExG,EAAAA,EAAAA,MAACoY,EAAAA,GAAS,CAACC,QAAQ,WAAU7Y,SAAA,EAC3BF,EAAAA,EAAAA,KAACgZ,EAAAA,GAAe,CAACC,UAAU,aAAa9Y,UAAU,OAAO+Y,OAAO,EAAMhZ,UACpEF,EAAAA,EAAAA,KAACmZ,EAAAA,GAAO,CAACC,IAAKC,GAAUC,KAAK,UAE/B5Y,EAAAA,EAAAA,MAAC6Y,EAAAA,GAAa,CAACpZ,UAAU,OAAO8Y,UAAU,aAAY/Y,SAAA,EACpDF,EAAAA,EAAAA,KAACwZ,EAAAA,GAAe,CAACrZ,UAAU,4BAA2BD,SAAC,aAsBvDQ,EAAAA,EAAAA,MAAC+Y,EAAAA,GAAa,CAAC1Y,QAAUmI,GAlCAA,KAC7BA,EAAE8L,iBACF/N,EAAS,mBACT1I,QAAQC,IAAI,0BAA0B,EA+BHkb,CAAsBxQ,GAAIyQ,KAAK,IAAGzZ,SAAA,EAC/DF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACzF,UAAU,SAAS,sBAG5BO,EAAAA,EAAAA,MAAC+Y,EAAAA,GAAa,CAAC1Y,QAASA,KAzC5B6F,aAAasO,WAAW,cACxBtO,aAAasO,WAAW,kBAwC2ByE,KAAK,IAAGzZ,SAAA,EACrDF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACzF,UAAU,SAAS,iBAIpB,ECIhB,GA7DkByZ,KAChB,MAAMC,GAAWC,EAAAA,GAAAA,MACXC,GAAcC,EAAAA,GAAAA,KAAa7Q,GAAUA,EAAM4Q,cAEjD,OACE/Z,EAAAA,EAAAA,KAACia,EAAAA,GAAO,CAACC,SAAS,SAAS/Z,UAAU,OAAMD,UACzCQ,EAAAA,EAAAA,MAACwT,EAAAA,GAAU,CAACiG,OAAK,EAAAja,SAAA,EACfF,EAAAA,EAAAA,KAACoa,EAAAA,GAAc,CACbja,UAAU,OACVY,QAASA,IAAM8Y,EAAS,CAAE/Y,KAAM,MAAOiZ,aAAcA,IAAe7Z,UAEpEF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAMwU,GAAAA,EAASf,KAAK,UAK7BtZ,EAAAA,EAAAA,KAACsa,EAAAA,GAAY,CAACna,UAAU,oBAAoByY,GAAG,IAAG1Y,UAChDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAENF,EAAAA,EAAAA,KAACua,EAAAA,GAAU,CAACpa,UAAU,2BAA0BD,UAC9CF,EAAAA,EAAAA,KAACwa,EAAAA,GAAQ,CAAAta,UACPF,EAAAA,EAAAA,KAACya,EAAAA,GAAQ,CAAC7B,GAAG,aAAa8B,UAAWC,GAAAA,GAAQza,SAAC,mBAWlDF,EAAAA,EAAAA,KAACua,EAAAA,GAAU,KAiBXva,EAAAA,EAAAA,KAACua,EAAAA,GAAU,CAACpa,UAAU,OAAMD,UAC1BF,EAAAA,EAAAA,KAAC6Y,GAAiB,UAOd,ECvED+B,GAAgBzc,IAAgB,IAAf,MAAE0c,GAAO1c,EACrC,MAAMkX,GAAWyF,EAAAA,EAAAA,MACXC,EAAUA,CAACvb,EAAMqG,EAAMmV,KAEzBta,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAAC,SAAA,CACG2F,GAAQA,EACRrG,GAAQA,EACRwb,IACChb,EAAAA,EAAAA,KAACib,EAAAA,GAAM,CAACxa,MAAOua,EAAMva,MAAON,UAAU,UAASD,SAC5C8a,EAAMhS,UAOXkS,EAAUA,CAACvO,EAAMrL,KACrB,MAAM,UAAEoZ,EAAS,KAAElb,EAAI,MAAEwb,EAAK,KAAEnV,KAASsV,GAASxO,EAC5CyO,EAAYV,EAClB,OACEW,EAAAA,EAAAA,eAACD,EAAS,IACHD,EAAKvC,KACPuC,EAAKN,OAAS,CACbH,UAAWC,GAAAA,IAEfW,IAAKha,KACD6Z,GAEHJ,EAAQvb,EAAMqG,EAAMmV,GACX,EAGVO,EAAWA,CAAC5O,EAAMrL,KAAW,IAADka,EAChC,MAAM,UAAEd,EAAS,KAAElb,EAAI,KAAEqG,EAAI,GAAE+S,KAAOuC,GAASxO,EACzCyO,EAAYV,EAClB,OACE1a,EAAAA,EAAAA,KAACob,EAAS,CACR3C,IAAKgD,OAAOna,GAEZoa,QAASX,EAAQvb,EAAMqG,GACvB8V,QAAStG,EAASuG,SAASC,WAAWjD,MAClCuC,EAAIjb,SAEG,QAFHsb,EAEP7O,EAAKkO,aAAK,IAAAW,OAAA,EAAVA,EAAYpa,KAAI,CAACuL,EAAMrL,IACtBqL,EAAKkO,MAAQU,EAAS5O,EAAMrL,GAAS4Z,EAAQvO,EAAMrL,MANhDA,EAQK,EAIhB,OACEtB,EAAAA,EAAAA,KAACyV,EAAAA,SAAc,CAAAvV,SACZ2a,GACCA,EAAMzZ,KAAI,CAACuL,EAAMrL,IAAWqL,EAAKkO,MAAQU,EAAS5O,EAAMrL,GAAS4Z,EAAQvO,EAAMrL,MAClE,E,yBC3CrB,MA8SA,GA9Sa,CACX,CACEoZ,UAAWF,EAAAA,GACXhb,KAAM,YACNoZ,GAAI,cAEN,CACE8B,UAAWF,EAAAA,GACXhb,KAAM,WACNoZ,GAAI,gBAEN,CACE8B,UAAWF,EAAAA,GACXhb,KAAM,SACNoZ,GAAI,WAEN,CACE8B,UAAWF,EAAAA,GACXhb,KAAM,cACNoZ,GAAI,c,SChBR,MAAMkD,GAAaA,KACjB,MAAMjC,GAAWC,EAAAA,GAAAA,MACXiC,GAAa/B,EAAAA,GAAAA,KAAa7Q,GAAUA,EAAM6S,oBAC1CjC,GAAcC,EAAAA,GAAAA,KAAa7Q,GAAUA,EAAM4Q,cACjD,IAAI9S,GAAWC,EAAAA,EAAAA,MAMf,OACExG,EAAAA,EAAAA,MAACub,EAAAA,GAAQ,CACP/B,SAAS,QACT6B,WAAYA,EACZJ,QAAS5B,EACTmC,gBAAkBP,IAChB9B,EAAS,CAAE/Y,KAAM,MAAOiZ,YAAa4B,GAAU,EAC/Czb,SAAA,EAEFF,EAAAA,EAAAA,KAACmc,EAAAA,GAAa,CAAChc,UAAU,mBAAmByY,GAAG,IAAG1Y,UAGhDQ,EAAAA,EAAAA,MAAA,OAAKK,QAASA,KAflBkG,EAAS,IAegC,EAAC5G,MAAO,CAAE+b,OAAQ,WAAYlc,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEkC,OAAQ,IAAKmM,UAAW,UAAWxO,SAAC,kBACjDF,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEkC,OAAQ,IAAK5B,SAAU,QAAST,SAAC,wCAGjDF,EAAAA,EAAAA,KAACqc,EAAAA,GAAW,CAAAnc,UACVF,EAAAA,EAAAA,KAACsc,GAAAA,EAAS,CAAApc,UACRF,EAAAA,EAAAA,KAAC4a,GAAa,CAACC,MAAO0B,WAOjB,EAIf,GAAe9G,EAAAA,KAAWqG,ICxDpBU,GAAeC,IACnB,MAAM,QAAEC,EAAO,KAAE/C,EAAI,KAAEna,GAASid,EAE1BE,EAA4B,MAAnBnd,EAAKI,OAAO,GAErBgd,EAAK,gCAAA/X,OAAmC8U,GAE9C,OACEjZ,EAAAA,EAAAA,MAACmc,EAAAA,GAAQ,CAACpc,MAAM,OAAON,UAAU,WAAUD,SAAA,CACxCwc,GACU,WAAA7X,OACIrF,EAAI,eAAAqF,OACb8X,EAAS,OAAS,MAAK,mEAAA9X,OAEdrF,EAAI,MAAAqF,OAAKrF,EAAI,KAAAqF,OAAI8X,EAAS,MAAQ,KAAI,0HAErD3c,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,iDACyC,KAC/CA,EAAAA,EAAAA,KAAC8c,EAAAA,GAAK,CAACnD,KAAMiD,EAAO7I,OAAO,SAAQ7T,SAAC,4DAE5B,MAEC,EAUf,GAAeuV,EAAAA,KAAW+G,ICjCpBO,GAAYN,IAChB,MAAM,KAAE9C,EAAI,KAAEna,EAAI,KAAEwJ,KAASmS,GAASsB,EAEhCG,EAAQpd,EAAI,2CAAAqF,OAA8CrF,GAASma,EAEzE,OACE3Z,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBF,EAAAA,EAAAA,KAAC8c,EAAAA,GAAK,IACA3B,EACJxB,KAAMiD,EACNI,IAAI,sBACJjJ,OAAO,SACP5T,UAAU,qBAAoBD,UAE9BF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,uBAAsBD,SAAE8I,GAAQ,YAE/C,EAUV,GAAeyM,EAAAA,KAAWsH,I,4BCxB1B,MAAME,GAAeR,IACnB,MAAM,SAAEvc,EAAQ,KAAEyZ,GAAS8C,EAErBG,EAAK,gCAAA/X,OAAmC8U,GAE9C,OACEjZ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,UAASD,SAAA,EACtBQ,EAAAA,EAAAA,MAACwc,EAAAA,GAAI,CAACnE,QAAQ,OAAM7Y,SAAA,EAClBF,EAAAA,EAAAA,KAACwa,EAAAA,GAAQ,CAAAta,UACPQ,EAAAA,EAAAA,MAAC+Z,EAAAA,GAAQ,CAACd,KAAK,IAAIwD,QAAM,EAAAjd,SAAA,EACvBF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAMuX,GAAAA,EAAcjd,UAAU,SAAS,gBAIlDH,EAAAA,EAAAA,KAACwa,EAAAA,GAAQ,CAAAta,UACPQ,EAAAA,EAAAA,MAAC+Z,EAAAA,GAAQ,CAACd,KAAMiD,EAAO7I,OAAO,SAAQ7T,SAAA,EACpCF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAMwX,GAAAA,EAASld,UAAU,SAAS,gBAK/CH,EAAAA,EAAAA,KAACsd,EAAAA,GAAW,CAACnd,UAAU,iBAAgBD,UACrCF,EAAAA,EAAAA,KAACud,EAAAA,GAAQ,CAACpd,UAAU,cAAcwb,SAAO,EAAAzb,SACtCA,QAGD,EASV,GAAeuV,EAAAA,KAAWwH,G,mFCtC1B,MAeA,EAfsBO,KAElB9c,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEF,EAAAA,EAAAA,KAAC8b,EAAAA,GAAU,KACXpb,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iDAAgDD,SAAA,EAC7DF,EAAAA,EAAAA,KAAC4Z,EAAAA,GAAS,KACV5Z,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAuBD,UACpCF,EAAAA,EAAAA,KAACkY,EAAAA,GAAU,W,iFCNN,SAAS1H,IACtB,OACExQ,EAAAA,EAAAA,KAACyd,EAAAA,EAAG,CACFpd,MAAO,CACLoC,MAAO,OACP2K,OAAQ,OACRW,WAAY,OACZW,UAAW,SACXnO,gBAAiB,QACjBW,UAAW,QACXhB,UAEFF,EAAAA,EAAAA,KAAC0d,EAAAA,EAAgB,KAGvB,C,2KCGA,MA6GA,EA7GczF,KACZ,IAAIvR,EAAU5B,2BACI,GAAAD,OAAM6B,EAAO,cACdQ,EAAAA,EAAAA,MADjB,MAEOhC,EAAMyO,IAAW/U,EAAAA,EAAAA,UAAS,CAC/B+e,MAAO,GACP/J,SAAU,MAEL1U,EAASC,IAAcP,EAAAA,EAAAA,WAAS,GAEjCkV,EAAgB5K,IACpB,MAAM,KAAE1J,EAAI,MAAE0E,GAAUgF,EAAE6K,OAC1BJ,EAAQ,IAAKzO,EAAM,CAAC1F,GAAO0E,GAAQ,EAG/BtC,GAAO,IAAID,MAAO4N,cA8BxB,OACE7O,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAE2T,UAAW,QAAS1T,QAAS,OAAQ6M,cAAe,UAAWjN,SAAA,EAC3EQ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,8CAA8CE,MAAO,CAAE4T,KAAM,GAAI/T,SAAA,CAC7EhB,GAAUc,EAAAA,EAAAA,KAACwD,EAAAA,EAAc,CAACC,QAAQ,cAAiB,IACpDzD,EAAAA,EAAAA,KAACkU,EAAAA,GAAU,CAAAhU,UACTF,EAAAA,EAAAA,KAACmU,EAAAA,GAAI,CAAChU,UAAU,yBAAwBD,UACtCF,EAAAA,EAAAA,KAACoU,EAAAA,GAAI,CAACC,GAAI,EAAEnU,UACVF,EAAAA,EAAAA,KAACsU,EAAAA,GAAU,CAAApU,UACTF,EAAAA,EAAAA,KAACuU,EAAAA,GAAK,CAACpU,UAAU,MAAKD,UACpBF,EAAAA,EAAAA,KAACwU,EAAAA,GAAS,CAAAtU,UACRQ,EAAAA,EAAAA,MAAC+T,EAAAA,GAAK,CAACmJ,SAtCJpZ,UACnB,IAAK,IAADqZ,EAAAC,EACF3e,GAAW,GACX+J,EAAE8L,iBACF,MAAM+I,QAAc5T,EAAAA,EAAAA,IAAc,GAADtF,OAAI6B,EAAO,mBAAmBxB,IACzC,IAAlB6Y,EAAM1T,UACRP,EAAAA,GAAMO,QAAQ,sBACdzD,aAAaoX,QAAQ,QAASD,EAAME,OACpCrX,aAAaoX,QAAQ,gBAAiBjX,KAAKmX,UAAe,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOI,OAC5D5Y,OAAO8P,SAASC,SAChBnW,GAAW,KAG0B,KAA9B,OAAL4e,QAAK,IAALA,GAAe,QAAVF,EAALE,EAAOrZ,gBAAQ,IAAAmZ,GAAM,QAANC,EAAfD,EAAiB3Y,YAAI,IAAA4Y,OAAhB,EAALA,EAAuBzT,WACzBlL,GAAW,GACX2K,EAAAA,GAAMC,QAAQ,uBAElB,CAAE,MAAOtE,GACPtG,GAAW,GACX2K,EAAAA,GAAMC,QAAQ,wBACdxL,QAAQC,IAAIiH,EACd,GAiB8CvF,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAC,6BACpCQ,EAAAA,EAAAA,MAACgU,EAAAA,GAAW,CAACvU,UAAU,OAAMD,SAAA,EAC3BF,EAAAA,EAAAA,KAAC2U,EAAAA,GAAe,CAAAzU,UACdF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAMuY,EAAAA,OAEfpe,EAAAA,EAAAA,KAAC6U,EAAAA,GAAU,CACTnH,YAAY,QACZ2Q,aAAa,QACb7e,KAAK,QACL0E,MAAOgB,EAAKyY,MACZnQ,SAAUsG,QAGdpT,EAAAA,EAAAA,MAACgU,EAAAA,GAAW,CAACvU,UAAU,OAAMD,SAAA,EAC3BF,EAAAA,EAAAA,KAAC2U,EAAAA,GAAe,CAAAzU,UACdF,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,KAAM+O,EAAAA,OAEf5U,EAAAA,EAAAA,KAAC6U,EAAAA,GAAU,CACT/T,KAAK,WACL4M,YAAY,WACZ2Q,aAAa,mBACb7e,KAAK,WACL0E,MAAOgB,EAAK0O,SACZpG,SAAUsG,QAGd9T,EAAAA,EAAAA,KAACmU,EAAAA,GAAI,CAAAjU,UACHF,EAAAA,EAAAA,KAACoU,EAAAA,GAAI,CAACU,GAAI,GAAIzU,MAAO,CAAEqO,UAAW,UAAWxO,UAC3CF,EAAAA,EAAAA,KAAC+U,EAAAA,GAAO,CAACtU,MAAM,UAAUN,UAAU,OAAOW,KAAK,SAAQZ,SAAC,iCAgB5EF,EAAAA,EAAAA,KAAC2R,EAAAA,GAAc,KACfjR,EAAAA,EAAAA,MAAA,UAAQP,UAAU,0BAA0BE,MAAO,CAAEie,YAAa,QAASpe,SAAA,CAAC,kBACxD0B,EAAK,2DAErB,C,sEC3HV,MAYM2c,EAAgBrf,IAAO,CAC3Bgb,SAAU,QACVsE,IAAK,EACLC,KAAM,EACNhc,MAAO,OACP2K,OAAQ,OACR7M,gBAAiB,2BACjBD,QAASpB,EAAU,OAAS,OAC5Bwf,eAAgB,SAChBva,WAAY,SACZwa,OAAQ,OAGV,EAzBwBzf,IACtB,MAAMuE,EAAUvE,EAAQuE,QACxB,OACEzD,EAAAA,EAAAA,KAAA,OAAKK,MAAOke,EAAarf,GAASgB,UAChCQ,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEC,QAAS,OAAQ6M,cAAe,SAAUhJ,WAAY,UAAWjE,SAAA,EAC7EF,EAAAA,EAAAA,KAAC4e,EAAAA,EAAS,CAAC1f,QAASA,EAASuB,MAAM,YAClCgD,GAAUzD,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEkC,OAAQ,QAASrC,SAAEuD,IAAe,OAEvD,C","sources":["views/pages/report/ReportModal.js","views/pages/report/PatientReport.js","views/pages/patient/doctorsCalendar.jsx","views/pages/patient/DoctorChangePassword.jsx","routes.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js","views/pages/loader/Loader.jsx","views/pages/login/Login.js","views/publicItems/ SpinnerOverlay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowCircleRight, cilDataTransferDown } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst ReportModal = ({ setHide, popupData, problemSet }) => {\n  console.log('fromMOdal', popupData, problemSet)\n  let diagnosis = popupData?.diagnosis\n  let url = process.env.REACT_APP_API_URL\n\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [selectedFile, setSelectedFile] = useState(Array(diagnosis?.length).fill(''))\n  const [loading, setLoading] = useState(false)\n\n  const isFile = (value) => {\n    const regex = /^\\d{13}_/\n\n    if (regex.test(value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const showReportHandler = async (filename, index) => {\n    try {\n      setLoading(true)\n      // Fetch the image data from the server\n      const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n        responseType: 'blob', // Treat response data as blob\n      })\n\n      // Create a Blob object from the response data\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n      // Generate a URL for the Blob\n      const blobUrl = URL.createObjectURL(blob)\n\n      // Open the URL in a new tab\n      window.open(blobUrl)\n    } catch (error) {\n      console.error('Error fetching image:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n\n  const handleFileSelect = (e, index) => {\n    const { value } = e.target\n    const updatedSelectedFile = [...selectedFile]\n    updatedSelectedFile[index] = value\n    setSelectedFile(updatedSelectedFile)\n  }\n  const editNameFun = (name) => {\n    if (name) {\n      const fileName = name\n      const parts = fileName.split('_')\n      // Check if the file name contains underscores\n      if (parts.length > 1) {\n        // Exclude the first part of the file name and join the rest with underscores\n        const editedFileName = parts.slice(1).join('_')\n        const actualFileName = editedFileName.split('.')[0]\n        return actualFileName\n      } else {\n        // If there are no underscores or only one part, return the original file name\n        return fileName\n      }\n    } else {\n      // If the file name is undefined, return an empty string\n      return ''\n    }\n  }\n\n  const [hoveredFile, setHoveredFile] = useState(null)\n\n  const handleMouseEnter = (fileName) => {\n    const fileNamee = editNameFun(fileName)\n    setHoveredFile(fileNamee)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredFile(null)\n  }\n\n  return (\n    <>\n      <div\n        className=\"modal modal-xl\"\n        tabIndex={-1}\n        style={{\n          display: 'block',\n          backgroundColor: 'rgba(0,0,0,0.8)',\n          maxHeight: '100%',\n          color: 'black',\n        }}\n      >\n        <div\n          className=\"modal-dialog\"\n          // style={{ height: '30rem', width: '60rem', minWidth: '70rem' }}\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <div>\n                <h5 className=\"modal-title\">Diagnosis Details</h5>\n                <p style={{ fontSize: '14px' }}>\n                  <span style={{ fontWeight: 'bolder' }}>CR no.</span> {popupData?.crn}{' '}\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span style={{ fontWeight: 'bolder' }}>Name : </span>\n                  {popupData?.name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => setHide(false)}\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              <div\n                style={{\n                  maxHeight: '300px',\n                  overflowY: 'scroll',\n                  overflowX: 'hidden',\n                  marginTop: '20px',\n                  padding: '0',\n                }}\n              >\n                {reversedDiagnosis?.map((elem, index) => {\n                  const date = new Date(elem.date)\n                  const formattedDate = date\n                    .toLocaleDateString('en-IN', {\n                      year: 'numeric',\n                      month: '2-digit',\n                      day: '2-digit',\n                      hour: '2-digit',\n                      minute: '2-digit',\n                      hour12: true,\n                    })\n                    .replace(/\\//g, '/')\n                  let showProcedure = false\n                  let showNotes = false\n\n                  return (\n                    <div key={index} style={{ margin: '1rem' }}>\n                      <div className=\"row\" style={{ overflowX: 'auto' }}>\n                        <div style={{ overflow: 'auto !important' }}>\n                          <h5>Diagnose Date: {formattedDate}</h5>\n                          <table\n                            className=\"table\"\n                            style={{\n                              width: '100%',\n                              border: '1px solid',\n                              fontFamily: 'ui-rounded',\n                              borderRadius: '10px',\n                            }}\n                          >\n                            <colgroup>\n                              <col style={{ width: '20%' }} />\n                              <col style={{ width: '20%' }} />\n                              <col style={{ width: '30%' }} />\n                              <col style={{ width: '30%' }} />\n                            </colgroup>\n                            <thead>\n                              <tr>\n                                <th\n                                  scope=\"col\"\n                                  className=\"tableTitle\"\n                                  style={{ background: '#FBF295' }}\n                                >\n                                  Problems\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"tableTitle\"\n                                  style={{ background: '#FBF295' }}\n                                >\n                                  Sub Problem\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"tableTitle\"\n                                  style={{ background: '#FBF295' }}\n                                >\n                                  Tests\n                                </th>\n                                <th\n                                  scope=\"col\"\n                                  className=\"tableTitle\"\n                                  style={{ background: '#FBF295' }}\n                                >\n                                  Scales\n                                </th>\n                              </tr>\n                            </thead>\n\n                            {elem?.diagnosData?.map((element, innerIndex) => {\n                              const { problem, subProblem, scale, test } = element\n                              if (!problemSet.includes(problem)) {\n                                // Skip rendering this problem if it's not included in problemSet\n                                return null\n                              }\n                              showProcedure = true\n                              showNotes = true\n                              return (\n                                <tbody key={innerIndex} style={{ borderBottom: '1px solid' }}>\n                                  {loading && <SpinnerOverlay message=\"Opening File\" />}\n                                  {problemSet.includes(problem) ? (\n                                    <>\n                                      <td style={{ fontWeight: 'bolder' }}>\n                                        &nbsp;&nbsp;{problem}\n                                      </td>\n                                      <td style={{ fontWeight: 'bolder' }}>\n                                        {subProblem ? subProblem : '-'}\n                                      </td>\n                                      <td>\n                                        {test.map((testData, testIndex) => (\n                                          <div key={testIndex}>\n                                            {testData.name === '' ? (\n                                              '-'\n                                            ) : (\n                                              <div className=\"row\" style={{ margin: 0 }}>\n                                                <td\n                                                  // className=\"tableTitle\"\n                                                  style={{\n                                                    width: '50%',\n                                                    paddingRight: '10px',\n                                                    margin: 'auto',\n                                                    fontWeight: 'bolder',\n                                                  }}\n                                                >\n                                                  {testData.name} :\n                                                </td>\n                                                <div style={{ width: '50%' }}>\n                                                  <td style={{ margin: '0', padding: 0 }}>\n                                                    {testData.testInput !== '' ? (\n                                                      <td\n                                                        style={{\n                                                          width: '40%',\n                                                          paddingRight: '10px',\n                                                          margin: 'auto',\n                                                        }}\n                                                      >\n                                                        {testData.testInput}\n                                                      </td>\n                                                    ) : (\n                                                      <div style={{ display: 'flex', margin: 0 }}>\n                                                        {testData.files?.map((file, fileIndex) => (\n                                                          <div\n                                                            key={fileIndex}\n                                                            value={file.fileName}\n                                                            style={{\n                                                              display: 'flex',\n                                                              alignItems: 'center',\n                                                              marginRight: '10px',\n                                                              margin: '0 5px 0 0', // Adjusted margin for files\n                                                            }}\n                                                            onMouseEnter={() => {\n                                                              const editedName = editNameFun(\n                                                                file.fileName,\n                                                              )\n                                                              setHoveredFile(editedName)\n                                                            }}\n                                                            onMouseLeave={() => setHoveredFile('')}\n                                                            onClick={() =>\n                                                              showReportHandler(\n                                                                file?.fileName,\n                                                                fileIndex,\n                                                              )\n                                                            }\n                                                          >\n                                                            <button\n                                                              type=\"button\"\n                                                              className=\"btn btn-sm btn-primary\"\n                                                              data-toggle=\"popover\"\n                                                              title={hoveredFile}\n                                                              style={{ margin: '0' }}\n                                                            >\n                                                              <CIcon icon={cilDataTransferDown} />\n                                                            </button>\n                                                          </div>\n                                                        ))}\n                                                      </div>\n                                                    )}\n                                                  </td>\n                                                </div>\n                                              </div>\n                                            )}\n                                          </div>\n                                        ))}\n                                      </td>\n                                      <td>\n                                        {scale.map((scaleData, scaleIndex) => (\n                                          <div key={scaleIndex}>\n                                            {scaleData.name === '' ? (\n                                              '-'\n                                            ) : (\n                                              <div className=\"row\" style={{ margin: 0 }}>\n                                                <div\n                                                  className=\"col-md-6\"\n                                                  style={{\n                                                    fontWeight: 'bolder',\n                                                    paddingRight: '10px',\n                                                    margin: 'auto',\n                                                    wordWrap: 'break-word',\n                                                  }}\n                                                >\n                                                  {scaleData.name}:\n                                                </div>\n\n                                                <div\n                                                  className=\"col-md-6 tableTitle\"\n                                                  style={{\n                                                    margin: '0',\n                                                    padding: 0,\n                                                    wordWrap: 'break-word',\n                                                  }}\n                                                >\n                                                  {scaleData.value}\n                                                </div>\n                                              </div>\n                                            )}\n                                          </div>\n                                        ))}\n                                      </td>\n                                    </>\n                                  ) : null}\n                                  <hr style={{ width: '100%' }} />\n                                </tbody>\n                              )\n                            })}\n                          </table>\n\n                          {elem?.procedure?.length !== 0 && showProcedure ? (\n                            <table\n                              className=\"table\"\n                              style={{\n                                width: '100%',\n                                border: '1px solid',\n                                fontFamily: 'ui-rounded',\n                                borderRadius: '10px',\n                              }}\n                            >\n                              <tbody>\n                                <tr>\n                                  <td colSpan=\"4\">\n                                    <h5 style={{ fontWeight: 'bolder' }}>Procedures:</h5>\n                                  </td>\n                                </tr>\n                                <tr>\n                                  <td style={{ background: '#FBF295', fontWeight: 'bold' }}>\n                                    &nbsp;&nbsp;Name\n                                  </td>\n                                  <td style={{ background: '#FBF295', fontWeight: 'bold' }}>\n                                    Complications\n                                  </td>\n                                  <td style={{ background: '#FBF295', fontWeight: 'bold' }}>\n                                    Done By\n                                  </td>\n                                  <td style={{ background: '#FBF295', fontWeight: 'bold' }}>\n                                    Date\n                                  </td>\n                                </tr>\n                                {elem?.procedure?.map((procedureData, procedureIndex) => {\n                                  const date = new Date(procedureData.date)\n                                  const formattedDate = date\n                                    .toLocaleDateString('en-IN', {\n                                      year: 'numeric',\n                                      month: '2-digit',\n                                      day: '2-digit',\n                                      hour: '2-digit',\n                                      minute: '2-digit',\n                                      hour12: true,\n                                    })\n                                    .replace(/\\//g, '/')\n                                  return (\n                                    <tr key={procedureIndex}>\n                                      <td>&nbsp;&nbsp;{procedureData.name}</td>\n                                      <td>{procedureData.complications}</td>\n                                      <td>{procedureData.doneBy}</td>\n                                      <td>{formattedDate}</td>\n                                    </tr>\n                                  )\n                                })}\n                              </tbody>\n                            </table>\n                          ) : null}\n\n                          {showNotes && (\n                            <div className=\"row\" style={{ margin: '1rem auto 1rem 0' }}>\n                              <div>\n                                <div className=\"row\">\n                                  <div className=\"card\" style={{ padding: '1rem 2rem' }}>\n                                    <div className=\"d-flex\">\n                                      <p style={{ margin: '0' }}>\n                                        {' '}\n                                        Notes :&nbsp;&nbsp;&nbsp;\n                                        {elem.desc === '' ? '-' : elem.desc}\n                                      </p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      {/* <hr style={{ width: '100%' }} /> */}\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n                onClick={() => setHide(false)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nReportModal.propTypes = {\n  setHide: PropTypes.func.isRequired,\n  popupData: PropTypes.func.isRequired,\n  problemSet: PropTypes.func.isRequired,\n}\n\nexport default ReportModal\n","import React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchData } from 'src/api/Api'\nimport { Divider, Radio, Table } from 'antd'\nimport { useNavigate } from 'react-router-dom'\nimport { Pagination, Stack } from '@mui/material'\n\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport dayjs from 'dayjs'\nimport { DateTimePicker } from '@mui/x-date-pickers'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport Loader from '../loader/Loader'\nimport ReportModal from './ReportModal'\nimport Select from 'react-select'\nimport { CChart } from '@coreui/react-chartjs'\nimport * as XLSX from 'xlsx'\nimport { saveAs } from 'file-saver'\n\nconst PatientReport = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [loading, setLoading] = useState(false)\n\n  const navigate = useNavigate()\n  const [hide, setHide] = useState(false)\n  const [popupData, setPopuoData] = useState({})\n  const [updateState, setUpdateState] = useState(false)\n  const [problemSet, setProblemSet] = useState('')\n  const [pageCount, setPageCount] = useState(1)\n  const [page, setPage] = useState(1)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [patientProblems, setPatientProblems] = useState([])\n  const [selectDropdownValue, setSelectDropdownValue] = useState('')\n  const colorPalette = ['#41B883', '#E46651', '#00D8FF', '#DD1B16', '#8A2BE2', '#FFA500', '#32CD32']\n\n  const fetchProblems = async () => {\n    try {\n      setLoading(true)\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map((test) => test.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n\n        const options = problemFilter.map((problem) => ({\n          value: problem,\n          label: problem,\n        }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(options)\n        setSelectDropdownValue(options)\n        setProblemSet(\n          options.map((el) => {\n            return el.value\n          }),\n        )\n        setLoading(false)\n      }\n    } catch (error) {\n      setLoading(false)\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handlSetPoblem = (elem) => {\n    // if (elem.length < 8) {\n    setSelectDropdownValue(elem)\n    setProblemSet(\n      elem.map((el) => {\n        return el.value\n      }),\n    )\n    // }\n    // else {\n    //   toast.warning('You can only select chief complaints upto 7 ')\n    // }\n  }\n\n  // const getPatientByProblem = async () => {\n  //   try {\n  //     console.log('ashish', problemSet)\n  //     if (problemSet?.length === 0) {\n  //       return\n  //     }\n  //     const res = await getFetch(\n  //       `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&page=${page}`,\n  //     )\n  //     console.log('response', res)\n  //     setPageCount(res?.data?.pageCount)\n  //     setPatientProblems(res.data.data)\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  const columns = [\n    {\n      title: 'CR no',\n      dataIndex: 'crn',\n    },\n    // {\n    //   title: 'Phone no',\n    //   dataIndex: 'phone',\n    //   render: (text) => <a>{text}</a>,\n    // },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      // render: (text) => <p>{text}</p>,\n      // sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Sex',\n      dataIndex: 'sex',\n      sorter: (a, b) => a.sex.localeCompare(b.sex),\n    },\n    {\n      title: 'Action',\n      render: (text) => {\n        // console.log('text', text)\n        return (\n          <button className=\"btn btn-primary\" onClick={() => handleOpenMOdal(text)}>\n            View Diagnosis\n          </button>\n        )\n      },\n    },\n    {\n      title: 'Action',\n\n      render: (text) => {\n        // console.log('text', text)\n        return (\n          <button\n            className=\"btn btn-primary\"\n            onClick={(e) => navigate('/patientPage', { state: text })}\n          >\n            Show Details\n          </button>\n        )\n      },\n    },\n  ]\n  const todayDate = dayjs()\n  const [startingDate, setStartingDate] = useState(dayjs().subtract(7, 'day'))\n  const [endDate, setEndDate] = useState(todayDate)\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n\n  const handleStartingDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('Stating date not be in the future')\n      return setStartingDate(todayDate)\n    }\n    setStartingDate(date)\n  }\n  const handleEndDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('End date not be in the future')\n      return setEndDate(todayDate)\n    }\n    setEndDate(date)\n  }\n\n  const filterDataAccordingToProblemSet = (response, problemSet) => {\n    for (const diagnosis of response) {\n      diagnosis.diagnosData = diagnosis.diagnosData.filter((data) =>\n        problemSet.includes(data.problem),\n      )\n    }\n    return response.filter((diagnosis) => diagnosis.diagnosData.length > 0)\n  }\n\n  const [filterDatatResponse, setFilterDataResponse] = useState('')\n\n  const dateSubmit = async () => {\n    if (problemSet === '') {\n      return toast.warning('Please select any one Chief Complaint')\n    }\n    if (endDate.isBefore(startingDate, 'day')) {\n      toast.warning('End date cannot be earlier than start date')\n      return\n    }\n    setLoading(true)\n    const date = new Date(startingDate)\n    const date1 = new Date(endDate)\n\n    console.log(`Report Start ${date} and Report End ${date1}`)\n    ////////////FOR SINGLE PROBLEM FIND PATIENTS////////////////////\n    // const res = await getFetch(\n    //   `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&startDate=${date}&endDate=${date1}&page=${page}`,\n    // )\n\n    // console.log('ashdata', res)\n\n    // working perfectly\n\n    //////////////////////////////////////////////\n    console.log('selected problems', problemSet)\n    const data = {\n      problems: problemSet,\n    }\n\n    const res = await postFetchData(\n      `${API_URL}/api/patient/multipleProblems?problem=${problemSet}&doctor_id=${patientRecord._id}&startDate=${date}&endDate=${date1}&page=${page}`,\n      data,\n    )\n\n    if (res?.success === true) {\n      console.log('searched data', res)\n\n      const filterDataArray = await Promise.all(\n        res?.data?.map(async (obj) => {\n          const filteredDiagnosis = await filterDataAccordingToProblemSet(obj.diagnosis, problemSet)\n          return { ...obj, diagnosis: filteredDiagnosis }\n        }),\n      )\n\n      setFilterDataResponse(filterDataArray)\n\n      console.log('filtered Data', filterDataArray)\n\n      setPageCount(res?.pageCount)\n      setPatientProblems(res?.data)\n\n      const problemCounts = {}\n\n      console.log('response', res)\n\n      res?.data?.forEach((patient) => {\n        const patientProblemSet = new Set()\n        patient?.diagnosis?.forEach((element) => {\n          element?.diagnosData?.forEach((diagnosis) => {\n            const problem = diagnosis.problem\n\n            if (problemSet.includes(problem) && !patientProblemSet.has(problem)) {\n              problemCounts[problem] = (problemCounts[problem] || 0) + 1\n              patientProblemSet.add(problem)\n            }\n          })\n        })\n      })\n      let maleCount = 0\n      let femaleCount = 0\n      let otherCount = 0\n      res?.data?.forEach((patient) => {\n        if (patient.sex === 'male') {\n          maleCount = maleCount + 1\n        } else if (patient.sex === 'female') {\n          femaleCount = femaleCount + 1\n        } else {\n          otherCount = otherCount + 1\n        }\n      })\n      setFilterDataBySex({\n        male: maleCount,\n        female: femaleCount,\n        other: otherCount,\n      })\n      console.log('Count male female', filterDataBySex)\n\n      setTest(problemCounts)\n      setLoading(false)\n    } else {\n      setLoading(false)\n      console.log('not find')\n    }\n  }\n\n  const [test, setTest] = useState('')\n  console.log('Test', test)\n  const [filterDataBySex, setFilterDataBySex] = useState({\n    male: 0,\n    female: 0,\n    other: 0,\n  })\n  console.log('filterDataBySex', filterDataBySex)\n\n  const dateReset = () => {\n    setStartingDate(todayDate)\n    setEndDate(todayDate)\n    setUpdateState(!updateState)\n    setProblemSet('Select Problem')\n    setPatientProblems('')\n    setFilterDataBySex('')\n    setTest('')\n    setSelectDropdownValue('')\n    setFilterDataResponse('')\n  }\n\n  const handleOpenMOdal = (text) => {\n    setHide(true)\n    console.log('datafromdiagbutton', text)\n    setPopuoData(text)\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchProblems()\n\n      if (problemSet.length) {\n        dateSubmit()\n      }\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    if (problemSet.length) {\n      dateSubmit()\n    }\n  }, [problemSet, page, updateState])\n\n  const handleDropdownChange = (selectedOptions) => {\n    if (!selectedOptions || selectedOptions.length === 0) {\n      dateReset()\n    } else {\n      handlSetPoblem(selectedOptions)\n    }\n  }\n\n  const exportToExcel = () => {\n    setLoading(true)\n\n    const workbook = XLSX.utils.book_new()\n\n    const titleRow = [\n      'CRN',\n      'Name',\n      'Age',\n      'Sex',\n      'Phone',\n      'Next Appointment Date',\n      'Problem',\n      'Sub Problem',\n      'Notes',\n      // 'Test Name',\n      // 'Test Input',\n      'Scale Name',\n      'Scale Value',\n      'Procedure Name',\n      'Procedure Complications',\n      'Procedure Done By',\n      'Procedure Date',\n    ]\n\n    const worksheet = XLSX.utils.aoa_to_sheet([titleRow])\n\n    filterDatatResponse.forEach((item) => {\n      const { _id, name, age, sex, crn, phone, nextApointmentDate, diagnosis } = item\n      const bbb = new Date(nextApointmentDate)\n      const nextAppointmentDateFormateed = `${bbb.getDate()}/${\n        bbb.getMonth() + 1\n      }/${bbb.getFullYear()}`\n\n      diagnosis.forEach((diagnosisItem) => {\n        const { diagnosData, procedure, desc } = diagnosisItem\n\n        diagnosData.forEach((diagnosDataItem) => {\n          const { problem, subProblem, test, scale } = diagnosDataItem\n          let shownProcedure = false\n\n          // test.forEach((testItem) => {\n          //   const { name: testName, testInput } = testItem\n\n          // scale.forEach((scaleItem) => {\n          //   const { name: scaleName, value: scaleValue } = scaleItem\n\n          const scaleName = scale.map((scale) => scale.name).join(', ')\n          const scaleValue = scale.map((scale) => scale.value).join(', ')\n          if (procedure.length) {\n            procedure.forEach((procedureItem) => {\n              const { name: procedureName, complications, doneBy, date } = procedureItem\n              if (shownProcedure === false) {\n                console.log('Datessss', date)\n                const aaa = new Date(date)\n\n                const formattedDate = `${aaa.getDate()}/${aaa.getMonth() + 1}/${aaa.getFullYear()}`\n\n                const dataRow = [\n                  crn,\n                  name,\n                  age,\n                  sex,\n                  phone,\n                  nextAppointmentDateFormateed,\n                  problem,\n                  subProblem,\n                  desc,\n                  // testName,\n                  // testInput,\n                  scaleName,\n                  scaleValue,\n                  procedureName,\n                  complications,\n                  doneBy,\n                  formattedDate,\n                ]\n                shownProcedure = true\n                // Append the row to the worksheet\n                XLSX.utils.sheet_add_aoa(worksheet, [dataRow], { origin: -1 }) // -1 to append rows after the title row\n              } else {\n                const aaa = new Date(date)\n\n                const formattedDate = `${aaa.getDate()}/${aaa.getMonth() + 1}/${aaa.getFullYear()}`\n\n                const dataRow = [\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  ,\n                  procedureName,\n                  complications,\n                  doneBy,\n                  formattedDate,\n                ]\n\n                XLSX.utils.sheet_add_aoa(worksheet, [dataRow], { origin: -1 })\n              }\n            })\n          } else {\n            const dataRow = [\n              crn,\n              name,\n              age,\n              sex,\n              phone,\n              nextAppointmentDateFormateed,\n              problem,\n              subProblem,\n              desc,\n              // testName,\n              // testInput,\n              scaleName,\n              scaleValue,\n            ]\n            XLSX.utils.sheet_add_aoa(worksheet, [dataRow], { origin: -1 })\n          }\n\n          // })\n          // })\n        })\n      })\n    })\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1')\n\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' })\n\n    const blob = new Blob([excelBuffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    })\n    const date = new Date()\n\n    saveAs(blob, `data_${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`)\n\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"mb-3 \" style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      {hide ? <ReportModal setHide={setHide} popupData={popupData} problemSet={problemSet} /> : ''}\n      {loading ? <SpinnerOverlay message=\"Loading\" /> : ''}\n      <div className=\"row\">\n        <div className=\"col-sm-3 mt-2\">\n          <Select\n            options={problems}\n            isMulti\n            value={selectDropdownValue}\n            // onChange={(e) => handlSetPoblem(e)}\n            onChange={handleDropdownChange}\n            placeholder=\"Select Chief Complaint\"\n            maxMenuHeight={300}\n            styles={{\n              singleValue: (provided, state) => ({\n                ...provided,\n                height: '30px',\n                lineHeight: '30px',\n              }),\n            }}\n          />\n        </div>\n\n        <div className=\"col-sm-9\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"From\"\n                      value={startingDate}\n                      onChange={handleStartingDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // sx={{ width: '100px' }}\n                      // className=\"w-50\"\n                      // className=\"w-auto\"\n                      style={{ overflowX: 'hidden !important' }}\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"To\"\n                      value={endDate}\n                      onChange={handleEndDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // className=\"w-50\"\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n          </div>\n          <div style={{ textAlign: '-webkit-right', paddingRight: '101px' }}>\n            <div className=\"col-sm-2 d-flex  mb-3\">\n              <button className=\"btn btn-primary mt-3 me-2\" onClick={dateSubmit}>\n                Search\n              </button>\n              <button className=\"btn btn-primary mt-3 \" onClick={() => dateReset()}>\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n        {filterDatatResponse !== '' ? (\n          <div>\n            <button\n              // style={{ float: 'right', marginRight: '4rem' }}\n              className=\"btn btn-outline-primary\"\n              onClick={exportToExcel}\n            >\n              Export to Excel\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n\n      <div className=\"mt-2 \" style={{ flexGrow: '1' }}>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <Table\n              columns={columns}\n              dataSource={filterDatatResponse}\n              pagination={false}\n              // className=\"table-responsive\"\n            />\n          </>\n        )}\n      </div>\n      <div className=\"d-flex justify-content-end mt-2\">\n        <Stack spacing={2}>\n          {console.log('pagination in react ', pageCount, page)}\n          <Pagination count={pageCount} page={page} onChange={handlePageChange} />\n        </Stack>\n      </div>\n      {Object.keys(test).length > 0 ? (\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <CChart\n              type=\"pie\"\n              data={{\n                labels: Object.keys(test),\n                datasets: [\n                  {\n                    backgroundColor: colorPalette.slice(0, Object.keys(test).length),\n                    data: Object.values(test),\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    labels: {\n                      // color: getStyle('--cui-body-color'),\n                    },\n                  },\n                },\n                aspectRatio: false,\n              }}\n              height={'300px'}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <CChart\n              type=\"doughnut\"\n              data={{\n                labels: ['male', 'female', 'others'],\n                datasets: [\n                  {\n                    label: 'Patinets by sex',\n                    backgroundColor: colorPalette.slice(0, 3),\n                    data: [filterDataBySex.male, filterDataBySex.female, filterDataBySex.other],\n                  },\n                ],\n              }}\n              options={{\n                aspectRatio: false,\n              }}\n              height={'300px'}\n            />\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default PatientReport\n","import React, { useState, useEffect } from 'react'\nimport { Calendar, globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\nimport { getFetch } from 'src/api/Api'\nimport PropTypes from 'prop-types'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import EventComponent from 'src/components/EventComponent'\nimport { useNavigate } from 'react-router-dom'\n\nconst localizer = globalizeLocalizer(globalize)\n\nconst DoctorsCalendar = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const [visibleRange, setVisibleRange] = useState({ start: new Date(), end: new Date() })\n  const [appointments, setAppointments] = useState('')\n  const [loading, setLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const handleNavigate = (date, view) => {\n    let start, end\n\n    if (view === 'month') {\n      start = new Date(date.getFullYear(), date.getMonth(), 1)\n      end = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n    } else if (view === 'week') {\n      const firstDayOfWeek = date.getDate() - date.getDay()\n      start = new Date(date.getFullYear(), date.getMonth(), firstDayOfWeek)\n      const lastDayOfWeek = firstDayOfWeek + 6\n      end = new Date(date.getFullYear(), date.getMonth(), lastDayOfWeek)\n    } else {\n      start = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n      end = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n    }\n\n    setVisibleRange({ start, end })\n  }\n\n  const handleViewChange = (view) => {\n    const currentDate = new Date()\n    handleNavigate(currentDate, view)\n  }\n\n  const dateSubmit = async (e) => {\n    try {\n      setLoading(true)\n      const res = await getFetch(\n        `${API_URL}/api/patient/nextAppointmentDate?startDate=${visibleRange.start}&endDate=${\n          visibleRange.end\n        }&resultPerPage=${1000}`,\n      )\n      if (res?.status === 200) {\n        setAppointments(res?.data?.data)\n        setLoading(false)\n      } else {\n        console.log('No patient appointment found')\n        setLoading(false)\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const currentDate = new Date()\n    const start = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\n    const end = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0)\n    setVisibleRange({ start: start, end: end })\n  }, [])\n\n  useEffect(() => {\n    dateSubmit()\n  }, [visibleRange])\n\n  useEffect(() => {\n    console.log(appointments)\n  }, [appointments])\n\n  const events =\n    appointments && Array.isArray(appointments)\n      ? appointments.map((appointment) => ({\n          title: `${appointment.name}'s Appointment`,\n          start: new Date(appointment.nextApointmentDate),\n          end: new Date(appointment.nextApointmentDate),\n          appointmentData: appointment,\n        }))\n      : []\n  const eventFormats = {\n    eventTimeRangeFormat: () => null, // Hides event times\n  }\n\n  // const handleEventClick = (data) => {\n  //   const crn = data?.appointmentData.crn\n  //   console.log('CRN', crn)\n  //   navigate(`/patientPage?crn=${crn}`, { state: data?.appointmentData })\n  // }\n  const handleEventClick = (data) => {\n    const crn = data?.appointmentData.crn\n    const url = `/patientPage?crn=${crn}`\n    window.open(url, '_blank')\n  }\n  return (\n    <div style={{ height: '85vh' }}>\n      {loading && <SpinnerOverlay message=\"Loading Calendar\" />}\n      <Calendar\n        localizer={localizer}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        // style={{ height: 500 }}\n        date={visibleRange.start}\n        onNavigate={handleNavigate}\n        onView={handleViewChange}\n        events={events}\n        formats={eventFormats}\n        defaultView=\"week\"\n        onSelectEvent={handleEventClick}\n        // tooltipAccessor={(event) => event.title}\n      />\n    </div>\n  )\n}\n\nexport default DoctorsCalendar\n","import { cilLockLocked, cilUser } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport React, { useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { putFetchData } from 'src/api/Api'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport { useNavigate } from 'react-router-dom'\n\nconst DoctorChangePassword = () => {\n  const navigate = useNavigate()\n  const API_URL = process.env.REACT_APP_API_URL\n  const [loading, setLoading] = useState(false)\n\n  const [data, setData] = useState({\n    password: '',\n    reEnterPassword: '',\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    try {\n      if (data.password.length < 4) {\n        toast.warning('Password length should be atleast 4 digits!!')\n        return\n      }\n      setLoading(true)\n\n      const res = await putFetchData(`${API_URL}/api/user/update`, data)\n      if (res?.data.success) {\n        localStorage.removeItem('token')\n        localStorage.removeItem('patientRecord')\n        toast.success(res?.data?.message, { autoClose: 1000 })\n        setTimeout(() => {\n          navigate('/login')\n          window.location.reload()\n          setLoading(false)\n        }, 1000)\n      } else {\n        setLoading(false)\n        toast.warning(res?.data?.message, { autoClose: 1000 })\n      }\n      console.log('res', res)\n    } catch (error) {\n      setLoading(false)\n      console.log(error)\n    }\n    // if (data.password === data.reEnterPassword) {\n    //   console.log('Yahh yahh yahhh')\n    // } else {\n    //   toast.warning('Password and Re-enter password in not matched', { autoClose: 1000 })\n    //   console.log('nooooooooooooo')\n    // }\n  }\n\n  console.log('Guarva', data)\n\n  return (\n    <div style={{ minHeight: '85vh', display: 'flex', flexDirection: 'column' }}>\n      <div className=\"bg-light d-flex flex-row align-items-center\" style={{ flex: 1 }}>\n        {loading ? <SpinnerOverlay message=\"Changing Password....\" /> : ''}\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={5}>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm>\n                      <h3>Change Password</h3>\n                      <p className=\"text-medium-emphasis\">Please enter the new password !</p>\n                      {/* <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          //   value={data.email}\n                          //   onChange={handleChange}\n                        />\n                      </CInputGroup> */}\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"text\"\n                          placeholder=\"New password\"\n                          //   autoComplete=\"current-password\"\n                          name=\"password\"\n                          value={data.password}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Re-enter password\"\n                          //   autoComplete=\"current-password\"\n                          name=\"reEnterPassword\"\n                          value={data.reEnterPassword}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={12} style={{ textAlign: 'center' }}>\n                          <CButton\n                            color=\"primary\"\n                            className=\"px-5\"\n                            type=\"submit\"\n                            onClick={(e) => submitHandler(e)}\n                          >\n                            Submit\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n      {/* <footer className=\"bg-dark text-light py-2 text-center\">\n    &copy; 2024 DevLogix Technology Pvt. Ltd. All rights reserved.\n  </footer> */}\n      <ToastContainer />\n      {/* <footer className=\"bg-light py-2 text-left\" style={{ paddingLeft: '1rem' }}>\n        Copyright &copy; {date} DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer> */}\n    </div>\n  )\n}\n\nexport default DoctorChangePassword\n","import React from 'react'\n// import PatientContainer from './views/pages/patient/PatientContainer'\nimport Login from './views/pages/login/Login'\nimport Report from './views/pages/report/PatientReport'\nimport PatientReport from './views/pages/report/PatientReport'\nimport DoctorsCalendar from './views/pages/patient/doctorsCalendar'\nimport DoctorChangePassword from './views/pages/patient/DoctorChangePassword'\n// import { DoctorsCalendar } from './views/pages/patient/doctorsCalendar'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\nconst PatientPage = React.lazy(() => import('./views/pages/patient/PatientPage'))\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n// patientPage\nconst auth = localStorage.getItem('token')\nlet routes\nif (auth) {\n  routes = [\n    { path: '/', exact: true, name: 'Home' },\n\n    { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n    { path: '/patientPage', name: 'Patient', element: PatientPage },\n    { path: '/report', name: 'Report', element: PatientReport },\n    { path: '/calendar', name: 'Calendar', element: DoctorsCalendar },\n    { path: '/changePassword', name: 'Change Password', element: DoctorChangePassword },\n\n    { path: '/theme', name: 'Theme', element: Colors, exact: true },\n    { path: '/theme/colors', name: 'Colors', element: Colors },\n    { path: '/theme/typography', name: 'Typography', element: Typography },\n    { path: '/base', name: 'Base', element: Cards, exact: true },\n    { path: '/base/accordion', name: 'Accordion', element: Accordion },\n    { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n    { path: '/base/cards', name: 'Cards', element: Cards },\n    { path: '/base/carousels', name: 'Carousel', element: Carousels },\n    { path: '/base/collapses', name: 'Collapse', element: Collapses },\n    { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n    { path: '/base/navs', name: 'Navs', element: Navs },\n    { path: '/base/paginations', name: 'Paginations', element: Paginations },\n    { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n    { path: '/base/popovers', name: 'Popovers', element: Popovers },\n    { path: '/base/progress', name: 'Progress', element: Progress },\n    { path: '/base/spinners', name: 'Spinners', element: Spinners },\n    { path: '/base/tables', name: 'Tables', element: Tables },\n    { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n    { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n    { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n    { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n    { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n    { path: '/charts', name: 'Charts', element: Charts },\n    { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n    { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n    { path: '/forms/select', name: 'Select', element: Select },\n    { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n    { path: '/forms/range', name: 'Range', element: Range },\n    { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n    { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n    { path: '/forms/layout', name: 'Layout', element: Layout },\n    { path: '/forms/validation', name: 'Validation', element: Validation },\n    { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n    { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n    { path: '/icons/flags', name: 'Flags', element: Flags },\n    { path: '/icons/brands', name: 'Brands', element: Brands },\n    { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n    { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n    { path: '/notifications/badges', name: 'Badges', element: Badges },\n    { path: '/notifications/modals', name: 'Modals', element: Modals },\n    { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n    { path: '/widgets', name: 'Widgets', element: Widgets },\n  ]\n} else {\n  routes = [\n    {\n      path: '/login',\n      element: Login,\n    },\n  ]\n}\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar12 from './../../assets/images/avatars/12.jpg'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const logoutHandler = () => {\n    // console.log('logot')\n    localStorage.removeItem('token')\n    localStorage.removeItem('patientRecord')\n  }\n  const changePasswordHandler = (e) => {\n    e.preventDefault()\n    navigate('/changePassword')\n    console.log('Working change password')\n  }\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar12} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        <CDropdownItem onClick={(e) => changePasswordHandler(e)} href=\"/\">\n          <CIcon className=\"me-2\" />\n          Change Password\n        </CDropdownItem>\n        <CDropdownItem onClick={() => logoutHandler()} href=\"/\">\n          <CIcon className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-3\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand> */}\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <h4>Patient Care</h4>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      {/* <CHeaderDivider /> */}\n      {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n  },\n  {\n    component: CNavItem,\n    name: 'Patients',\n    to: '/patientPage',\n  },\n  {\n    component: CNavItem,\n    name: 'Report',\n    to: '/report',\n  },\n  {\n    component: CNavItem,\n    name: 'My Schedule',\n    to: '/calendar',\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Login',\n  //   to: '/login',\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Theme',\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Docs',\n  //   href: 'https://coreui.io/react/docs/templates/installation/',\n  //   icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  // },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  let navigate = useNavigate()\n\n  const navigateToHome = () => {\n    navigate('/')\n  }\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n        <div onClick={() => navigateToHome()} style={{ cursor: 'pointer' }}>\n          <h4 style={{ margin: '0', textAlign: 'center' }}>Patient Care</h4>\n          <p style={{ margin: '0', fontSize: '11px' }}>DevLogix Technology Pvt. Ltd.</p>\n        </div>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      {/* <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      /> */}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        {/* <AppFooter /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { postFetchData } from 'src/api/Api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst Login = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const REGISTER_URL = `${API_URL}/register`\n  const navigate = useNavigate()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const date = new Date().getFullYear()\n\n  const handleSubmit = async (e) => {\n    try {\n      setLoading(true)\n      e.preventDefault()\n      const dataa = await postFetchData(`${API_URL}/api/user/login`, data)\n      if (dataa.success === true) {\n        toast.success('Login successfully')\n        localStorage.setItem('token', dataa.token)\n        localStorage.setItem('patientRecord', JSON.stringify(dataa?.user))\n        window.location.reload()\n        setLoading(false)\n      }\n\n      if (dataa?.response?.data?.success === false) {\n        setLoading(false)\n        toast.warning('Invalid Credentials')\n      }\n    } catch (error) {\n      setLoading(false)\n      toast.warning('Something went wrong')\n      console.log(error)\n    }\n  }\n\n  const nevigateToRegister = () => {\n    navigate('/register')\n  }\n\n  return (\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <div className=\"bg-light d-flex flex-row align-items-center\" style={{ flex: 1 }}>\n        {loading ? <SpinnerOverlay message=\"Logging..\" /> : ''}\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={5}>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm onSubmit={handleSubmit}>\n                      <h2>Login</h2>\n                      <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          value={data.email}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\"\n                          name=\"password\"\n                          value={data.password}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={12} style={{ textAlign: 'center' }}>\n                          <CButton color=\"primary\" className=\"px-5\" type=\"submit\">\n                            Login\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n      {/* <footer className=\"bg-dark text-light py-2 text-center\">\n        &copy; 2024 DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer> */}\n      <ToastContainer />\n      <footer className=\"bg-light py-2 text-left\" style={{ paddingLeft: '1rem' }}>\n        Copyright &copy; {date} DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Login\n","// SpinnerOverlay.js\nimport React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst SpinnerOverlay = (loading) => {\n  const message = loading.message\n  return (\n    <div style={overlayStyle(loading)}>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <BarLoader loading={loading} color=\"#36D7B7\" />\n        {message ? <p style={{ margin: 'auto' }}>{message}</p> : ''}\n      </div>\n    </div>\n  )\n}\n\nconst overlayStyle = (loading) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  display: loading ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 9999,\n})\n\nexport default SpinnerOverlay\n"],"names":["_ref","setHide","popupData","problemSet","console","log","diagnosis","reversedDiagnosis","setReversedDiagnosis","useState","selectedFile","setSelectedFile","Array","length","fill","loading","setLoading","useEffect","isArray","reverse","editNameFun","name","fileName","parts","split","slice","join","hoveredFile","setHoveredFile","_jsx","_Fragment","children","className","tabIndex","style","display","backgroundColor","maxHeight","color","_jsxs","fontSize","fontWeight","crn","type","onClick","overflowY","overflowX","marginTop","padding","map","elem","index","_elem$diagnosData","_elem$procedure","_elem$procedure2","formattedDate","Date","date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","showProcedure","showNotes","margin","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","innerIndex","problem","subProblem","scale","test","includes","borderBottom","SpinnerOverlay","message","testData","testIndex","_testData$files","paddingRight","testInput","files","file","fileIndex","value","alignItems","marginRight","onMouseEnter","editedName","onMouseLeave","async","filename","response","axios","get","concat","process","responseType","blob","Blob","data","headers","blobUrl","URL","createObjectURL","window","open","error","showReportHandler","title","CIcon","icon","cilDataTransferDown","scaleData","scaleIndex","wordWrap","procedure","colSpan","procedureData","procedureIndex","complications","doneBy","desc","PatientReport","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","navigate","useNavigate","hide","setPopuoData","updateState","setUpdateState","setProblemSet","pageCount","setPageCount","page","setPage","problems","setProblems","tests","setTests","scales","setScales","patientProblems","setPatientProblems","selectDropdownValue","setSelectDropdownValue","colorPalette","columns","dataIndex","sorter","a","b","age","sex","localeCompare","render","text","handleOpenMOdal","e","state","todayDate","dayjs","startingDate","setStartingDate","subtract","endDate","setEndDate","filterDatatResponse","setFilterDataResponse","dateSubmit","toast","warning","isBefore","date1","res","postFetchData","_id","success","_res$data","_res$data2","_res$data3","filterDataArray","Promise","all","filteredDiagnosis","filterDataAccordingToProblemSet","filter","obj","problemCounts","forEach","patient","_patient$diagnosis","patientProblemSet","Set","_element$diagnosData","has","add","maleCount","femaleCount","otherCount","setFilterDataBySex","male","female","other","filterDataBySex","setTest","dateReset","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","item","testFilter","scaleFilter","options","label","el","fetchProblems","fetchData","flexDirection","height","ReportModal","Select","isMulti","onChange","selectedOptions","placeholder","maxMenuHeight","styles","singleValue","provided","lineHeight","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","inputFormat","ampm","ampmInClock","views","textAlign","exportToExcel","workbook","XLSX","book_new","worksheet","aoa_to_sheet","phone","nextApointmentDate","bbb","nextAppointmentDateFormateed","getDate","getMonth","getFullYear","diagnosisItem","diagnosDataItem","shownProcedure","scaleName","scaleValue","procedureItem","procedureName","aaa","dataRow","sheet_add_aoa","origin","book_append_sheet","excelBuffer","bookType","saveAs","flexGrow","Loader","Table","dataSource","pagination","Stack","spacing","Pagination","count","handlePageChange","event","Object","keys","CChart","labels","datasets","values","plugins","legend","aspectRatio","ToastContainer","localizer","globalizeLocalizer","globalize","DoctorsCalendar","visibleRange","setVisibleRange","start","end","appointments","setAppointments","handleNavigate","view","firstDayOfWeek","getDay","lastDayOfWeek","currentDate","status","events","appointment","appointmentData","Calendar","startAccessor","endAccessor","onNavigate","onView","formats","eventTimeRangeFormat","defaultView","onSelectEvent","url","DoctorChangePassword","setData","password","reEnterPassword","handleChange","target","minHeight","flex","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","cilLockLocked","CFormInput","xs","CButton","preventDefault","putFetchData","removeItem","autoClose","setTimeout","location","reload","submitHandler","Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Toasts","PatientPage","Widgets","routes","path","exact","Login","AppContent","lg","Suspense","fallback","CSpinner","Routes","route","idx","Route","Navigate","to","AppHeaderDropdown","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar12","size","CDropdownMenu","CDropdownHeader","CDropdownItem","changePasswordHandler","href","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","AppSidebarNav","items","useLocation","navLink","badge","CBadge","navItem","rest","Component","_createElement","key","navGroup","_item$items","String","toggler","visible","pathname","startsWith","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","cursor","CSidebarNav","SimpleBar","navigation","DocsCallout","props","content","plural","_href","CCallout","CLink","DocsLink","rel","DocsExample","CNav","active","cilMediaPlay","cilCode","CTabContent","CTabPane","DefaultLayout","Box","CircularProgress","email","onSubmit","_dataa$response","_dataa$response$data","dataa","setItem","token","stringify","user","cilUser","autoComplete","paddingLeft","overlayStyle","top","left","justifyContent","zIndex","BarLoader"],"sourceRoot":""}