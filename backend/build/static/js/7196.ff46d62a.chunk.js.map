{"version":3,"file":"static/js/7196.ff46d62a.chunk.js","mappings":"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","sources":["api/Api.js","views/pages/report/ReportModal.js","views/pages/report/PatientReport.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js","views/pages/loader/Loader.jsx","views/pages/login/Login.js","views/publicItems/ SpinnerOverlay.js"],"sourcesContent":["import axios from 'axios'\nexport const getFetch = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'get',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    // if (response.status === 200) {\n    return response\n    // }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getFetchByLimit = async (url, limit, page) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${limit}/${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getOneFetch = async (url, id) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    if (error?.response?.status === 401) {\n      return 401\n    }\n    return error\n  }\n}\n\nexport const postFetch = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\nexport const postFetchUser = async (url, data) => {\n  try {\n    // const token = localStorage.getItem(\"token\")\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n      data,\n      //   withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nexport const postFetchContent = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const postFetchFile = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const patchFetch = async (url, id, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'patch',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error?.response\n    }\n  }\n}\nexport const putFetch = async (url, data) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchById = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchData = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const deleteFetch = async (url, id) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'delete',\n      url: `${url}/${id}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    }\n  }\n}\n\nexport const postFetchData = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response?.data\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error\n    }\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowCircleRight, cilDataTransferDown } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst ReportModal = ({ setHide, popupData }) => {\n  console.log('fromMOdal', popupData)\n  let diagnosis = popupData?.diagnosis\n  let url = process.env.REACT_APP_API_URL\n\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [selectedFile, setSelectedFile] = useState(Array(diagnosis?.length).fill(''))\n  const [loading, setLoading] = useState(false)\n\n  const isFile = (value) => {\n    const regex = /^\\d{13}_/\n\n    if (regex.test(value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const showReportHandler = async (filename, index) => {\n    try {\n      setLoading(true)\n      // Fetch the image data from the server\n      const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n        responseType: 'blob', // Treat response data as blob\n      })\n\n      // Create a Blob object from the response data\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n      // Generate a URL for the Blob\n      const blobUrl = URL.createObjectURL(blob)\n\n      // Open the URL in a new tab\n      window.open(blobUrl)\n    } catch (error) {\n      console.error('Error fetching image:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n\n  const handleFileSelect = (e, index) => {\n    const { value } = e.target\n    const updatedSelectedFile = [...selectedFile]\n    updatedSelectedFile[index] = value\n    setSelectedFile(updatedSelectedFile)\n  }\n  const editNameFun = (name) => {\n    if (name) {\n      const fileName = name\n      const parts = fileName.split('_')\n      // Check if the file name contains underscores\n      if (parts.length > 1) {\n        // Exclude the first part of the file name and join the rest with underscores\n        const editedFileName = parts.slice(1).join('_')\n        const actualFileName = editedFileName.split('.')[0]\n        return actualFileName\n      } else {\n        // If there are no underscores or only one part, return the original file name\n        return fileName\n      }\n    } else {\n      // If the file name is undefined, return an empty string\n      return ''\n    }\n  }\n\n  const [hoveredFile, setHoveredFile] = useState(null)\n\n  const handleMouseEnter = (fileName) => {\n    const fileNamee = editNameFun(fileName)\n    setHoveredFile(fileNamee)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredFile(null)\n  }\n\n  return (\n    <>\n      <div\n        className=\"modal\"\n        tabIndex={-1}\n        style={{\n          display: 'block',\n          backgroundColor: 'rgba(0,0,0,0.8)',\n          maxHeight: '100%',\n          color: 'black',\n        }}\n      >\n        <div\n          className=\"modal-dialog\"\n          style={{ height: '30rem', width: '60rem', minWidth: '70rem' }}\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <div>\n                <h5 className=\"modal-title\">Diagnosis Details</h5>\n                <p style={{ fontSize: '14px' }}>\n                  <span style={{ fontWeight: 'bolder' }}>CR no.</span> {popupData?.crn}{' '}\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span style={{ fontWeight: 'bolder' }}>Name : </span>\n                  {popupData?.name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => setHide(false)}\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              <div\n                style={{\n                  maxHeight: '300px',\n                  overflowY: 'scroll',\n                  overflowX: 'hidden',\n                  marginTop: '20px',\n                }}\n              >\n                {reversedDiagnosis?.map((elem, index) => {\n                  const date = elem?.date\n\n                  const datee = new Date(date)\n\n                  const options = {\n                    year: 'numeric',\n                    month: '2-digit',\n                    day: '2-digit',\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    // second: '2-digit',\n                    hour12: true, // Set to true if you want 12-hour format with AM/PM\n                  }\n                  const formattedDate = datee\n                    .toLocaleDateString('en-IN', options)\n                    .replace(/\\//g, '/')\n                  return (\n                    <>\n                      <div key={index}>\n                        <div\n                          className=\"row\"\n                          // style={{ overflow: 'scroll !important', background: 'white' }}\n                        >\n                          <div\n                            style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}\n                          >\n                            <h5>Diagnose Date : {formattedDate}</h5>\n\n                            <table\n                              className=\"table\"\n                              style={{\n                                width: '90%',\n                                border: '1px solid',\n                                fontFamily: 'ui-rounded',\n                                borderRadius: '10px',\n                              }}\n                            >\n                              <colgroup>\n                                <col style={{ width: '20%' }} />\n                                <col style={{ width: '20%' }} />\n                                <col style={{ width: '20%' }} />\n                                <col style={{ width: '20%' }} />\n                                <col style={{ width: '20%' }} />\n                              </colgroup>\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\" style={{ background: '#FBF295' }}>\n                                    Problems\n                                  </th>\n                                  <th scope=\"col\" style={{ background: '#FBF295' }}>\n                                    Test\n                                  </th>\n                                  <th scope=\"col\" style={{ background: '#FBF295' }}>\n                                    Test value\n                                  </th>\n                                  <th scope=\"col\" style={{ background: '#FBF295' }}>\n                                    Scale\n                                  </th>\n                                  <th scope=\"col\" style={{ background: '#FBF295' }}>\n                                    Scale value\n                                  </th>\n                                </tr>\n                              </thead>\n                              {elem?.diagnosData?.map((element, innerIndex) => {\n                                const { problem, scale, test, testInput, value } = element\n\n                                return (\n                                  <tbody key={innerIndex}>\n                                    {loading && <SpinnerOverlay message=\"Opening File\" />}\n                                    <tr>\n                                      <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                                      <td style={{ fontWeight: 'bolder' }}>\n                                        {test === '' ? '-' : test}\n                                      </td>\n                                      <td style={{ fontWeight: 'bolder' }}>\n                                        {test === '' ? (\n                                          '-'\n                                        ) : testInput?.text ? (\n                                          testInput.text\n                                        ) : (\n                                          <div style={{ display: 'flex' }}>\n                                            {testInput?.files?.map((file, fileIndex) => (\n                                              <div\n                                                key={fileIndex}\n                                                value={file.fileName}\n                                                style={{\n                                                  display: 'flex',\n                                                  alignItems: 'center',\n                                                  marginRight: '10px',\n                                                }}\n                                                onMouseEnter={() => handleMouseEnter(file.fileName)}\n                                                onMouseLeave={() => handleMouseLeave()}\n                                                onClick={() =>\n                                                  showReportHandler(file?.fileName, fileIndex)\n                                                }\n                                              >\n                                                <button\n                                                  type=\"button\"\n                                                  className=\"btn btn-sm btn-primary\" // Decreased size and changed color to blue\n                                                  data-toggle=\"popover\"\n                                                  title={hoveredFile}\n                                                  style={{ margin: '0' }}\n                                                >\n                                                  <CIcon icon={cilDataTransferDown} />\n                                                </button>\n                                              </div>\n                                            ))}\n                                          </div>\n                                        )}\n                                      </td>\n                                      {console.log('Guarav', testInput)}\n                                      <td style={{ fontWeight: 'bolder' }}>\n                                        {scale === '' ? '-' : scale}\n                                      </td>\n                                      <td style={{ fontWeight: 'bolder' }}>\n                                        {value === '' ? '-' : value}\n                                      </td>\n                                    </tr>\n                                  </tbody>\n                                )\n                              })}\n                            </table>\n                            <div className=\"row\">\n                              <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                                <div className=\"row\" style={{ marginTop: '1rem' }}>\n                                  <div className=\"col-md-2 d-flex align-items-center\">\n                                    <h5>Notes:</h5>\n                                  </div>\n                                  <div className=\"col-md-10 d-flex align-items-center\">\n                                    <div\n                                      className=\"card\"\n                                      style={{ width: '87%', padding: '1rem 2rem' }}\n                                    >\n                                      <p style={{ margin: '0' }}>\n                                        {elem.desc === '' ? '-' : elem.desc}\n                                      </p>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <hr />\n                        </div>\n                      </div>\n                    </>\n                  )\n                })}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n                onClick={() => setHide(false)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nReportModal.propTypes = {\n  setHide: PropTypes.func.isRequired,\n  popupData: PropTypes.func.isRequired,\n}\n\nexport default ReportModal\n","import React, { useEffect, useState } from 'react'\nimport { getFetch } from 'src/api/Api'\nimport { Divider, Radio, Table } from 'antd'\nimport { useNavigate } from 'react-router-dom'\nimport { Pagination, Stack } from '@mui/material'\n// import { LocalizationProvider } from '@mui/x-date-pickers'\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo'\n// import DateTimePicker from 'react-datetime-picker'\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\n\n// import WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport dayjs from 'dayjs'\nimport { DateTimePicker } from '@mui/x-date-pickers'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport Loader from '../loader/Loader'\nimport ReportModal from './ReportModal'\n\nconst PatientReport = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [loading, setLoading] = useState(false)\n\n  const navigate = useNavigate()\n  const [hide, setHide] = useState(false)\n  const [popupData, setPopuoData] = useState({})\n  const [updateState, setUpdateState] = useState(false)\n  const [problemSet, setProblemSet] = useState('')\n  const [pageCount, setPageCount] = useState(1)\n  const [page, setPage] = useState(1)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [patientProblems, setPatientProblems] = useState([])\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map((test) => test.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n  console.log('problem', problems)\n\n  const handlSetPoblem = (elem) => {\n    setProblemSet(elem)\n  }\n\n  // const getPatientByProblem = async () => {\n  //   try {\n  //     console.log('ashish', problemSet)\n  //     if (problemSet?.length === 0) {\n  //       return\n  //     }\n  //     const res = await getFetch(\n  //       `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&page=${page}`,\n  //     )\n  //     console.log('response', res)\n  //     setPageCount(res?.data?.pageCount)\n  //     setPatientProblems(res.data.data)\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  const columns = [\n    {\n      title: 'CR no',\n      dataIndex: 'crn',\n    },\n    // {\n    //   title: 'Phone no',\n    //   dataIndex: 'phone',\n    //   render: (text) => <a>{text}</a>,\n    // },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (text) => <a>{text}</a>,\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Sex',\n      dataIndex: 'sex',\n      sorter: (a, b) => a.sex.localeCompare(b.sex),\n    },\n    // {\n    //   title: 'Appointment',\n    //   dataIndex: 'nextApointmentDate',\n    //   render: (text) => {\n    //     const date = new Date(text)\n    //     const formattedDate = date\n    //       .toLocaleString('en-IN', {\n    //         year: 'numeric',\n    //         month: '2-digit',\n    //         day: '2-digit',\n    //         hour: '2-digit',\n    //         minute: '2-digit',\n    //         hour12: true,\n    //       })\n    //       .replace(/\\//g, '/')\n    //     return formattedDate\n    //   },\n    //   sorter: (a, b) => a.nextApointmentDate.localeCompare(b.nextApointmentDate),\n    // },\n    {\n      title: 'Action',\n      // dataIndex: 'sex',\n      render: (text) => {\n        console.log('text', text)\n        return (\n          <button\n            className=\"btn btn-primary\"\n            // onClick={(e) => navigate('/patientPage', { state: text })}\n            onClick={() => handleOpenMOdal(text)}\n          >\n            View Diagnosis\n          </button>\n        )\n      },\n    },\n    {\n      title: 'Action',\n      // dataIndex: 'sex',\n      render: (text) => {\n        console.log('text', text)\n        return (\n          <button\n            className=\"btn btn-primary\"\n            onClick={(e) => navigate('/patientPage', { state: text })}\n          >\n            Show Details\n          </button>\n        )\n      },\n    },\n  ]\n  const todayDate = dayjs()\n  const [startingDate, setStartingDate] = useState(todayDate)\n  const [endDate, setEndDate] = useState(todayDate)\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n\n  const handleStartingDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('Stating date not be in the future')\n      return setStartingDate(todayDate)\n    }\n    setStartingDate(date)\n  }\n  const handleEndDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('End date not be in the future')\n      return setEndDate(todayDate)\n    }\n    setEndDate(date)\n  }\n\n  const dateSubmit = async () => {\n    if (problemSet === '') {\n      return toast.warning('Please select any one Chief Complaint')\n    }\n    if (endDate.isBefore(startingDate, 'day')) {\n      toast.warning('End date cannot be earlier than start date')\n      return\n    }\n    setLoading(true)\n    const date = new Date(startingDate)\n    const date1 = new Date(endDate)\n    // const formattedStartDate = date.toISOString().split('T')[0] + 'T00:00:00.000Z'\n    // const formattedEndDate = date1.toISOString().split('T')[0] + 'T00:00:00.000Z'\n    console.log(date, date1)\n\n    const res = await getFetch(\n      `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&startDate=${date}&endDate=${date1}&page=${page}`,\n    )\n    console.log('ashdata', res)\n    setPageCount(res?.data?.pageCount)\n    setPatientProblems(res?.data?.data)\n\n    setLoading(false)\n  }\n\n  const dateReset = () => {\n    setStartingDate(todayDate)\n    setEndDate(todayDate)\n    setUpdateState(!updateState)\n    setProblemSet('Select Problem')\n  }\n\n  // useEffect(() => {\n  //   getPatientByProblem()\n  // }, [page, problemSet])\n  const handleOpenMOdal = (text) => {\n    setHide(true)\n    console.log('datafromdiagbutton', text)\n    setPopuoData(text)\n  }\n  useEffect(() => {\n    if (problemSet.length) {\n      dateSubmit()\n    }\n  }, [page, updateState])\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n  return (\n    <>\n      {hide ? <ReportModal setHide={setHide} popupData={popupData} /> : ''}\n      <div className=\"row\">\n        <div className=\"col-sm-3 mt-2\">\n          <select\n            onChange={(e) => handlSetPoblem(e.target.value)}\n            className=\"form-control\"\n            style={{ appearance: 'auto', height: '50px', width: '100%' }}\n            value={problemSet}\n          >\n            <option>Chief Complaint</option>\n            {problems.map((elem) => {\n              return (\n                <>\n                  <option key={elem} value={elem}>\n                    {elem}\n                  </option>\n                </>\n              )\n            })}\n          </select>\n        </div>\n\n        {/* date filed start */}\n        <div className=\"col-sm-9\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"From\"\n                      value={startingDate}\n                      onChange={handleStartingDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // sx={{ width: '100px' }}\n                      // className=\"w-50\"\n                      // className=\"w-auto\"\n                      style={{ overflowX: 'hidden !important' }}\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"To\"\n                      value={endDate}\n                      onChange={handleEndDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // className=\"w-50\"\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n          </div>\n          <div style={{ textAlign: '-webkit-right', paddingRight: '101px' }}>\n            <div className=\"col-sm-2 d-flex  mb-3\">\n              <button className=\"btn btn-primary mt-3 me-2\" onClick={dateSubmit}>\n                Search\n              </button>\n              <button className=\"btn btn-primary mt-3 \" onClick={dateReset}>\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* date filed end */}\n      </div>\n      <div className=\"mt-2 table-responsive\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <Table\n            // rowSelection={{\n            //   type: selectionType,\n            //   ...rowSelection,\n            // }}\n            columns={columns}\n            dataSource={patientProblems}\n            pagination={false}\n            className=\"table-responsive\"\n          />\n        )}\n      </div>\n      <div className=\"d-flex justify-content-end mt-2\">\n        <Stack spacing={2}>\n          <Pagination count={pageCount} page={page} onChange={handlePageChange} />\n        </Stack>\n      </div>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientReport\n","import React from 'react'\n// import PatientContainer from './views/pages/patient/PatientContainer'\nimport Login from './views/pages/login/Login'\nimport Report from './views/pages/report/PatientReport'\nimport PatientReport from './views/pages/report/PatientReport'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\nconst PatientPage = React.lazy(() => import('./views/pages/patient/PatientPage'))\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n// patientPage\nconst auth = localStorage.getItem('token')\nlet routes\nif (auth) {\n  routes = [\n    { path: '/', exact: true, name: 'Home' },\n\n    { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n    { path: '/patientPage', name: 'Patient', element: PatientPage },\n    { path: '/report', name: 'Report', element: PatientReport },\n    { path: '/theme', name: 'Theme', element: Colors, exact: true },\n    { path: '/theme/colors', name: 'Colors', element: Colors },\n    { path: '/theme/typography', name: 'Typography', element: Typography },\n    { path: '/base', name: 'Base', element: Cards, exact: true },\n    { path: '/base/accordion', name: 'Accordion', element: Accordion },\n    { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n    { path: '/base/cards', name: 'Cards', element: Cards },\n    { path: '/base/carousels', name: 'Carousel', element: Carousels },\n    { path: '/base/collapses', name: 'Collapse', element: Collapses },\n    { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n    { path: '/base/navs', name: 'Navs', element: Navs },\n    { path: '/base/paginations', name: 'Paginations', element: Paginations },\n    { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n    { path: '/base/popovers', name: 'Popovers', element: Popovers },\n    { path: '/base/progress', name: 'Progress', element: Progress },\n    { path: '/base/spinners', name: 'Spinners', element: Spinners },\n    { path: '/base/tables', name: 'Tables', element: Tables },\n    { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n    { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n    { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n    { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n    { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n    { path: '/charts', name: 'Charts', element: Charts },\n    { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n    { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n    { path: '/forms/select', name: 'Select', element: Select },\n    { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n    { path: '/forms/range', name: 'Range', element: Range },\n    { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n    { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n    { path: '/forms/layout', name: 'Layout', element: Layout },\n    { path: '/forms/validation', name: 'Validation', element: Validation },\n    { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n    { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n    { path: '/icons/flags', name: 'Flags', element: Flags },\n    { path: '/icons/brands', name: 'Brands', element: Brands },\n    { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n    { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n    { path: '/notifications/badges', name: 'Badges', element: Badges },\n    { path: '/notifications/modals', name: 'Modals', element: Modals },\n    { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n    { path: '/widgets', name: 'Widgets', element: Widgets },\n  ]\n} else {\n  routes = [\n    {\n      path: '/login',\n      element: Login,\n    },\n  ]\n}\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar12 from './../../assets/images/avatars/12.jpg'\n\nconst AppHeaderDropdown = () => {\n  const logoutHandler = () => {\n    // console.log('logot')\n    localStorage.removeItem('token')\n    localStorage.removeItem('patientRecord')\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar12} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        <CDropdownItem onClick={() => logoutHandler()} href=\"/\">\n          <CIcon className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand> */}\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <h4>Patient Care</h4>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      {/* <CHeaderDivider /> */}\n      {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n  },\n  {\n    component: CNavItem,\n    name: 'Patients',\n    to: '/patientPage',\n  },\n  {\n    component: CNavItem,\n    name: 'Report',\n    to: '/report',\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Login',\n  //   to: '/login',\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Theme',\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Docs',\n  //   href: 'https://coreui.io/react/docs/templates/installation/',\n  //   icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  // },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n        <div>\n          <h4 style={{ margin: '0', textAlign: 'center' }}>Patient Care</h4>\n          <p style={{ margin: '0', fontSize: '11px' }}>DevLogix Technology Pvt. Ltd.</p>\n        </div>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      {/* <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      /> */}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        {/* <AppFooter /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { postFetchData } from 'src/api/Api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst Login = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const REGISTER_URL = `${API_URL}/register`\n  const navigate = useNavigate()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const date = new Date().getFullYear()\n\n  const handleSubmit = async (e) => {\n    try {\n      setLoading(true)\n      e.preventDefault()\n      const dataa = await postFetchData(`${API_URL}/api/user/login`, data)\n      if (dataa.success === true) {\n        toast.success('Login successfully')\n        localStorage.setItem('token', dataa.token)\n        localStorage.setItem('patientRecord', JSON.stringify(dataa?.user))\n        setTimeout(() => {\n          window.location.reload()\n          setLoading(false)\n        }, 1000)\n      }\n\n      if (dataa?.response?.data?.success === false) {\n        setLoading(false)\n        toast.warning('Invalid Credentials')\n      }\n    } catch (error) {\n      setLoading(false)\n      toast.warning('Something went wrong')\n      console.log(error)\n    }\n  }\n\n  const nevigateToRegister = () => {\n    navigate('/register')\n  }\n\n  return (\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <div className=\"bg-light d-flex flex-row align-items-center\" style={{ flex: 1 }}>\n        {loading ? <SpinnerOverlay message=\"Logging..\" /> : ''}\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={5}>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <CForm onSubmit={handleSubmit}>\n                      <h2>Login</h2>\n                      <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput\n                          placeholder=\"Email\"\n                          autoComplete=\"email\"\n                          name=\"email\"\n                          value={data.email}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\"\n                          name=\"password\"\n                          value={data.password}\n                          onChange={handleChange}\n                        />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={12} style={{ textAlign: 'center' }}>\n                          <CButton color=\"primary\" className=\"px-5\" type=\"submit\">\n                            Login\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n      {/* <footer className=\"bg-dark text-light py-2 text-center\">\n        &copy; 2024 DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer> */}\n      <ToastContainer />\n      <footer className=\"bg-light py-2 text-left\" style={{ paddingLeft: '1rem' }}>\n        Copyright &copy; {date} DevLogix Technology Pvt. Ltd. All rights reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Login\n","// SpinnerOverlay.js\nimport React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst SpinnerOverlay = (loading) => {\n  const message = loading.message\n  return (\n    <div style={overlayStyle(loading)}>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <BarLoader loading={loading} color=\"#36D7B7\" />\n        {message ? <p style={{ margin: 'auto' }}>{message}</p> : ''}\n      </div>\n    </div>\n  )\n}\n\nconst overlayStyle = (loading) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  display: loading ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 9999,\n})\n\nexport default SpinnerOverlay\n"],"names":["getFetch","async","token","localStorage","getItem","axios","method","url","concat","headers","Authorization","error","console","log","postFetchFile","data","post","putFetchData","response","_error$response3","status","postFetchData","_error$response5","_ref","setHide","popupData","diagnosis","reversedDiagnosis","setReversedDiagnosis","useState","selectedFile","setSelectedFile","Array","length","fill","loading","setLoading","useEffect","isArray","reverse","hoveredFile","setHoveredFile","_jsx","_Fragment","children","className","tabIndex","style","display","backgroundColor","maxHeight","color","height","width","minWidth","_jsxs","fontSize","fontWeight","crn","name","type","onClick","overflowY","overflowX","marginTop","map","elem","index","_elem$diagnosData","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","margin","overflow","border","fontFamily","borderRadius","scope","background","diagnosData","element","innerIndex","_testInput$files","problem","scale","test","testInput","value","SpinnerOverlay","message","text","files","file","fileIndex","fileName","alignItems","marginRight","onMouseEnter","fileNamee","parts","split","slice","join","editNameFun","handleMouseEnter","onMouseLeave","filename","get","process","responseType","blob","Blob","blobUrl","URL","createObjectURL","window","open","showReportHandler","title","CIcon","icon","cilDataTransferDown","padding","desc","PatientReport","API_URL","patientData","patientRecord","JSON","parse","navigate","useNavigate","hide","setPopuoData","updateState","setUpdateState","problemSet","setProblemSet","pageCount","setPageCount","page","setPage","problems","setProblems","tests","setTests","scales","setScales","patientProblems","setPatientProblems","columns","dataIndex","render","sorter","a","b","localeCompare","age","sex","handleOpenMOdal","e","state","todayDate","dayjs","startingDate","setStartingDate","endDate","setEndDate","dateSubmit","_res$data","_res$data2","toast","warning","isBefore","date1","res","_id","_patientRecord$depart","_problemsResponse$dat","problemsResponse","department_id","problemsData","problemFilter","problemName","filter","item","testFilter","scaleFilter","fetchProblems","ReportModal","onChange","handlSetPoblem","target","appearance","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","inputFormat","ampm","ampmInClock","views","textAlign","paddingRight","dateReset","Loader","Table","dataSource","pagination","Stack","spacing","Pagination","count","handlePageChange","event","ToastContainer","Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Toasts","PatientPage","Widgets","routes","path","exact","Login","AppContent","CContainer","lg","Suspense","fallback","CSpinner","Routes","route","idx","Route","Navigate","to","AppHeaderDropdown","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar12","size","CDropdownMenu","CDropdownHeader","CDropdownItem","removeItem","href","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","AppSidebarNav","items","location","useLocation","navLink","badge","CBadge","navItem","rest","Component","_createElement","key","navGroup","_item$items","String","toggler","visible","pathname","startsWith","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","CSidebarNav","SimpleBar","navigation","DocsCallout","props","content","plural","_href","CCallout","CLink","DocsLink","rel","DocsExample","CNav","active","cilMediaPlay","cilCode","CTabContent","CTabPane","DefaultLayout","Box","lineHeight","CircularProgress","setData","email","password","handleChange","getFullYear","minHeight","flexDirection","flex","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","_dataa$response","_dataa$response$data","preventDefault","dataa","success","setItem","stringify","user","setTimeout","reload","CInputGroup","CInputGroupText","cilUser","CFormInput","placeholder","autoComplete","cilLockLocked","xs","CButton","paddingLeft","overlayStyle","top","left","justifyContent","zIndex","BarLoader"],"sourceRoot":""}