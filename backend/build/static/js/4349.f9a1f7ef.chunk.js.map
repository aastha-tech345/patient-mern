{"version":3,"file":"static/js/4349.f9a1f7ef.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { cilDataTransferDown } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientShowDetails = ({ diagnosis }) => {\n  console.log('Guarva', diagnosis)\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [requestedFileLoading, setRequestedFileLoading] = useState({})\n  // const [selectedFile, setSelectedFile] = useState(Array(diagnosis?.length).fill(''))\n\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      const reversed = [...diagnosis].reverse()\n      setReversedDiagnosis(reversed)\n    }\n  }, [diagnosis])\n\n  const showReportHandler = async (filename, index) => {\n    try {\n      setLoading(true)\n\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/user/getPatientReport/${filename}`,\n        {\n          responseType: 'blob',\n        },\n      )\n\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n      const blobUrl = URL.createObjectURL(blob)\n      window.open(blobUrl)\n    } catch (error) {\n      setLoading(false)\n      console.error('Error fetching report:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // const handleFileSelect = (e, index) => {\n  //   const { value } = e.target\n  //   const updatedSelectedFile = [...selectedFile]\n  //   updatedSelectedFile[index] = value\n  //   setSelectedFile(updatedSelectedFile)\n  // }\n  const editNameFun = (name) => {\n    if (name) {\n      const fileName = name\n      const parts = fileName.split('_')\n      // Check if the file name contains underscores\n      if (parts.length > 1) {\n        // Exclude the first part of the file name and join the rest with underscores\n        const editedFileName = parts.slice(1).join('_')\n        const actualFileName = editedFileName.split('.')[0]\n        return actualFileName\n      } else {\n        // If there are no underscores or only one part, return the original file name\n        return fileName\n      }\n    } else {\n      // If the file name is undefined, return an empty string\n      return ''\n    }\n  }\n  // console.log('guarva', reversedDiagnosis)\n\n  const [hoveredFile, setHoveredFile] = useState(null)\n\n  return (\n    <div style={{ maxHeight: '300px', marginTop: '20px' }}>\n      {reversedDiagnosis?.map((elem, index) => {\n        const date = new Date(elem.date)\n        const formattedDate = date\n          .toLocaleDateString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={index} style={{ margin: '1rem' }}>\n            <div className=\"row\" style={{ overflowX: 'auto' }}>\n              <div style={{ overflow: 'auto !important' }}>\n                <h5>Diagnose Date: {formattedDate}</h5>\n\n                <table\n                  className=\"table\"\n                  style={{\n                    width: '100%',\n                    border: '1px solid',\n                    fontFamily: 'ui-rounded',\n                    borderRadius: '10px',\n                  }}\n                >\n                  <colgroup>\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                  </colgroup>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Problems\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Test\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Test value\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Scale\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Scale value\n                      </th>\n                    </tr>\n                  </thead>\n                  {elem?.diagnosData?.map((element, innerIndex) => {\n                    const { problem, scale, test, testInput, files, value } = element\n                    // console.log('Guarav', element)\n                    return (\n                      <tbody key={innerIndex}>\n                        {loading && <SpinnerOverlay message=\"Opening File\" />}\n                        <tr>\n                          <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                            {problem}\n                          </td>\n                          <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                            {test === '' ? '-' : test}\n                          </td>\n                          <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                            {testInput ? (\n                              testInput\n                            ) : (\n                              <div style={{ display: 'flex' }}>\n                                {files?.map((file, fileIndex) => (\n                                  <div\n                                    key={fileIndex}\n                                    value={file.fileName}\n                                    style={{\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      marginRight: '10px',\n                                    }}\n                                    // onMouseEnter={() => handleMouseEnter(file.fileName)}\n                                    onMouseEnter={() => {\n                                      const editedName = editNameFun(file.fileName)\n                                      setHoveredFile(editedName)\n                                    }}\n                                    onMouseLeave={() => setHoveredFile('')}\n                                    onClick={() => showReportHandler(file?.fileName, fileIndex)}\n                                  >\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn btn-sm btn-primary\" // Decreased size and changed color to blue\n                                      data-toggle=\"popover\"\n                                      title={hoveredFile}\n                                      style={{ margin: '0' }}\n                                    >\n                                      <CIcon icon={cilDataTransferDown} />\n                                    </button>\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n                          </td>\n                          {console.log('Guarav', testInput)}\n                          <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                            {scale === '' ? '-' : scale}\n                          </td>\n                          <td className=\"tableTitle\" style={{ fontWeight: 'bolder' }}>\n                            {value === '' ? '-' : value}\n                          </td>\n                        </tr>\n                      </tbody>\n                    )\n                  })}\n                </table>\n\n                <div className=\"row\" style={{ margin: '1rem auto 1rem 0', width: '90%' }}>\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-md-2 d-flex align-items-center\">\n                        <h5>Notes:</h5>\n                      </div>\n                      <div className=\"col-md-10 d-flex align-items-center\">\n                        <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                          <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr style={{ width: '100%' }} />\n          </div>\n        )\n      })}\n      <ToastContainer />\n    </div>\n  )\n}\n\nPatientShowDetails.propTypes = {\n  diagnosis: PropTypes.array.isRequired,\n}\n\nexport default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, postFetchFile, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({\n  _id,\n  getSearchByPatient,\n  setIsAddNewDiagnosis,\n  setIsDetailed,\n  diagnosisProp,\n}) => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n    diagnosisProp: PropTypes.string.isRequired,\n  }\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n  ])\n\n  const [lastDiagnosis, setLastDiagnosis] = useState('')\n\n  useEffect(() => {\n    const lastRecords = diagnosisProp[diagnosisProp.length - 1]\n    const lastDiagnosis = lastRecords?.diagnosData[lastRecords?.diagnosData.length - 1]\n    setLastDiagnosis(lastDiagnosis)\n    console.log('Guarssadva', lastDiagnosis)\n    setInputs([\n      { problem: lastDiagnosis?.problem, test: '', testInput: '', files: [], scale: '', value: '' },\n    ])\n  }, [])\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n    const filteredInputs = inputs.filter((data) => data.problem !== '')\n\n    for (const data of filteredInputs) {\n      if (data.test !== '' && data.testInput === '' && data.files.length === 0) {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n\n    // for (const data of inputs) {\n    //   if (data.test !== '' && data.testInput === '' && data.files.length === 0) {\n    //     toast.warning('Please give input for selected test')\n    //     return // Stop further execution\n    //   }\n\n    //   if (data.scale !== '' && data.value === '') {\n    //     toast.warning('Please give input for selected scale')\n    //     return // Stop further execution\n    //   }\n    //   console.log('data', data)\n    // }\n    // toast.warning('Uploading Files and Reports')z\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        filteredInputs.map(async (data, index) => {\n          if (data.files) {\n            const files = data.files\n            if (files.length > 0) {\n              const formData = new FormData()\n              files.forEach((file) => {\n                // Check if the file type is allowed\n                const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n                if (allowedFileTypes.includes(file.type)) {\n                  formData.append('files', file) // Append each allowed file to the FormData\n                } else {\n                  console.warn('File type not allowed:', file.type)\n                }\n              })\n              if (formData.has('files')) {\n                const response = await postFetchFile(\n                  `${API_URL}/api/user/uploadPatientReport`,\n                  formData,\n                )\n                if (response) {\n                  setfileUploadingSpinner(false)\n                  filteredInputs[index].files = response.filesInfo\n                }\n              } else {\n                console.warn('No valid files to upload')\n              }\n            }\n          } else {\n            filteredInputs[index].files = null\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false)\n      console.error('Error uploading files:', error)\n      return\n    }\n\n    // console.log('guarav', inputs)\n    try {\n      setLoading(true)\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: filteredInputs,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n\n        setIsAddNewDiagnosis(false)\n        setIsDetailed(true)\n        setInputs([{ problem: '', test: '', testInput: '', files: [], scale: '', value: '' }])\n        setLoading(false)\n\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n    const maxFiles = 3 // Maximum number of files allowed\n\n    // Check if the number of selected files exceeds the limit\n    if (files.length > maxFiles) {\n      event.target.value = '' // Clear the file input\n      toast.warning('You can only upload up to 3 files', { autoClose: 1500 })\n      return\n    }\n\n    const updatedInputs = [...inputs]\n\n    // Convert FileList to array and filter out files that exceed the size limit or are not of allowed types\n    const filesArray = Array.from(files).filter((file) => {\n      if (file.size > 31457280) {\n        toast.warning('File size should be less than 30 MB', { autoClose: 1500 })\n        return false\n      }\n      if (!allowedFileTypes.includes(file.type)) {\n        toast.warning('Only images and PDFs are allowed', { autoClose: 1500 })\n        return false\n      }\n      return true\n    })\n\n    updatedInputs[index][name] = filesArray // Store the array of files\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    const allInputsHaveProblem = inputs.every((input) => input.problem !== '')\n    if (allInputsHaveProblem) {\n      setInputs([\n        ...inputs,\n        { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n      ])\n    } else {\n      toast.warning('Please Fill Details of previous Record before adding new!!', {\n        autoClose: 1500,\n      })\n    }\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  const handleInputTestText = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n\n  return (\n    <>\n      {fileUploadingSpinner && (\n        <SpinnerOverlay loading={fileUploadingSpinner} message=\"Uploading Files\" />\n      )}\n      {loading && <SpinnerOverlay message=\"Adding Diagnosis\" />}\n      <div style={{ margin: '1rem auto 1rem 1rem' }}>\n        <div className=\"addPatientDataInnerDiv\">\n          <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <form className=\"mb-3\">\n            {inputs.map((input, index) => (\n              <div key={index} className=\"row mt-1 mb-2\">\n                <div className=\"col-md-2 col-12\">\n                  <label>\n                    <select\n                      className=\"form-control addPatientDataSelectDiv \"\n                      // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                      name=\"problem\"\n                      value={input.problem}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Chief complaint</option>\n                      {problems.map((problem, problemIndex) => (\n                        <option key={problemIndex} value={problem}>\n                          {problem}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2 col-6\">\n                  <label>\n                    <select\n                      className=\"form-control addPatientDataSelectDiv\"\n                      // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                      name=\"test\"\n                      value={input.test}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Test</option>\n                      {tests.map((test, testIndex) => (\n                        <option key={testIndex} value={test.name}>\n                          {test.name}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                {input.test === '' ? (\n                  <div className=\"col-md-2 col-6\">\n                    <label>\n                      <input\n                        className=\"form-control addPatientDataInputDiv\"\n                        // style={{ width: '100%', appearance: 'auto' }}\n                        placeholder=\"Select a Test\"\n                        type=\"text\"\n                        disabled=\"true\"\n                      />\n                    </label>\n                  </div>\n                ) : (\n                  <div className=\"col-md-2 col-6\">\n                    {tests.map((test, testIndex) => {\n                      if (test.name === input.test) {\n                        if (test.inputType === 'text') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '100%' }}\n                                placeholder=\"Enter test Value\"\n                                type=\"text\"\n                                name=\"testInput\"\n                                value={input.testInput.text} // Here is the issue\n                                onChange={(event) => handleInputTestText(index, event)}\n                              />\n                            </label>\n                          )\n                        } else if (test.inputType === 'file') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '100%' }}\n                                type=\"file\"\n                                multiple\n                                name=\"files\"\n                                accept=\"image/jpeg, image/png, application/pdf\"\n                                onChange={(event) => handleFileInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        }\n                      }\n                      return null\n                    })}\n                  </div>\n                )}\n                <div className=\"col-md-2 col-6\">\n                  <label>\n                    <select\n                      className=\"form-control addPatientDataSelectDiv\"\n                      // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                      name=\"scale\"\n                      value={input.scale}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Scale</option>\n                      {scales.map((scale, scaleIndex) => (\n                        <option key={scaleIndex} value={scale}>\n                          {scale}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2 col-6\">\n                  <label>\n                    <input\n                      className=\"form-control addPatientDataInputDiv\"\n                      // style={{ width: '100%', appearance: 'auto' }}\n                      placeholder=\"Enter Scale Value\"\n                      type=\"text\"\n                      name=\"value\"\n                      value={input.value}\n                      onChange={(event) => handleInputChange(index, event)}\n                    />\n                  </label>\n                </div>\n                <div className=\"col-md-2 d-flex justify-content-center\">\n                  {removeAndAddInput && (\n                    <button\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                      onClick={() => handleRemoveInput(index)}\n                    >\n                      Remove\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div className=\"d-flex justify-content-end\">\n              <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n                Add More\n              </button>\n            </div>\n          </form>\n          <div>\n            <textarea\n              rows={4}\n              className=\"form-control col-12\"\n              placeholder=\"Notes (Optional)\"\n              name=\"desc\"\n              value={desc}\n              onChange={(e) => setDesc(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"d-flex mt-2\">\n            <div className=\"w-auto\">\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['DateTimePicker']}>\n                  <DateTimePicker\n                    label=\"Next Appointment Date\"\n                    value={startingDate}\n                    onChange={handleStartingDateChange}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </div>\n          </div>\n          <div className=\"text-end\">\n            <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger mt-4 ms-2\"\n              style={{ width: '10rem' }}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  const [isSmallScreen, setIsSmallScreen] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      setIsSmallScreen(window.innerWidth <= 768) // Adjust the breakpoint as needed\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <div>\n      {isSmallScreen ? (\n        <>\n          {patientSearch?.map((patient) => {\n            const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n            const isDetailsOpen = selectedPatientId === _id\n            const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n            const inputDate = nextApointmentDate\n            const diagnosisProp = diagnosis\n            const date = new Date(inputDate)\n            const formattedDate = date\n              .toLocaleString('en-IN', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })\n              .replace(/\\//g, '/')\n\n            return (\n              <div key={_id}>\n                <div style={{ marginTop: '2rem' }}>\n                  <div className=\"card\" style={{ width: '100%' }}>\n                    <div className=\"card-body overflow-auto \">\n                      <div className=\"row\" style={{ marginBottom: '1rem' }}>\n                        <div style={{ width: '40%' }}>\n                          <span>\n                            <span className=\"boldFont\">CR No :</span> {crn}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Age : </span> {age}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Sex. </span> {sex}\n                          </span>\n                        </div>\n                        <div style={{ width: '60%' }}>\n                          <span>\n                            <span className=\"boldFont\">Name : </span> {name}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Mob. No.</span> {phone}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Next Appointment Date.</span>{' '}\n                            {nextApointmentDate ? formattedDate : '-'}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success patientInfoButton\"\n                          onClick={() => handleToggleDetails(_id)}\n                          // style={{ fontSize: '15px', whiteSpace: 'none', padding: '5px 10px' }}\n                        >\n                          Show Diagnosis\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning\"\n                          style={{ marginLeft: '2rem' }}\n                          onClick={() => handleAddDiagnosis(_id)}\n                        >\n                          {diagnosis ? 'Add New Follow-Up' : 'Add New Diagnosis'}\n                        </button>\n                      </div>\n\n                      {isDetailsOpen && isDetails && (\n                        <div>\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                      {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                        <div>\n                          <PatientAddNewRecord\n                            _id={_id}\n                            getSearchByPatient={getSearchByPatient}\n                            setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                            setIsDetailed={setIsDetailed}\n                            diagnosisProp={diagnosisProp}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </>\n      ) : (\n        <div className=\"mb-4\">\n          {patientSearch?.map((patient) => {\n            const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n            const isDetailsOpen = selectedPatientId === _id\n            const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n            const inputDate = nextApointmentDate\n            const diagnosisProp = diagnosis\n            const date = new Date(inputDate)\n            const formattedDate = date\n              .toLocaleString('en-IN', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })\n              .replace(/\\//g, '/')\n\n            return (\n              <div key={_id} className=\"row\">\n                <div style={{ marginTop: '2rem' }}>\n                  <div className=\"card\" style={{ width: '100%' }}>\n                    <div className=\"card-body overflow-auto \">\n                      <h5 className=\"card-title\"> CR No : {crn}</h5>\n                      <h6 className=\"card-subtitle mt-2\">\n                        <h5>Name : {name}</h5>\n                      </h6>\n                      <div style={{ display: 'flex', marginTop: '1rem' }}>\n                        {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                        <span style={{ display: 'flex' }}>\n                          <h6>Phone No. &nbsp;</h6>{' '}\n                          <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                          <h6 style={{ fontWeight: 'normal' }}>\n                            {nextApointmentDate ? formattedDate : '-'}\n                          </h6>\n                        </span>\n                      </div>\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success\"\n                          onClick={() => handleToggleDetails(_id)}\n                          style={{ fontSize: '15px', whiteSpace: 'none', padding: '5px 10px' }}\n                        >\n                          Show Diagnosis\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning\"\n                          style={{ marginLeft: '2rem' }}\n                          onClick={() => handleAddDiagnosis(_id)}\n                        >\n                          {diagnosis ? 'Add New Follow-Up' : 'Add New Diagnosis'}\n                        </button>\n                      </div>\n\n                      {isDetailsOpen && isDetails && (\n                        <div>\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                      {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                        <div>\n                          <PatientAddNewRecord\n                            _id={_id}\n                            getSearchByPatient={getSearchByPatient}\n                            setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                            setIsDetailed={setIsDetailed}\n                            diagnosisProp={diagnosisProp}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  // console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [queryCRN, setQueryCRN] = useState('')\n  const randomCRN = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: `${randomCRN}`,\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  // const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  // console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n    const queryParams = new URLSearchParams(location.search)\n    const searchParamValue = queryParams.get('crn')\n    if (searchParamValue) {\n      setQueryCRN(searchParamValue)\n    }\n  }, [])\n\n  useEffect(() => {\n    // console.log('Gaurav Tripathii', queryCRN)\n    getSearchByPatient()\n  }, [queryCRN])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  // console.log('problems', problems)\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      let searchData = search || location?.state?.crn || queryCRN\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      // console.log('searchData', data)\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // console.log('before', inputs)\n  })\n\n  /////////////////////////////////////START OF HANDLE SUBMIT/////////////////////\n\n  const handleSubmit = async () => {\n    // console.log('updatedFormData', inputs)\n\n    setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n    const filteredInputs = inputs.filter((data) => data.problem !== '')\n\n    for (const data of filteredInputs) {\n      if (data.test !== '' && data.testInput === '' && data.files.length === 0) {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        filteredInputs.map(async (data, index) => {\n          if (data.files) {\n            const files = data.files\n            if (files.length > 0) {\n              const formData = new FormData()\n              files.forEach((file) => {\n                // Check if the file type is allowed\n                const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n                if (allowedFileTypes.includes(file.type)) {\n                  formData.append('files', file) // Append each allowed file to the FormData\n                } else {\n                  console.warn('File type not allowed:', file.type)\n                }\n              })\n              if (formData.has('files')) {\n                const response = await postFetchFile(\n                  `${API_URL}/api/user/uploadPatientReport`,\n                  formData,\n                )\n                if (response) {\n                  setfileUploadingSpinner(false)\n                  filteredInputs[index].files = response.filesInfo\n                }\n              } else {\n                setfileUploadingSpinner(false)\n                console.warn('No valid files to upload')\n              }\n            }\n          } else {\n            filteredInputs[index].files = null\n            setfileUploadingSpinner(false)\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false)\n      console.error('Error uploading files:', error)\n      return\n    }\n\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: filteredInputs,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n\n    try {\n      // console.log('pre', updatedFormData)\\\n      const doctorRecord = await localStorage.getItem('patientRecord')\n      const doctorId = JSON.parse(doctorRecord)?._id\n      // console.log('Guarav', JSON.parse(doctorRecord)?._id)\n      const data = await postFetchData(`${API_URL}/api/patient/create/${doctorId}`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n        setfileUploadingSpinner(false)\n\n        setaddPatientLoader(true)\n        setData(false)\n\n        // toast.success('Patient Created Successfully')\n        setUpdateState(true)\n        setaddPatientLoader(false)\n        // setDiagnosis([])\n        setDesc('')\n        setStartingDate(null)\n        setInputs([{ problem: '', test: '', testInput: '', files: [], scale: '', value: '' }])\n\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: `${randomCRN}`,\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message === 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      if (data.message === 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      // console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n  }\n  /////////////////////////////////////// END OF HANDLE SUBMIT ////////////\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  //////// new updates\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleInputTestText = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n    const maxFiles = 3 // Maximum number of files allowed\n\n    // Check if the number of selected files exceeds the limit\n    if (files.length > maxFiles) {\n      event.target.value = '' // Clear the file input\n      toast.warning('You can only upload up to 3 files', { autoClose: 1500 })\n      return\n    }\n\n    const updatedInputs = [...inputs]\n\n    // Convert FileList to array and filter out files that exceed the size limit or are not of allowed types\n    const filesArray = Array.from(files).filter((file) => {\n      if (file.size > 31457280) {\n        toast.warning('File size should be less than 30 MB', { autoClose: 1500 })\n        return false\n      }\n      if (!allowedFileTypes.includes(file.type)) {\n        toast.warning('Only images and PDFs are allowed', { autoClose: 1500 })\n        return false\n      }\n      return true\n    })\n\n    updatedInputs[index][name] = filesArray // Store the array of files\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    const allInputsHaveProblem = inputs.every((input) => input.problem !== '')\n    if (allInputsHaveProblem) {\n      setInputs([\n        ...inputs,\n        { problem: '', test: '', testInput: '', files: [], scale: '', value: '' },\n      ])\n    } else {\n      toast.warning('Please Fill Details of previous Record before adding new!!', {\n        autoClose: 1500,\n      })\n    }\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs)\n  }, [inputs])\n\n  const clearAllDataInputs = () => {\n    setInputs([{ problem: '', test: '', testInput: '', files: [], scale: '', value: '' }])\n    setFormData({\n      name: '',\n      age: '',\n      sex: 'male',\n      phone: '',\n      crn: `${randomCRN}`,\n      diagnosis: [],\n      desc: '',\n      doctor_id: patientRecord?._id,\n    })\n  }\n\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div className=\"search-container\">\n              <div className=\"search-input\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n                <button\n                  className=\"btn btn-primary searchButton\"\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  <button\n                    className=\"btn btn-danger text-light clearButton\"\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : null}\n              </div>\n              <div className=\"add-patient-btn\">\n                <button\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <>\n                {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n\n                <div className=\"content-to-be-blurred\">\n                  <div style={{ marginTop: '1rem' }}>\n                    <div>\n                      <hr />\n                      <h4>Patient Details</h4>\n\n                      <div>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Name <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control \"\n                                  name=\"name\"\n                                  value={formData.name}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, name: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Age <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"number\"\n                                  className=\"form-control \"\n                                  name=\"age\"\n                                  value={formData.age}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, age: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Sex <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <select\n                                  className=\"form-control \"\n                                  name=\"sex\"\n                                  value={formData.sex}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, sex: e.target.value })\n                                  }\n                                >\n                                  <option value=\"male\">Male</option>\n                                  <option value=\"female\">Female</option>\n                                  <option value=\"other\">Other</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row \">\n                          <div className=\"col-md-4 mt-2\">\n                            <div>\n                              <label className=\"col-lg-4 patientNamediv\">\n                                Phone No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\" col-lg-8 col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"text\"\n                                  name=\"phone\"\n                                  value={formData.phone}\n                                  onChange={(e) => {\n                                    if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                                      setFormData({ ...formData, phone: e.target.value })\n                                    }\n                                  }}\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-md-4 mt-2\">\n                            <div>\n                              <label className=\"col-sm-4  patientNamediv\">\n                                CR No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"test\"\n                                  name=\"crn\"\n                                  value={formData.crn}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, crn: e.target.value })\n                                  }\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr />\n                      <div className=\"addPatientDataInnerDiv\">\n                        <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n                      </div>\n                      <div>\n                        <form className=\"mb-3\">\n                          {inputs.map((input, index) => (\n                            <div key={index} className=\"row mt-1 mb-2\">\n                              <div className=\"col-md-2 col-12\">\n                                <label>\n                                  <select\n                                    className=\"form-control addPatientDataSelectDiv\"\n                                    // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                                    name=\"problem\"\n                                    value={input.problem}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Chief complaint</option>\n                                    {problems.map((problem, problemIndex) => (\n                                      <option key={problemIndex} value={problem}>\n                                        {problem}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 col-6\">\n                                <label>\n                                  <select\n                                    className=\"form-control addPatientDataSelectDiv\"\n                                    // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                                    name=\"test\"\n                                    value={input.test}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Test</option>\n                                    {tests.map((test, testIndex) => (\n                                      <option key={testIndex} value={test.name}>\n                                        {test.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              {input.test === '' ? (\n                                <div className=\"col-md-2 col-6\">\n                                  <label>\n                                    <input\n                                      className=\"form-control addPatientDataInputDiv\"\n                                      // style={{ width: '100%', appearance: 'auto' }}\n                                      placeholder=\"Select a Test\"\n                                      type=\"text\"\n                                      disabled=\"true\"\n                                    />\n                                  </label>\n                                </div>\n                              ) : (\n                                <div className=\"col-md-2 col-6\">\n                                  {tests.map((test, testIndex) => {\n                                    if (test.name === input.test) {\n                                      if (test.inputType === 'text') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '100%' }}\n                                              placeholder=\"Enter test Value\"\n                                              type=\"text\"\n                                              name=\"testInput\"\n                                              value={input.testInput.text} // Here is the issue\n                                              onChange={(event) =>\n                                                handleInputTestText(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      } else if (test.inputType === 'file') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '100%' }}\n                                              type=\"file\"\n                                              multiple\n                                              name=\"files\"\n                                              accept=\"image/jpeg, image/png, application/pdf\"\n                                              onChange={(event) =>\n                                                handleFileInputChange(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      }\n                                    }\n                                    return null\n                                  })}\n                                </div>\n                              )}\n                              <div className=\"col-md-2 col-6\">\n                                <label>\n                                  <select\n                                    className=\"form-control addPatientDataSelectDiv\"\n                                    // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                                    name=\"scale\"\n                                    value={input.scale}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Scale</option>\n                                    {scales.map((scale, scaleIndex) => (\n                                      <option key={scaleIndex} value={scale}>\n                                        {scale}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 col-6\">\n                                <label>\n                                  <input\n                                    className=\"form-control addPatientDataInputDiv\"\n                                    // style={{ width: '100%', appearance: 'auto' }}\n                                    placeholder=\"Enter Scale Value\"\n                                    type=\"text\"\n                                    name=\"value\"\n                                    value={input.value}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 d-flex justify-content-end col-12\">\n                                {removeAndAddInput && (\n                                  <button\n                                    className=\"btn btn-danger me-4 mt-1\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveInput(index)}\n                                    // style={{ marginRight: '10px', marginTop: '3px' }}\n                                  >\n                                    Remove\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"d-flex justify-content-end\">\n                            <button\n                              className=\"btn btn-primary me-4\"\n                              type=\"button\"\n                              onClick={handleAddInput}\n                            >\n                              Add More\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                      <div>\n                        <textarea\n                          rows={4}\n                          className=\"form-control col-12\"\n                          placeholder=\"Notes (Optional)\"\n                          name=\"desc\"\n                          value={desc}\n                          onChange={(e) => setDesc(e.target.value)}\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"d-flex mt-2\">\n                        <div className=\"w-auto\">\n                          <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={['DateTimePicker']}>\n                              <DateTimePicker\n                                label=\"Next Appointment Date\"\n                                value={startingDate}\n                                onChange={handleStartingDateChange}\n                                // ampm={false}\n                              />\n                            </DemoContainer>\n                          </LocalizationProvider>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-end m-4\">\n                      <button className=\"btn btn-info mt-3 mx-2 w-auto\" onClick={handleSubmit}>\n                        Submit\n                      </button>\n                      <button\n                        className=\"btn btn-info mt-3 w-auto\"\n                        onClick={() => {\n                          setData(false)\n                          clearAllDataInputs()\n                        }}\n                      >\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div className=\"loaderDivInPatientPage\">{loader ? <Loader /> : 'No Data'}</div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientPage\n"],"names":["_ref","diagnosis","console","log","reversedDiagnosis","setReversedDiagnosis","useState","loading","setLoading","requestedFileLoading","setRequestedFileLoading","useEffect","Array","isArray","reversed","reverse","hoveredFile","setHoveredFile","_jsxs","style","maxHeight","marginTop","children","map","elem","index","_elem$diagnosData","formattedDate","Date","date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","margin","_jsx","className","overflowX","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","innerIndex","problem","scale","test","testInput","files","value","SpinnerOverlay","message","fontWeight","display","file","fileIndex","fileName","alignItems","marginRight","onMouseEnter","editedName","name","parts","split","length","slice","join","editNameFun","onMouseLeave","onClick","async","filename","response","axios","get","concat","process","responseType","blob","Blob","data","type","headers","blobUrl","URL","createObjectURL","window","open","error","showReportHandler","title","CIcon","icon","cilDataTransferDown","padding","desc","ToastContainer","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","diagnosisProp","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","inputs","setInputs","lastDiagnosis","setLastDiagnosis","lastRecords","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","fileUploadingSpinner","setfileUploadingSpinner","problems","setProblems","tests","setTests","scales","setScales","fetchProblems","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","scaleFilter","testFilter","_ref2","inputType","prevFormData","getPatientById","removeAndAddInput","setremoveAndAddInput","handleInputChange","event","target","updatedInputs","handleAddInput","every","input","toast","warning","autoClose","handleRemoveInput","splice","_Fragment","departmentName","onSubmit","e","preventDefault","filteredInputs","Promise","all","FormData","forEach","includes","append","warn","has","postFetchFile","filesInfo","updatedFormData","nextApointmentDate","putFetchData","success","onChange","problemIndex","testIndex","placeholder","disabled","text","handleInputTestText","multiple","accept","handleFileInputChange","allowedFileTypes","filesArray","from","size","scaleIndex","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","handleToggleDetails","patientId","prevState","handleAddDiagnosis","isSmallScreen","setIsSmallScreen","handleResize","innerWidth","addEventListener","removeEventListener","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","marginBottom","marginLeft","PatientShowDetails","PatientAddNewRecord","fontSize","whiteSpace","AddPatientLoader","Box","height","lineHeight","textAlign","CircularProgress","PatientPage","location","useLocation","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","queryCRN","setQueryCRN","randomCRN","Math","floor","random","doctor_id","searchParamValue","URLSearchParams","_location$state","_data$data","searchData","state","setTimeout","dateAndTime","setDateAndTime","_location$state2","_location$state3","paddingLeft","onKeyPress","key","clearSearch","color","required","_JSON$parse","_data$data2","doctorRecord","doctorId","postFetchData","Loader","PatientInfoData"],"sourceRoot":""}