{"version":3,"file":"static/js/4701.4f0f2cfd.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","views/pages/loader/Loader.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/PatientPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport '../../dashboard/Dashboard.css'\nimport { faL } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nconst PatientShowDetails = ({ diagnosis, desc }) => {\n  let url = process.env.REACT_APP_API_URL\n  PatientShowDetails.propTypes = {\n    diagnosis: PropTypes.func.isRequired,\n    desc: PropTypes.func.isRequired,\n  }\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [requestedFileLoading, setRequestedFileLoading] = useState({})\n\n  // Reverse diagnosis array on component mount or whenever diagnosis changes\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      setReversedDiagnosis([...diagnosis].reverse())\n    }\n  }, [diagnosis])\n\n  const isFile = (value) => {\n    const regex = /^\\d{13}_/\n\n    if (regex.test(value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n  //no pdf\n  const showReportHandler = async (filename, index) => {\n    setRequestedFileLoading((prvState) => ({\n      ...prvState,\n      [index]: true,\n    }))\n\n    try {\n      // Fetch the image data from the server\n      const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n        responseType: 'blob', // Treat response data as blob\n      })\n\n      // Create a Blob object from the response data\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n      // Generate a URL for the Blob\n      const blobUrl = URL.createObjectURL(blob)\n\n      // Open the URL in a new tab\n      window.open(blobUrl)\n    } catch (error) {\n      console.error('Error fetching image:', error)\n    } finally {\n      setRequestedFileLoading((prvState) => ({\n        ...prvState,\n        [index]: false,\n      }))\n    }\n  }\n\n  /// opening pdf\n\n  return (\n    <div\n      style={{\n        maxHeight: '300px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        marginTop: '20px',\n      }}\n    >\n      {reversedDiagnosis?.map((elem, index) => {\n        const date = elem?.date\n\n        const datee = new Date(date)\n\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          // second: '2-digit',\n          hour12: true, // Set to true if you want 12-hour format with AM/PM\n        }\n        const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n        return (\n          <>\n            <div key={index}>\n              <div\n                className=\"row\"\n                // style={{ overflow: 'scroll !important', background: 'white' }}\n              >\n                <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n                  <h5>Diagnose Date : {formattedDate}</h5>\n\n                  <table\n                    className=\"table\"\n                    style={{\n                      width: '90%',\n                      border: '1px solid',\n                      fontFamily: 'ui-rounded',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    <colgroup>\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                      <col style={{ width: '20%' }} />\n                    </colgroup>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Problems\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Test\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Test value\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Scale\n                        </th>\n                        <th scope=\"col\" style={{ background: '#FBF295' }}>\n                          Scale value\n                        </th>\n                      </tr>\n                    </thead>\n                    {elem?.diagnosData?.map((element, innerIndex) => {\n                      let { problem, scale, test, testInput, value } = element\n                      return (\n                        <>\n                          <tbody key={innerIndex}>\n                            <tr>\n                              <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                              <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n                              <td style={{ fontWeight: 'bolder' }}>\n                                {testInput === '' ? (\n                                  '-'\n                                ) : isFile(testInput) ? (\n                                  <>\n                                    <button\n                                      className=\"btn btn-light\"\n                                      onClick={() => showReportHandler(testInput, innerIndex)}\n                                      disabled={requestedFileLoading[innerIndex]}\n                                    >\n                                      {requestedFileLoading[innerIndex]\n                                        ? 'Please Wait...'\n                                        : 'Show Report'}\n                                    </button>\n                                  </>\n                                ) : (\n                                  testInput\n                                )}\n                              </td>\n                              <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n                              <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n                            </tr>\n                          </tbody>\n                        </>\n                      )\n                    })}\n                  </table>\n                  <div className=\"row\">\n                    <div style={{ margin: '1rem auto 1rem 1rem' }}>\n                      <div className=\"row\" style={{ marginTop: '1rem' }}>\n                        <div className=\"col-md-2 d-flex align-items-center\">\n                          <h5>Notes:</h5>\n                        </div>\n                        <div className=\"col-md-10 d-flex align-items-center\">\n                          <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n                            <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n                  <div className=\"col-md-4\">\n                    <h6>Discription :</h6>{' '}\n                  </div>\n                  <div className=\"col-md-8\">\n                    <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n                  </div>\n                </div> */}\n                </div>\n                <hr />\n              </div>\n            </div>\n          </>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PatientShowDetails\n\n////working code\n\n// import React, { useEffect, useState } from 'react'\n// import PropTypes from 'prop-types'\n// import '../../dashboard/Dashboard.css'\n// import { faL } from '@fortawesome/free-solid-svg-icons'\n// import axios from 'axios'\n\n// const PatientShowDetails = ({ diagnosis, desc }) => {\n//   let url = process.env.REACT_APP_API_URL\n//   PatientShowDetails.propTypes = {\n//     diagnosis: PropTypes.func.isRequired,\n//     desc: PropTypes.func.isRequired,\n//   }\n//   const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n//   const [requestedFileLoading, setRequestedFileLoading] = useState({})\n\n//   // Reverse diagnosis array on component mount or whenever diagnosis changes\n//   useEffect(() => {\n//     if (diagnosis && Array.isArray(diagnosis)) {\n//       setReversedDiagnosis([...diagnosis].reverse())\n//     }\n//   }, [diagnosis])\n\n//   const isFile = (value) => {\n//     const regex = /^\\d{13}_/\n\n//     if (regex.test(value)) {\n//       return true\n//     } else {\n//       return false\n//     }\n//   }\n//   //no pdf\n//   const showReportHandler = async (filename, index) => {\n//     setRequestedFileLoading((prevState) => ({\n//       ...prevState,\n//       [index]: true,\n//     }))\n//     setTimeout(async () => {\n//       try {\n//         // Fetch the image data from the server\n//         const response = await axios.get(`${url}/api/user/getPatientReport/${filename}`, {\n//           responseType: 'blob', // Treat response data as blob\n//         })\n\n//         // Create a Blob object from the response data\n//         const blob = new Blob([response.data], { type: response.headers['content-type'] })\n\n//         // Generate a URL for the Blob\n//         const blobUrl = URL.createObjectURL(blob)\n//         // Open the URL in a new tab\n//         window.open(blobUrl)\n//       } catch (error) {\n//         console.error('Error fetching image:', error)\n//       } finally {\n//         setRequestedFileLoading((prevState) => ({\n//           ...prevState,\n//           [index]: false,\n//         }))\n//       }\n//     }, 3000)\n//   }\n\n//   return (\n//     <div\n//       style={{\n//         maxHeight: '300px',\n//         overflowY: 'scroll',\n//         overflowX: 'hidden',\n//         marginTop: '20px',\n//       }}\n//     >\n//       {reversedDiagnosis?.map((elem, index) => {\n//         const date = elem?.date\n\n//         const datee = new Date(date)\n\n//         const options = {\n//           year: 'numeric',\n//           month: '2-digit',\n//           day: '2-digit',\n//           hour: '2-digit',\n//           minute: '2-digit',\n//           // second: '2-digit',\n//           hour12: true, // Set to true if you want 12-hour format with AM/PM\n//         }\n//         const formattedDate = datee.toLocaleDateString('en-IN', options).replace(/\\//g, '/')\n//         return (\n//           <div key={index}>\n//             <div\n//               className=\"row\"\n//               // style={{ overflow: 'scroll !important', background: 'white' }}\n//             >\n//               <div style={{ margin: '1rem auto 1rem 1rem', overflow: 'auto !important' }}>\n//                 <h5>Diagnose Date : {formattedDate}</h5>\n\n//                 <table\n//                   className=\"table\"\n//                   style={{\n//                     width: '90%',\n//                     border: '1px solid',\n//                     fontFamily: 'ui-rounded',\n//                     borderRadius: '10px',\n//                   }}\n//                 >\n//                   <colgroup>\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                     <col style={{ width: '20%' }} />\n//                   </colgroup>\n//                   <thead>\n//                     <tr>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Problems\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Test\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Test value\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Scale\n//                       </th>\n//                       <th scope=\"col\" style={{ background: '#FBF295' }}>\n//                         Scale value\n//                       </th>\n//                     </tr>\n//                   </thead>\n//                   {elem?.diagnosData?.map((element, innerIndex) => {\n//                     let { problem, scale, test, testInput, value } = element\n//                     return (\n//                       <>\n//                         <tbody key={innerIndex}>\n//                           <tr>\n//                             <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n//                             <td style={{ fontWeight: 'bolder' }}>{test === '' ? '-' : test}</td>\n//                             <td style={{ fontWeight: 'bolder' }}>\n//                               {testInput === '' ? (\n//                                 '-'\n//                               ) : isFile(testInput) ? (\n//                                 <>\n//                                   <button\n//                                     className=\"btn btn-light\"\n//                                     onClick={() => showReportHandler(testInput, index)}\n//                                     disabled={requestedFileLoading[index]}\n//                                   >\n//                                     {requestedFileLoading[index]\n//                                       ? 'Please wait...'\n//                                       : 'Show Report'}\n//                                   </button>\n//                                 </>\n//                               ) : (\n//                                 testInput\n//                               )}\n//                             </td>\n//                             <td style={{ fontWeight: 'bolder' }}>{scale === '' ? '-' : scale}</td>\n//                             <td style={{ fontWeight: 'bolder' }}>{value === '' ? '-' : value}</td>\n//                           </tr>\n//                         </tbody>\n//                       </>\n//                     )\n//                   })}\n//                 </table>\n//                 <div className=\"row\">\n//                   <div style={{ margin: '1rem auto 1rem 1rem' }}>\n//                     <div className=\"row\" style={{ marginTop: '1rem' }}>\n//                       <div className=\"col-md-2 d-flex align-items-center\">\n//                         <h5>Notes:</h5>\n//                       </div>\n//                       <div className=\"col-md-10 d-flex align-items-center\">\n//                         <div className=\"card\" style={{ width: '87%', padding: '1rem 2rem' }}>\n//                           <p style={{ margin: '0' }}>{elem.desc === '' ? '-' : elem.desc}</p>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//                 {/* <div className=\"row\" style={{ marginTop: '1rem' }}>\n//                   <div className=\"col-md-4\">\n//                     <h6>Discription :</h6>{' '}\n//                   </div>\n//                   <div className=\"col-md-8\">\n//                     <p>safdkjshfjaisdfjidsajfdjdk dnfjjdsan</p>\n//                   </div>\n//                 </div> */}\n//               </div>\n//               <hr />\n//             </div>\n//           </div>\n//         )\n//       })}\n//     </div>\n//   )\n// }\n\n// export default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, postFetchFile, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({ _id, getSearchByPatient, setIsAddNewDiagnosis, setIsDetailed }) => {\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n  }\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data?.test !== '' && data?.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data?.scale !== '' && data?.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')z\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        // Use Promise.all to wait for all uploads to finish\n        inputs.map(async (data, index) => {\n          if (typeof data.testInput !== 'string') {\n            const file = data.testInput\n            const formData = new FormData()\n            formData.append('file', file)\n            const response = await postFetchFile(\n              `${API_URL}/api/user/uploadPatientReport`,\n              formData,\n            )\n            if (response) {\n              inputs[index].testInput = response?.fileName\n            }\n          }\n        }),\n      )\n      // toast.dismiss()\n      setfileUploadingSpinner(false) // Set loading to false when all uploads are done\n    } catch (error) {\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n    try {\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: inputs,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n        setTimeout(() => {\n          setIsAddNewDiagnosis(false)\n          setIsDetailed(true)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = files[0]\n    setInputs(updatedInputs)\n    console.log('Guarv', inputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  return (\n    <>\n      {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n      <div style={{ margin: '1rem auto 1rem 1rem' }}>\n        <div style={{ margin: '1rem auto 1rem 0' }}>\n          <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <form className=\"mb-2\">\n            {inputs?.map((input, index) => (\n              <div key={index} className=\"row mt-1 mb-2\">\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"problem\"\n                      value={input.problem}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Chief complaint</option>\n                      {problems?.map((problem, problemIndex) => (\n                        <option key={problemIndex} value={problem}>\n                          {problem}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"test\"\n                      value={input.test}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Test</option>\n                      {tests?.map((test, testIndex) => (\n                        <option key={testIndex} value={test.name}>\n                          {test.name}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                {input?.test === '' ? (\n                  ''\n                ) : (\n                  <div className=\"col-md-2\">\n                    {tests?.map((test, testIndex) => {\n                      if (test.name === input.test) {\n                        if (test?.inputType === 'text') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                placeholder=\"Enter test Value\"\n                                type=\"text\"\n                                name=\"testInput\"\n                                value={input.testInput}\n                                onChange={(event) => handleInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        } else if (test?.inputType === 'file') {\n                          return (\n                            <label key={testIndex}>\n                              <input\n                                className=\"form-control\"\n                                style={{ width: '10rem' }}\n                                type=\"file\"\n                                name=\"testInput\"\n                                onChange={(event) => handleFileInputChange(index, event)}\n                              />\n                            </label>\n                          )\n                        }\n                      }\n                      return null\n                    })}\n                  </div>\n                )}\n                <div className=\"col-md-2\">\n                  <label>\n                    <select\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                      name=\"scale\"\n                      value={input.scale}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Select Scale</option>\n                      {scales?.map((scale, scaleIndex) => (\n                        <option key={scaleIndex} value={scale}>\n                          {scale}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"col-md-2\">\n                  <label>\n                    <input\n                      className=\"form-control \"\n                      style={{ width: '10rem', appearance: 'auto' }}\n                      placeholder=\"Enter Scale Value\"\n                      type=\"text\"\n                      name=\"value\"\n                      value={input.value}\n                      onChange={(event) => handleInputChange(index, event)}\n                    />\n                  </label>\n                </div>\n                <div className=\"col-md-2 d-flex justify-content-center\">\n                  {removeAndAddInput && (\n                    <button\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                      onClick={() => handleRemoveInput(index)}\n                    >\n                      Remove\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div className=\"d-flex justify-content-end\">\n              <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n                Add More\n              </button>\n            </div>\n          </form>\n          <div>\n            <textarea\n              rows={4}\n              className=\"form-control col-12\"\n              placeholder=\"Notes (Optional)\"\n              name=\"desc\"\n              value={desc}\n              onChange={(e) => setDesc(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"d-flex mt-2\">\n            <div className=\"w-auto\">\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['DateTimePicker']}>\n                  <DateTimePicker\n                    label=\"Next Appointment Date\"\n                    value={startingDate}\n                    onChange={handleStartingDateChange}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </div>\n          </div>\n          <div className=\"text-end\">\n            <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger mt-4 ms-2\"\n              style={{ width: '10rem' }}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  return (\n    <div>\n      {patientSearch?.map((patient) => {\n        const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n        const isDetailsOpen = selectedPatientId === _id\n        const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n        const inputDate = nextApointmentDate\n\n        const date = new Date(inputDate)\n        const formattedDate = date\n          .toLocaleString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={_id} className=\"row\">\n            <div style={{ marginTop: '2rem' }}>\n              <div className=\"card\" style={{ width: '100%' }}>\n                <div className=\"card-body overflow-auto \">\n                  <h5 className=\"card-title\"> CR No : {crn}</h5>\n                  <h6 className=\"card-subtitle mt-2\">\n                    <h5>Name : {name}</h5>\n                  </h6>\n                  <div style={{ display: 'flex', marginTop: '1rem' }}>\n                    {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                    <span style={{ display: 'flex' }}>\n                      <h6>Phone No. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                    </span>\n                    <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                      <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                      <h6 style={{ fontWeight: 'normal' }}>\n                        {nextApointmentDate ? formattedDate : '-'}\n                      </h6>\n                    </span>\n                    {/* <p className=\"card-text\">Phone No. {phone}</p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Age : {age}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Sex : {sex}\n                    </p>\n                    <p className=\"card-text\" style={{ marginLeft: '3rem' }}>\n                      Next Appointment Date : {formattedDate}\n                    </p> */}\n                  </div>\n                  <div className=\"text-end\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => handleToggleDetails(_id)}\n                    >\n                      {/* {isDetails ? 'Close Details' : 'Show Details'} */}\n                      Show Diagnosis\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      style={{ marginLeft: '2rem' }}\n                      onClick={() => handleAddDiagnosis(_id)}\n                    >\n                      Add New Diagnosis\n                    </button>\n                  </div>\n                  {isDetailsOpen && isDetails && (\n                    <div>\n                      <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                    </div>\n                  )}\n                  {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                    <div>\n                      <PatientAddNewRecord\n                        _id={_id}\n                        getSearchByPatient={getSearchByPatient}\n                        setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                        setIsDetailed={setIsDetailed}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nexport default function Loader() {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '20vh',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        backgroundColor: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: '',\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n  // const [diagnosis, setDiagnosis] = useState([])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n  console.log('value date', startingDate)\n  useEffect(() => {\n    // Fetch problems from API\n    setSearch('')\n    fetchProblems()\n  }, [])\n\n  // const fetchProblems = async () => {\n  //   try {\n  //     const problems = await getFetch(`${API_URL}/api/problem/${patientRecord?.department_id?._id}`)\n  //     const problemFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'problem',\n  //     )\n  //     const testFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'test',\n  //     )\n  //     const scaleFilter = await problems?.data?.data[0]?.problemName.filter(\n  //       (item) => item.type === 'scale',\n  //     )\n  //     console.log('Gaurav', problemFilter)\n  //     setTests(testFilter)\n  //     setScales(scaleFilter)\n  //     setProblems(problemFilter)\n  //   } catch (error) {\n  //     console.error('Error fetching problems:', error)\n  //   }\n  // }\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  console.log('problems', problems)\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n      // getSearchByPatient()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async () => {\n    try {\n      let searchData = search || location?.state?.crn\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      console.log('searchData', data)\n      setPatientSearch(data?.data?.data)\n      setTimeout(() => {\n        setLoader(false)\n      }, 3000)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async () => {\n    // console.log('updatedFormData', inputs)\n\n    setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n\n    for (const data of inputs) {\n      if (data.test !== '' && data.testInput === '') {\n        toast.warning('Please give input for selected test')\n        return // Stop further execution\n      }\n      if (data.scale !== '' && data.value === '') {\n        toast.warning('Please give input for selected scale')\n        return // Stop further execution\n      }\n      console.log('data', data)\n    }\n    // toast.warning('Uploading Files and Reports')\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        // Use Promise.all to wait for all uploads to finish\n        inputs.map(async (data, index) => {\n          if (typeof data.testInput !== 'string') {\n            const file = data.testInput\n            const formData = new FormData()\n            formData.append('file', file)\n            const response = await postFetchFile(\n              `${API_URL}/api/user/uploadPatientReport`,\n              formData,\n            )\n            if (response) {\n              inputs[index].testInput = response?.fileName\n            }\n          }\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n      console.error('Error submitting data:', error)\n    }\n\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: inputs,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n\n    try {\n      // console.log('pre', updatedFormData)\\\n      const data = await postFetchData(`${API_URL}/api/patient/create`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n\n        setaddPatientLoader(true)\n        setData(false)\n        setTimeout(() => {\n          // toast.success('Patient Created Successfully')\n          setUpdateState(true)\n          setaddPatientLoader(false)\n          // setDiagnosis([])\n          setDesc('')\n          setStartingDate(null)\n          setInputs([{ problem: '', test: '', testInput: '', scale: '', value: '' }])\n        }, 2000)\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: '',\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message == 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      if (data.message == 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n        setfileUploadingSpinner(false) // Set loading to false in case of an error\n      }\n      console.log('data', data)\n      setSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n      setfileUploadingSpinner(false) // Set loading to false in case of an error\n\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  // const handleSubmit = async () => {\n  //   console.log(inputs)\n  // }\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  //////// new updates\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const [inputs, setInputs] = useState([\n    { problem: '', test: '', testInput: '', scale: '', value: '' },\n  ])\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n  const handleFileInputChange = (index, event) => {\n    const { name, files } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = files[0]\n    setInputs(updatedInputs)\n    console.log('Guarv', inputs)\n  }\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { problem: '', test: '', testInput: '', scale: '', value: '' }])\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs)\n  }, [inputs])\n\n  //// testing codes\n\n  ////////////////////////////////////////////////////////////////////\n  // let [file, setFile] = useState('')\n  // const submitHandler = async () => {\n  //   try {\n  //     const formData = new FormData()\n  //     formData.append('file', file)\n  //     const response = await postFetchFile(`${API_URL}/api/user/uploadPatientReport`, formData)\n  //     console.log('File uploaded successfullsdsy:', response)\n  //   } catch (error) {\n  //     console.error('Error uploading file:', error)\n  //   }\n  // }\n  // const handleFileChange = (event) => {\n  //   setFile(event.target.files[0])\n  // }\n\n  ///////////////////////////\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div className=\"d-flex\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  // autoComplete={false}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n\n                {/* </button> */}\n                <button\n                  className=\"btn btn-primary\"\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  <button\n                    className=\"btn btn-danger text-light\"\n                    style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : (\n                  ''\n                )}\n              </div>\n              <div>\n                <button\n                  style={{ marginLeft: '1rem', borderRadius: '5px' }}\n                  type=\"button\"\n                  onClick={() => setData(true)}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <>\n                {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n\n                <div className=\"content-to-be-blurred\">\n                  <div style={{ marginTop: '1rem' }}>\n                    <div>\n                      <hr />\n                      <h4>Patient Details</h4>\n\n                      <div>\n                        <div className=\"row\">\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Name <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control \"\n                                  name=\"name\"\n                                  value={formData.name}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, name: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Age <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  type=\"number\"\n                                  className=\"form-control \"\n                                  name=\"age\"\n                                  value={formData.age}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, age: e.target.value })\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-4\">\n                            <div>\n                              <label className=\"col-sm-4 mt-2 patientNamediv\">\n                                Sex <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <select\n                                  className=\"form-control \"\n                                  name=\"sex\"\n                                  value={formData.sex}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, sex: e.target.value })\n                                  }\n                                >\n                                  <option value=\"male\">Male</option>\n                                  <option value=\"female\">Female</option>\n                                  <option value=\"other\">Other</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row \">\n                          <div className=\"col-md-4 mt-4\">\n                            <div>\n                              <label className=\"col-lg-4 patientNamediv\">\n                                Phone No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\" col-lg-8 col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"text\"\n                                  name=\"phone\"\n                                  value={formData.phone}\n                                  onChange={(e) => {\n                                    if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                                      setFormData({ ...formData, phone: e.target.value })\n                                    }\n                                  }}\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className=\"col-md-4 mt-4\">\n                            <div>\n                              <label className=\"col-sm-4  patientNamediv\">\n                                CR No <span style={{ color: 'red' }}>*</span>\n                              </label>\n                              <div className=\"col-sm-8\">\n                                <input\n                                  className=\"form-control \"\n                                  type=\"test\"\n                                  name=\"crn\"\n                                  value={formData.crn}\n                                  onChange={(e) =>\n                                    setFormData({ ...formData, crn: e.target.value })\n                                  }\n                                  required={true}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr />\n                      <div style={{ margin: '1rem auto 1rem 0' }}>\n                        <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n                      </div>\n                      <div>\n                        <form className=\"mb-3\">\n                          {inputs.map((input, index) => (\n                            <div key={index} className=\"row mt-1 mb-2\">\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"problem\"\n                                    value={input.problem}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Chief complaint</option>\n                                    {problems.map((problem, problemIndex) => (\n                                      <option key={problemIndex} value={problem}>\n                                        {problem}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"test\"\n                                    value={input.test}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Test</option>\n                                    {tests.map((test, testIndex) => (\n                                      <option key={testIndex} value={test.name}>\n                                        {test.name}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              {input.test === '' ? (\n                                ''\n                              ) : (\n                                <div className=\"col-md-2\">\n                                  {tests.map((test, testIndex) => {\n                                    if (test.name === input.test) {\n                                      if (test.inputType === 'text') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '10rem' }}\n                                              placeholder=\"Enter test Value\"\n                                              type=\"text\"\n                                              name=\"testInput\"\n                                              value={input.testInput}\n                                              onChange={(event) => handleInputChange(index, event)}\n                                            />\n                                          </label>\n                                        )\n                                      } else if (test.inputType === 'file') {\n                                        return (\n                                          <label key={testIndex}>\n                                            <input\n                                              className=\"form-control\"\n                                              style={{ width: '10rem' }}\n                                              type=\"file\"\n                                              name=\"testInput\"\n                                              onChange={(event) =>\n                                                handleFileInputChange(index, event)\n                                              }\n                                            />\n                                          </label>\n                                        )\n                                      }\n                                    }\n                                    return null\n                                  })}\n                                </div>\n                              )}\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <select\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto', height: '38px' }}\n                                    name=\"scale\"\n                                    value={input.scale}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  >\n                                    <option value=\"\">Select Scale</option>\n                                    {scales.map((scale, scaleIndex) => (\n                                      <option key={scaleIndex} value={scale}>\n                                        {scale}\n                                      </option>\n                                    ))}\n                                  </select>\n                                </label>\n                              </div>\n                              <div className=\"col-md-2\">\n                                <label>\n                                  <input\n                                    className=\"form-control \"\n                                    style={{ width: '10rem', appearance: 'auto' }}\n                                    placeholder=\"Enter Scale Value\"\n                                    type=\"text\"\n                                    name=\"value\"\n                                    value={input.value}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 d-flex justify-content-center\">\n                                {removeAndAddInput && (\n                                  <button\n                                    className=\"btn btn-danger\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveInput(index)}\n                                  >\n                                    Remove\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                          <div className=\"d-flex justify-content-end\">\n                            <button\n                              className=\"btn btn-primary me-4\"\n                              type=\"button\"\n                              onClick={handleAddInput}\n                            >\n                              Add More\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                      <div>\n                        <textarea\n                          rows={4}\n                          className=\"form-control col-12\"\n                          placeholder=\"Notes (Optional)\"\n                          name=\"desc\"\n                          value={desc}\n                          onChange={(e) => setDesc(e.target.value)}\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"d-flex mt-2\">\n                        <div className=\"w-auto\">\n                          <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={['DateTimePicker']}>\n                              <DateTimePicker\n                                label=\"Next Appointment Date\"\n                                value={startingDate}\n                                onChange={handleStartingDateChange}\n                                // ampm={false}\n                              />\n                            </DemoContainer>\n                          </LocalizationProvider>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-end m-4\">\n                      <button className=\"btn btn-info mt-3 mx-2 w-auto\" onClick={handleSubmit}>\n                        Submit\n                      </button>\n                      <button className=\"btn btn-info mt-3 w-auto\" onClick={() => setData(false)}>\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '20vh',\n                      lineHeight: '20vh',\n                      textAlign: 'center',\n                      backgroundColor: 'white',\n                      marginTop: '10px',\n                    }}\n                  >\n                    {loader ? <Loader /> : 'No Data'}\n                  </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n    // <>\n    //   <h1>Gaurav</h1>\n    //   <input type=\"file\" onChange={handleFileChange}></input>\n    //   <button onClick={submitHandler}>submit</button>\n    // </>\n  )\n}\n\nexport default PatientPage\n"],"names":["_ref","diagnosis","desc","reversedDiagnosis","setReversedDiagnosis","useState","requestedFileLoading","setRequestedFileLoading","useEffect","Array","isArray","reverse","isFile","value","test","_jsx","style","maxHeight","overflowY","overflowX","marginTop","children","map","elem","index","_elem$diagnosData","date","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","_Fragment","_jsxs","className","margin","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","innerIndex","problem","scale","testInput","fontWeight","onClick","async","filename","prvState","response","axios","get","concat","process","responseType","blob","Blob","data","type","headers","blobUrl","URL","createObjectURL","window","open","error","console","showReportHandler","disabled","padding","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","fileUploadingSpinner","setfileUploadingSpinner","problems","setProblems","tests","setTests","scales","setScales","fetchProblems","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","name","scaleFilter","testFilter","_ref2","inputType","prevFormData","log","getPatientById","removeAndAddInput","setremoveAndAddInput","inputs","setInputs","handleInputChange","event","target","updatedInputs","handleAddInput","handleRemoveInput","splice","length","SpinnerOverlay","loading","departmentName","onSubmit","e","preventDefault","toast","warning","Promise","all","file","FormData","append","postFetchFile","fileName","updatedFormData","nextApointmentDate","putFetchData","success","autoClose","setTimeout","input","appearance","height","onChange","problemIndex","testIndex","placeholder","handleFileInputChange","files","scaleIndex","rows","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","ToastContainer","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","display","marginLeft","handleToggleDetails","patientId","prevState","handleAddDiagnosis","PatientShowDetails","PatientAddNewRecord","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","theme","_extends","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","inProps","ref","useThemeProps","size","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","role","viewBox","cx","cy","r","fill","strokeWidth","defaultTheme","createTheme","Box","options","arguments","undefined","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","useTheme","_extendSxProp","extendSxProp","component","as","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate","Loader","lineHeight","textAlign","backgroundColor","CircularProgress","AddPatientLoader","PatientPage","_location$state","location","useLocation","Number","state","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","setData","search","setSearch","setPatientSearch","doctor_id","_location$state2","_data$data","searchData","dateAndTime","setDateAndTime","_location$state3","_location$state4","justifyContent","paddingLeft","onKeyPress","key","clearSearch","required","_data$data2","postFetchData","message","PatientInfoData"],"sourceRoot":""}