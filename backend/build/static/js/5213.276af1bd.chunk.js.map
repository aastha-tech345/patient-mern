{"version":3,"file":"static/js/5213.276af1bd.chunk.js","mappings":"iOACO,MAAMA,EAAWC,UACtB,IACE,MAAMC,EAAQC,aAAaC,QAAQ,SAWnC,aAVuBC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,GAADC,OAAKD,GACRE,QAAS,CACPC,cAAc,UAADF,OAAYN,GACzB,eAAgB,qBAOtB,CAAE,MAAOS,GAEP,OADAC,QAAQC,IAAIF,GACLA,CACT,GAuGWG,EAAgBb,MAAOM,EAAKQ,KACvC,IAOE,aANuBV,EAAAA,EAAMW,KAAKT,EAAKQ,EAAM,CAC3CN,QAAS,CACP,eAAgB,0BAIJM,IAIlB,CAAE,MAAOJ,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtCA,CACR,GAyEWM,EAAehB,MAAOM,EAAKQ,KACtC,IACE,MAAMb,EAAQC,aAAaC,QAAQ,SAC7Bc,QAAiBb,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,GAADC,OAAKD,GACRE,QAAS,CACPC,cAAc,UAADF,OAAYN,GACzB,eAAgB,oBAElBa,SAGF,GAAIG,EACF,OAAOA,CAEX,CAAE,MAAOP,GAAQ,IAADQ,EACd,OAAgC,OAAvB,OAALR,QAAK,IAALA,GAAe,QAAVQ,EAALR,EAAOO,gBAAQ,IAAAC,OAAV,EAALA,EAAiBC,QACZ,IAEAT,EAAMO,QAEjB,GAwBWG,EAAgBpB,MAAOM,EAAKQ,KACvC,IACE,MAAMb,EAAQC,aAAaC,QAAQ,SAC7Bc,QAAiBb,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,OACRC,IAAI,GAADC,OAAKD,GACRE,QAAS,CACPC,cAAc,UAADF,OAAYN,GACzB,eAAgB,oBAElBa,SAGF,GAAIG,EACF,OAAe,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUH,IAErB,CAAE,MAAOJ,GAAQ,IAADW,EACd,OAAgC,OAAvB,OAALX,QAAK,IAALA,GAAe,QAAVW,EAALX,EAAOO,gBAAQ,IAAAI,OAAV,EAALA,EAAiBF,QACZ,IAEAT,CAEX,E,sLC9PF,MA0JA,EA1JiBY,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAUC,4BACTC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCf,EAAMgB,GAAWC,EAAAA,SAAe,CACrCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,cAAe,MAEVC,EAASC,IAAcR,EAAAA,EAAAA,WAAS,GAEjCS,EAAgBC,IACpB,MAAM,KAAEP,EAAI,MAAEQ,GAAUD,EAAEE,OAC1BX,EAAQ,IAAKhB,EAAM,CAACkB,GAAOQ,GAAQ,EAiDrC,OAHAE,EAAAA,EAAAA,YAAU,KAdgB1C,WACxB,IACE,MAAM2C,QAAY5C,EAAAA,EAAAA,IAAS,GAADQ,OAAIkB,EAAO,qBACrCd,QAAQC,IAAI,MAAO+B,EAAI7B,KAAKA,MAC5Bc,EAAce,EAAI7B,KAAKA,KACzB,CAAE,MAAOJ,GACPC,QAAQC,IAAI,QACd,GAQAgC,EAAmB,GAClB,KAEDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,CACpEX,GAAUY,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,QAAQ,eAAkB,IACrDF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAAAJ,UACTC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACN,UAAU,yBAAwBC,UACtCC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAET,UACxBC,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACX,UAAU,OAAMC,UACrBC,EAAAA,EAAAA,KAACU,EAAAA,GAAS,CAACZ,UAAU,MAAKC,UACxBF,EAAAA,EAAAA,MAACc,EAAAA,GAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,uBAAsBC,SAAC,yBACpCF,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACd,UAAU,OAAMC,SAAA,EAC3BC,EAAAA,EAAAA,KAACa,EAAAA,GAAe,CAAAd,UACdC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,KAAMC,EAAAA,OAEfhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,YAAY,WACZC,aAAa,WACbnC,KAAK,OACLQ,MAAO1B,EAAKkB,KACZoC,SAAU9B,QAGdO,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACd,UAAU,OAAMC,SAAA,EAC3BC,EAAAA,EAAAA,KAACa,EAAAA,GAAe,CAAAd,SAAC,OACjBC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTC,YAAY,QACZC,aAAa,QACbnC,KAAK,QACLQ,MAAO1B,EAAKmB,MACZmC,SAAU9B,QAGdO,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACd,UAAU,OAAMC,SAAA,EAC3BC,EAAAA,EAAAA,KAACa,EAAAA,GAAe,CAAAd,UACdC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,KAAMM,EAAAA,OAEfrB,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACTK,KAAK,WACLJ,YAAY,WACZC,aAAa,eACbnC,KAAK,WACLQ,MAAO1B,EAAKoB,SACZkC,SAAU9B,QAIdO,EAAAA,EAAAA,MAACe,EAAAA,GAAW,CAACd,UAAU,OAAMC,SAAA,EAC3BC,EAAAA,EAAAA,KAACa,EAAAA,GAAe,CAAAd,UACdC,EAAAA,EAAAA,KAACuB,EAAAA,IAAa,OAEhB1B,EAAAA,EAAAA,MAAA,UACEC,UAAU,cACVd,KAAK,gBACLQ,MAAO1B,EAAKqB,cACZiC,SAAU9B,EAAaS,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQR,MAAM,GAAEO,SAAC,sBACN,OAAVpB,QAAU,IAAVA,OAAU,EAAVA,EAAY6C,KAAKC,IAEdzB,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,CAAA3B,UACEC,EAAAA,EAAAA,KAAA,UAAQR,MAAW,OAAJiC,QAAI,IAAJA,OAAI,EAAJA,EAAME,IAAI5B,SAAM,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMG,4BAM3C5B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAACC,MAAM,UAAUC,QAlHtB/E,UACnB,IAAK,IAADgF,EAAAC,EAAAC,EAAAC,EACF9C,GAAW,GACXE,EAAE6C,iBACFzE,QAAQC,IAAI,OAAQE,GACpB,MAAM6B,QAAYvB,EAAAA,EAAAA,IAAc,GAADb,OAAIkB,EAAO,oBAAoBX,GAGjB,IAADuE,EAAAC,EAA5C,GAFA3E,QAAQC,IAAI,gBAAoB,OAAH+B,QAAG,IAAHA,GAAa,QAAVqC,EAAHrC,EAAK1B,gBAAQ,IAAA+D,GAAM,QAANC,EAAbD,EAAelE,YAAI,IAAAmE,OAAhB,EAAHA,EAAqBM,UAEb,KAA9B,OAAH5C,QAAG,IAAHA,GAAa,QAAVuC,EAAHvC,EAAK1B,gBAAQ,IAAAiE,GAAM,QAANC,EAAbD,EAAepE,YAAI,IAAAqE,OAAhB,EAAHA,EAAqBI,SAEvB,OADAlD,GAAW,GACJmD,EAAAA,GAAMC,QAAW,OAAH9C,QAAG,IAAHA,GAAa,QAAV0C,EAAH1C,EAAK1B,gBAAQ,IAAAoE,GAAM,QAANC,EAAbD,EAAevE,YAAI,IAAAwE,OAAhB,EAAHA,EAAqBpC,UAGxB,IAAhBP,EAAI4C,SACNC,EAAAA,GAAMD,QAAQ,+BACdG,YAAW,KACTrD,GAAW,GACXd,EAAS,IAAI,GACZ,OAEHc,GAAW,GACXmD,EAAAA,GAAMC,QAAQ,wBAElB,CAAE,MAAO/E,GACP2B,GAAW,GACX1B,QAAQC,IAAIF,EACd,GAwF+DqC,SAAC,sBAIlDC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,KAAG8C,MAAO,CAAEC,QAAS,OAAQC,UAAW,QAAS9C,SAAA,CAAC,yBAEhDC,EAAAA,EAAAA,KAAA,KAAG2C,MAAO,CAAEG,OAAQ,UAAWhB,MAAO,QAAUC,QAlF5CgB,KACtBxE,EAAS,IAAI,EAiF8EwB,SAAC,8BAW1FC,EAAAA,EAAAA,KAACgD,EAAAA,GAAc,MACX,C,sEC1KV,MAYMC,EAAgB7D,IAAO,CAC3B8D,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,2BACjBX,QAASxD,EAAU,OAAS,OAC5BoE,eAAgB,SAChBC,WAAY,SACZC,OAAQ,OAGV,EAzBwBtE,IACtB,MAAMc,EAAUd,EAAQc,QACxB,OACEF,EAAAA,EAAAA,KAAA,OAAK2C,MAAOM,EAAa7D,GAASW,UAChCF,EAAAA,EAAAA,MAAA,OAAK8C,MAAO,CAAEC,QAAS,OAAQe,cAAe,SAAUF,WAAY,UAAW1D,SAAA,EAC7EC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CAACxE,QAASA,EAAS0C,MAAM,YAClC5B,GAAUF,EAAAA,EAAAA,KAAA,KAAG2C,MAAO,CAAEkB,OAAQ,QAAS9D,SAAEG,IAAe,OAEvD,C","sources":["api/Api.js","views/pages/register/Register.js","views/publicItems/ SpinnerOverlay.js"],"sourcesContent":["import axios from 'axios'\nexport const getFetch = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'get',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    // if (response.status === 200) {\n    return response\n    // }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getFetchByLimit = async (url, limit, page) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${limit}/${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getOneFetch = async (url, id) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    if (error?.response?.status === 401) {\n      return 401\n    }\n    return error\n  }\n}\n\nexport const postFetch = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\nexport const postFetchUser = async (url, data) => {\n  try {\n    // const token = localStorage.getItem(\"token\")\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n      data,\n      //   withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nexport const postFetchContent = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const postFetchFile = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const patchFetch = async (url, id, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'patch',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error?.response\n    }\n  }\n}\nexport const putFetch = async (url, data) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchById = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchData = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const deleteFetch = async (url, id) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'delete',\n      url: `${url}/${id}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    }\n  }\n}\n\nexport const postFetchData = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response?.data\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error\n    }\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\n\nimport { BiChevronDown } from 'react-icons/bi' // Assuming you have BiChevronDown from react-icons for dropdown icon\nimport { getFetch, postFetchData } from 'src/api/Api'\nimport { useNavigate } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport { faL, faLaptopHouse } from '@fortawesome/free-solid-svg-icons'\n\nconst Register = () => {\n  const navigate = useNavigate()\n  const API_URL = process.env.REACT_APP_API_URL\n  const [department, setDepartment] = useState([])\n  const [data, setData] = React.useState({\n    name: '',\n    email: '',\n    password: '',\n    department_id: '',\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const handleSubmit = async (e) => {\n    try {\n      setLoading(true)\n      e.preventDefault()\n      console.log('data', data)\n      const res = await postFetchData(`${API_URL}/api/user/create`, data)\n      console.log('user creation', res?.response?.data?.success)\n\n      if (res?.response?.data?.success === false) {\n        setLoading(false)\n        return toast.warning(res?.response?.data?.message)\n      }\n\n      if (res.success === true) {\n        toast.success('Doctor Created Successfully')\n        setTimeout(() => {\n          setLoading(false)\n          navigate('/')\n        }, 2000)\n      } else {\n        setLoading(false)\n        toast.warning('Something went wrong')\n      }\n    } catch (error) {\n      setLoading(false)\n      console.log(error)\n    }\n  }\n\n  const getAllDepartments = async () => {\n    try {\n      const res = await getFetch(`${API_URL}/api/department/`)\n      console.log('res', res.data.data)\n      setDepartment(res.data.data)\n    } catch (error) {\n      console.log('error')\n    }\n  }\n\n  const nevigateToLogin = () => {\n    navigate('/')\n  }\n\n  useEffect(() => {\n    getAllDepartments()\n  }, [])\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      {loading ? <SpinnerOverlay message=\"Loading...\" /> : ''}\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-medium-emphasis\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Username\"\n                      autoComplete=\"username\"\n                      name=\"name\"\n                      value={data.name}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      name=\"email\"\n                      value={data.email}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      name=\"password\"\n                      value={data.password}\n                      onChange={handleChange}\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <BiChevronDown />\n                    </CInputGroupText>\n                    <select\n                      className=\"form-select\"\n                      name=\"department_id\"\n                      value={data.department_id}\n                      onChange={handleChange}\n                    >\n                      <option value=\"\">Select Department</option>\n                      {department?.map((elem) => {\n                        return (\n                          <>\n                            <option value={elem?._id}>{elem?.departmentName}</option>\n                          </>\n                        )\n                      })}\n                    </select>\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" onClick={handleSubmit}>\n                      Create Account\n                    </CButton>\n                  </div>\n                  <div>\n                    <p style={{ display: 'flex', marginTop: '1rem' }}>\n                      To Loggin Click! &nbsp;\n                      <p style={{ cursor: 'pointer', color: 'blue' }} onClick={nevigateToLogin}>\n                        Signin\n                      </p>\n                    </p>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default Register\n","// SpinnerOverlay.js\nimport React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst SpinnerOverlay = (loading) => {\n  const message = loading.message\n  return (\n    <div style={overlayStyle(loading)}>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <BarLoader loading={loading} color=\"#36D7B7\" />\n        {message ? <p style={{ margin: 'auto' }}>{message}</p> : ''}\n      </div>\n    </div>\n  )\n}\n\nconst overlayStyle = (loading) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  display: loading ? 'flex' : 'none',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 9999,\n})\n\nexport default SpinnerOverlay\n"],"names":["getFetch","async","token","localStorage","getItem","axios","method","url","concat","headers","Authorization","error","console","log","postFetchFile","data","post","putFetchData","response","_error$response3","status","postFetchData","_error$response5","Register","navigate","useNavigate","API_URL","process","department","setDepartment","useState","setData","React","name","email","password","department_id","loading","setLoading","handleChange","e","value","target","useEffect","res","getAllDepartments","_jsxs","className","children","_jsx","SpinnerOverlay","message","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","onChange","cilLockLocked","type","BiChevronDown","map","elem","_Fragment","_id","departmentName","CButton","color","onClick","_res$response","_res$response$data","_res$response2","_res$response2$data","preventDefault","_res$response3","_res$response3$data","success","toast","warning","setTimeout","style","display","marginTop","cursor","nevigateToLogin","ToastContainer","overlayStyle","position","top","left","width","height","backgroundColor","justifyContent","alignItems","zIndex","flexDirection","BarLoader","margin"],"sourceRoot":""}