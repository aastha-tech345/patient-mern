{"version":3,"file":"static/js/6897.fa4b76e1.chunk.js","mappings":"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","sources":["api/Api.js","views/pages/report/PatientReport.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js","views/pages/login/Login.js"],"sourcesContent":["import axios from 'axios'\nexport const getFetch = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'get',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    // if (response.status === 200) {\n    return response\n    // }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getFetchByLimit = async (url, limit, page) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${limit}/${page}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    return error\n  }\n}\nexport const getOneFetch = async (url, id) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'GET',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return await response?.data\n    }\n  } catch (error) {\n    console.log(error)\n    if (error?.response?.status === 401) {\n      return 401\n    }\n    return error\n  }\n}\n\nexport const postFetch = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\nexport const postFetchUser = async (url, data) => {\n  try {\n    // const token = localStorage.getItem(\"token\")\n    const response = await axios({\n      method: 'post',\n      url,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data',\n      },\n      data,\n      //   withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nexport const postFetchContent = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const postFetchFile = async (url, data) => {\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    // if (response.status >= 200 && response.status < 300) {\n    return response.data\n    // } else {\n    //   throw new Error(`Request failed with status ${response.status}`)\n    // }\n  } catch (error) {\n    console.error('Error in postFetchContent:', error)\n    throw error\n  }\n}\n\nexport const patchFetch = async (url, id, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'patch',\n      url: `${url}/${id}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      data,\n      withCredentials: true,\n    })\n    if (response?.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error?.response\n    }\n  }\n}\nexport const putFetch = async (url, data) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchById = async (url) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const putFetchData = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'put',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error.response\n    }\n  }\n}\nexport const deleteFetch = async (url, id) => {\n  try {\n    // const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'delete',\n      url: `${url}/${id}`,\n      headers: {\n        // Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      // withCredentials: true,\n    })\n    if (response.status === 200) {\n      return response\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    }\n  }\n}\n\nexport const postFetchData = async (url, data) => {\n  try {\n    const token = localStorage.getItem('token')\n    const response = await axios({\n      method: 'post',\n      url: `${url}`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n      data,\n      // withCredentials: true,\n    })\n    if (response) {\n      return response?.data\n    }\n  } catch (error) {\n    if (error?.response?.status === 401) {\n      return 401\n    } else {\n      return error\n    }\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { getFetch } from 'src/api/Api'\nimport { Divider, Radio, Table } from 'antd'\nimport { useNavigate } from 'react-router-dom'\nimport { Pagination, Stack } from '@mui/material'\n// import { LocalizationProvider } from '@mui/x-date-pickers'\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo'\n// import DateTimePicker from 'react-datetime-picker'\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\n\n// import WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport dayjs from 'dayjs'\nimport { DateTimePicker } from '@mui/x-date-pickers'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nconst PatientReport = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n\n  const navigate = useNavigate()\n  const [updateState, setUpdateState] = useState(false)\n  const [problemSet, setProblemSet] = useState('')\n  const [pageCount, setPageCount] = useState(1)\n  const [page, setPage] = useState(1)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [patientProblems, setPatientProblems] = useState([])\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map((test) => test.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n  console.log('problem', problems)\n\n  const handlSetPoblem = (elem) => {\n    setProblemSet(elem)\n  }\n\n  const getPatientByProblem = async () => {\n    try {\n      console.log('ashish', problemSet)\n      if (problemSet?.length === 0) {\n        return\n      }\n      const res = await getFetch(\n        `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&page=${page}`,\n      )\n      console.log('response', res)\n      setPageCount(res?.data?.pageCount)\n      setPatientProblems(res.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const columns = [\n    {\n      title: 'CR no',\n      dataIndex: 'crn',\n    },\n    // {\n    //   title: 'Phone no',\n    //   dataIndex: 'phone',\n    //   render: (text) => <a>{text}</a>,\n    // },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (text) => <a>{text}</a>,\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      sorter: (a, b) => a.age - b.age,\n    },\n    {\n      title: 'Sex',\n      dataIndex: 'sex',\n      sorter: (a, b) => a.sex.localeCompare(b.sex),\n    },\n    // {\n    //   title: 'Appointment',\n    //   dataIndex: 'nextApointmentDate',\n    //   render: (text) => {\n    //     const date = new Date(text)\n    //     const formattedDate = date\n    //       .toLocaleString('en-IN', {\n    //         year: 'numeric',\n    //         month: '2-digit',\n    //         day: '2-digit',\n    //         hour: '2-digit',\n    //         minute: '2-digit',\n    //         hour12: true,\n    //       })\n    //       .replace(/\\//g, '/')\n    //     return formattedDate\n    //   },\n    //   sorter: (a, b) => a.nextApointmentDate.localeCompare(b.nextApointmentDate),\n    // },\n    {\n      title: 'Action',\n      // dataIndex: 'sex',\n      render: (text) => {\n        console.log('text', text)\n        return (\n          <button\n            className=\"btn btn-primary\"\n            onClick={(e) => navigate('/patientPage', { state: text })}\n          >\n            View Diagnosis\n          </button>\n        )\n      },\n    },\n  ]\n  const todayDate = dayjs()\n  const [startingDate, setStartingDate] = useState(todayDate)\n  const [endDate, setEndDate] = useState(todayDate)\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n\n  const handleStartingDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('Stating date not be in the future')\n      return setStartingDate(todayDate)\n    }\n    setStartingDate(date)\n  }\n  const handleEndDateChange = (date) => {\n    if (date > new Date()) {\n      toast.warning('End date not be in the future')\n      return setEndDate(todayDate)\n    }\n    setEndDate(date)\n  }\n\n  const dateSubmit = async () => {\n    if (endDate.isBefore(startingDate, 'day')) {\n      toast.warning('End date cannot be earlier than start date')\n      return\n    }\n    const date = new Date(startingDate)\n    const date1 = new Date(endDate)\n    // const formattedStartDate = date.toISOString().split('T')[0] + 'T00:00:00.000Z'\n    // const formattedEndDate = date1.toISOString().split('T')[0] + 'T00:00:00.000Z'\n    console.log(date, date1)\n\n    const res = await getFetch(\n      `${API_URL}/api/patient/problems?problem=${problemSet}&doctor_id=${patientRecord._id}&startDate=${date}&endDate=${date1}&page=${page}`,\n    )\n    console.log('ashdata', res)\n    setPageCount(res?.data?.pageCount)\n    setPatientProblems(res?.data?.data)\n  }\n\n  const dateReset = () => {\n    setStartingDate(todayDate)\n    setEndDate(todayDate)\n    setUpdateState(!updateState)\n    setProblemSet('Select Problem')\n  }\n\n  // useEffect(() => {\n  //   getPatientByProblem()\n  // }, [page, problemSet])\n\n  useEffect(() => {\n    if (problemSet.length) {\n      dateSubmit()\n    }\n  }, [page, updateState])\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-3 mt-2\">\n          <select\n            onChange={(e) => handlSetPoblem(e.target.value)}\n            className=\"form-control\"\n            style={{ appearance: 'auto', height: '50px', width: '100%' }}\n            value={problemSet}\n          >\n            <option>Chief Complaint</option>\n            {problems.map((elem) => {\n              return (\n                <>\n                  <option key={elem} value={elem}>\n                    {elem}\n                  </option>\n                </>\n              )\n            })}\n          </select>\n        </div>\n\n        {/* date filed start */}\n        <div className=\"col-sm-9\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"From\"\n                      value={startingDate}\n                      onChange={handleStartingDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // sx={{ width: '100px' }}\n                      // className=\"w-50\"\n                      // className=\"w-auto\"\n                      style={{ overflowX: 'hidden !important' }}\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n            <div className=\"col-sm-5\">\n              {' '}\n              <div>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DemoContainer components={['DateTimePicker']}>\n                    <DateTimePicker\n                      label=\"To\"\n                      value={endDate}\n                      onChange={handleEndDateChange}\n                      inputFormat=\"YYYY-MM-DD\"\n                      ampm={false}\n                      ampmInClock={false}\n                      views={['year', 'month', 'day']}\n                      // className=\"w-50\"\n                    />\n                  </DemoContainer>\n                </LocalizationProvider>\n              </div>\n            </div>\n          </div>\n          <div style={{ textAlign: '-webkit-right', paddingRight: '101px' }}>\n            <div className=\"col-sm-2 d-flex  mb-3\">\n              <button className=\"btn btn-primary mt-3 me-2\" onClick={dateSubmit}>\n                Search\n              </button>\n              <button className=\"btn btn-primary mt-3 \" onClick={dateReset}>\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* date filed end */}\n      </div>\n      <div className=\"mt-2 table-responsive\">\n        <Table\n          // rowSelection={{\n          //   type: selectionType,\n          //   ...rowSelection,\n          // }}\n          columns={columns}\n          dataSource={patientProblems}\n          pagination={false}\n          className=\"table-responsive\"\n        />\n      </div>\n      <div className=\"d-flex justify-content-end mt-2\">\n        <Stack spacing={2}>\n          <Pagination count={pageCount} page={page} onChange={handlePageChange} />\n        </Stack>\n      </div>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientReport\n","import React from 'react'\n// import PatientContainer from './views/pages/patient/PatientContainer'\nimport Login from './views/pages/login/Login'\nimport Report from './views/pages/report/PatientReport'\nimport PatientReport from './views/pages/report/PatientReport'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\nconst PatientPage = React.lazy(() => import('./views/pages/patient/PatientPage'))\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n// patientPage\nconst auth = localStorage.getItem('token')\nlet routes\nif (auth) {\n  routes = [\n    { path: '/', exact: true, name: 'Home' },\n\n    { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n    { path: '/patientPage', name: 'Patient', element: PatientPage },\n    { path: '/report', name: 'Report', element: PatientReport },\n    { path: '/theme', name: 'Theme', element: Colors, exact: true },\n    { path: '/theme/colors', name: 'Colors', element: Colors },\n    { path: '/theme/typography', name: 'Typography', element: Typography },\n    { path: '/base', name: 'Base', element: Cards, exact: true },\n    { path: '/base/accordion', name: 'Accordion', element: Accordion },\n    { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n    { path: '/base/cards', name: 'Cards', element: Cards },\n    { path: '/base/carousels', name: 'Carousel', element: Carousels },\n    { path: '/base/collapses', name: 'Collapse', element: Collapses },\n    { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n    { path: '/base/navs', name: 'Navs', element: Navs },\n    { path: '/base/paginations', name: 'Paginations', element: Paginations },\n    { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n    { path: '/base/popovers', name: 'Popovers', element: Popovers },\n    { path: '/base/progress', name: 'Progress', element: Progress },\n    { path: '/base/spinners', name: 'Spinners', element: Spinners },\n    { path: '/base/tables', name: 'Tables', element: Tables },\n    { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n    { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n    { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n    { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n    { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n    { path: '/charts', name: 'Charts', element: Charts },\n    { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n    { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n    { path: '/forms/select', name: 'Select', element: Select },\n    { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n    { path: '/forms/range', name: 'Range', element: Range },\n    { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n    { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n    { path: '/forms/layout', name: 'Layout', element: Layout },\n    { path: '/forms/validation', name: 'Validation', element: Validation },\n    { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n    { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n    { path: '/icons/flags', name: 'Flags', element: Flags },\n    { path: '/icons/brands', name: 'Brands', element: Brands },\n    { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n    { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n    { path: '/notifications/badges', name: 'Badges', element: Badges },\n    { path: '/notifications/modals', name: 'Modals', element: Modals },\n    { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n    { path: '/widgets', name: 'Widgets', element: Widgets },\n  ]\n} else {\n  routes = [\n    {\n      path: '/login',\n      element: Login,\n    },\n  ]\n}\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar8 from './../../assets/images/avatars/8.jpg'\n\nconst AppHeaderDropdown = () => {\n  const logoutHandler = () => {\n    // console.log('logot')\n    localStorage.removeItem('token')\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        <CDropdownItem onClick={() => logoutHandler()} href=\"/\">\n          <CIcon className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand> */}\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <h4>Patient Care</h4>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      {/* <CHeaderDivider /> */}\n      {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n  },\n  {\n    component: CNavItem,\n    name: 'Patients',\n    to: '/patientPage',\n  },\n  {\n    component: CNavItem,\n    name: 'Report',\n    to: '/report',\n  },\n  // {\n  //   component: CNavItem,\n  //   name: 'Login',\n  //   to: '/login',\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Theme',\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Docs',\n  //   href: 'https://coreui.io/react/docs/templates/installation/',\n  //   icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  // },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} /> */}\n        <div>\n          <h4>Patient Care</h4>\n        </div>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      {/* <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      /> */}\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        {/* <AppFooter /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { postFetchData } from 'src/api/Api'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { faL } from '@fortawesome/free-solid-svg-icons'\n// import { API_URL } from 'src/constant'\nconst Login = () => {\n  let API_URL = process.env.REACT_APP_API_URL\n  const navigate = useNavigate()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setData({ ...data, [name]: value })\n  }\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault()\n      const dataa = await postFetchData(`${API_URL}/api/user/login`, data)\n      console.log('data', dataa)\n      if (dataa.success == true) {\n        toast.success('Login successfully')\n\n        localStorage.setItem('token', dataa.token)\n        localStorage.setItem('patientRecord', JSON.stringify(dataa?.user))\n        setTimeout(() => {\n          window.location.reload()\n        }, 1000)\n        // window.location.reload()\n      }\n\n      if (dataa?.response?.data?.success === false) {\n        toast.warning('Invalid Credentials')\n      }\n      // console.log(data)\n    } catch (error) {\n      toast.warning('Something went wrong')\n      console.log(error)\n    }\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={5}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h2>Login</h2>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Email\"\n                        autoComplete=\"email\"\n                        name=\"email\"\n                        value={data.email}\n                        onChange={handleChange}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        name=\"password\"\n                        value={data.password}\n                        onChange={handleChange}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={12} style={{ textAlign: 'center' }}>\n                        <CButton color=\"primary\" className=\"px-5\" onClick={handleSubmit}>\n                          Login\n                        </CButton>\n                      </CCol>\n                      {/* <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol> */}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              {/* <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["getFetch","async","token","localStorage","getItem","axios","method","url","concat","headers","Authorization","error","console","log","postFetchFile","data","post","putFetchData","response","_error$response3","status","postFetchData","_error$response5","PatientReport","API_URL","process","patientData","patientRecord","JSON","parse","navigate","useNavigate","updateState","setUpdateState","useState","problemSet","setProblemSet","pageCount","setPageCount","page","setPage","problems","setProblems","tests","setTests","scales","setScales","patientProblems","setPatientProblems","columns","title","dataIndex","render","text","_jsx","children","sorter","a","b","name","localeCompare","age","sex","className","onClick","e","state","todayDate","dayjs","startingDate","setStartingDate","endDate","setEndDate","dateSubmit","_res$data2","_res$data3","isBefore","toast","warning","date","Date","date1","res","_id","useEffect","length","_patientRecord$depart","_problemsResponse$dat","problemsResponse","department_id","problemsData","problemFilter","problemName","filter","item","type","map","problem","testFilter","test","scaleFilter","scale","fetchProblems","_jsxs","_Fragment","onChange","handlSetPoblem","elem","target","value","style","appearance","height","width","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","inputFormat","ampm","ampmInClock","views","overflowX","textAlign","paddingRight","dateReset","Table","dataSource","pagination","Stack","spacing","Pagination","count","handlePageChange","event","ToastContainer","Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Toasts","PatientPage","Widgets","routes","path","exact","element","Login","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","route","idx","Route","Navigate","to","replace","AppHeaderDropdown","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar8","size","CDropdownMenu","CDropdownHeader","CDropdownItem","removeItem","href","CIcon","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","icon","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","cilBell","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","CBadge","navItem","index","rest","Component","_createElement","key","navGroup","_item$items","String","toggler","visible","pathname","startsWith","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","CSidebarNav","SimpleBar","navigation","DocsCallout","props","content","plural","slice","_href","CCallout","CLink","DocsLink","rel","DocsExample","CNav","active","cilMediaPlay","cilCode","CTabContent","CTabPane","DefaultLayout","setData","email","password","handleChange","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","cilUser","CFormInput","placeholder","autoComplete","cilLockLocked","xs","CButton","_dataa$response","_dataa$response$data","preventDefault","dataa","success","setItem","stringify","user","setTimeout","window","reload"],"sourceRoot":""}