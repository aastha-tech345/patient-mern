{"version":3,"file":"static/js/2214.c84fa008.chunk.js","mappings":"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","sources":["views/pages/patient/PatientShowDetails.jsx","views/pages/patient/PatientAddNewRecord.jsx","views/pages/patient/PatientInfoData.jsx","views/pages/loader/AddPatientLoader.jsx","views/pages/patient/AddNewPatient.jsx","views/pages/patient/PatientPage.jsx","../node_modules/@coreui/icons/src/free/cil-minus.ts","../node_modules/@coreui/icons/src/free/cil-plus.ts","../node_modules/@coreui/icons/src/free/cil-trash.ts"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport CIcon from '@coreui/icons-react'\nimport { cilDataTransferDown, cilPlus } from '@coreui/icons'\nimport { ToastContainer, toast } from 'react-toastify'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport { CButton } from '@coreui/react'\n\nconst PatientShowDetails = ({ diagnosis }) => {\n  // console.log('Guarva', diagnosis)\n  const [reversedDiagnosis, setReversedDiagnosis] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [requestedFileLoading, setRequestedFileLoading] = useState({})\n  // const [selectedFile, setSelectedFile] = useState(Array(diagnosis?.length).fill(''))\n\n  useEffect(() => {\n    if (diagnosis && Array.isArray(diagnosis)) {\n      const reversed = [...diagnosis].reverse()\n      setReversedDiagnosis(reversed)\n    }\n  }, [diagnosis])\n\n  const showReportHandler = async (filename, index) => {\n    try {\n      setLoading(true)\n\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/api/user/getPatientReport/${filename}`,\n        {\n          responseType: 'blob',\n        },\n      )\n\n      const blob = new Blob([response.data], { type: response.headers['content-type'] })\n      const blobUrl = URL.createObjectURL(blob)\n      window.open(blobUrl)\n    } catch (error) {\n      setLoading(false)\n      console.error('Error fetching report:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // const handleFileSelect = (e, index) => {\n  //   const { value } = e.target\n  //   const updatedSelectedFile = [...selectedFile]\n  //   updatedSelectedFile[index] = value\n  //   setSelectedFile(updatedSelectedFile)\n  // }\n  const editNameFun = (name) => {\n    if (name) {\n      const fileName = name\n      const parts = fileName.split('_')\n      // Check if the file name contains underscores\n      if (parts.length > 1) {\n        // Exclude the first part of the file name and join the rest with underscores\n        const editedFileName = parts.slice(1).join('_')\n        const actualFileName = editedFileName.split('.')[0]\n        return actualFileName\n      } else {\n        // If there are no underscores or only one part, return the original file name\n        return fileName\n      }\n    } else {\n      // If the file name is undefined, return an empty string\n      return ''\n    }\n  }\n  // console.log('guarva', reversedDiagnosis)\n\n  const [hoveredFile, setHoveredFile] = useState(null)\n\n  return (\n    <div style={{ maxHeight: '300px', marginTop: '20px' }}>\n      {reversedDiagnosis?.map((elem, index) => {\n        const date = new Date(elem.date)\n        const formattedDate = date\n          .toLocaleDateString('en-IN', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true,\n          })\n          .replace(/\\//g, '/')\n\n        return (\n          <div key={index} style={{ margin: '1rem' }}>\n            <div className=\"row\" style={{ overflowX: 'auto' }}>\n              <div style={{ overflow: 'auto !important' }}>\n                <h5>Diagnose Date: {formattedDate}</h5>\n\n                <table\n                  className=\"table\"\n                  style={{\n                    width: '100%',\n                    border: '1px solid',\n                    fontFamily: 'ui-rounded',\n                    borderRadius: '10px',\n                  }}\n                >\n                  <colgroup>\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '20%' }} />\n                    <col style={{ width: '30%' }} />\n                    <col style={{ width: '30%' }} />\n                  </colgroup>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Problems\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Sub Problem\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Tests\n                      </th>\n                      <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}>\n                        Scales\n                      </th>\n                    </tr>\n                  </thead>\n                  {elem?.diagnosData?.map((element, innerIndex) => {\n                    const { problem, subProblem, scale, test } = element\n                    console.log('hgsad', element)\n                    return (\n                      <>\n                        <tbody key={innerIndex}>\n                          {loading && <SpinnerOverlay message=\"Opening File\" />}\n                          <tr>\n                            <td style={{ fontWeight: 'bolder' }}>{problem}</td>\n                            <td style={{ fontWeight: 'bolder' }}>\n                              {subProblem ? subProblem : '-'}\n                            </td>\n                            <td>\n                              {test.map((testData, testIndex) => (\n                                <div key={testIndex}>\n                                  {testData.name === '' ? (\n                                    '-'\n                                  ) : (\n                                    <div className=\"row\" style={{ margin: 0 }}>\n                                      <td\n                                        // className=\"tableTitle\"\n                                        style={{\n                                          width: '50%',\n                                          paddingRight: '10px',\n                                          margin: 'auto',\n                                          fontWeight: 'bolder',\n                                        }}\n                                      >\n                                        {testData.name}\n                                      </td>\n                                      <div style={{ width: '50%' }}>\n                                        <td style={{ margin: '0', padding: 0 }}>\n                                          {testData.testInput !== '' ? (\n                                            <td\n                                              style={{\n                                                width: '40%',\n                                                paddingRight: '10px',\n                                                margin: 'auto',\n                                              }}\n                                            >\n                                              {testData.testInput}\n                                            </td>\n                                          ) : (\n                                            <div style={{ display: 'flex', margin: 0 }}>\n                                              {testData.files?.map((file, fileIndex) => (\n                                                <div\n                                                  key={fileIndex}\n                                                  value={file.fileName}\n                                                  style={{\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    marginRight: '10px',\n                                                    margin: '0 5px 0 0', // Adjusted margin for files\n                                                  }}\n                                                  onMouseEnter={() => {\n                                                    const editedName = editNameFun(file.fileName)\n                                                    setHoveredFile(editedName)\n                                                  }}\n                                                  onMouseLeave={() => setHoveredFile('')}\n                                                  onClick={() =>\n                                                    showReportHandler(file?.fileName, fileIndex)\n                                                  }\n                                                >\n                                                  <button\n                                                    type=\"button\"\n                                                    className=\"btn btn-sm btn-primary\"\n                                                    data-toggle=\"popover\"\n                                                    title={hoveredFile}\n                                                    style={{ margin: '0' }}\n                                                  >\n                                                    <CIcon icon={cilDataTransferDown} />\n                                                  </button>\n                                                </div>\n                                              ))}\n                                            </div>\n                                          )}\n                                        </td>\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              ))}\n                            </td>\n                            <td>\n                              {scale.map((scaleData, scaleIndex) => (\n                                <div key={scaleIndex}>\n                                  {scaleData.name === '' ? (\n                                    '-'\n                                  ) : (\n                                    <div className=\"row\" style={{ margin: 0 }}>\n                                      <div\n                                        className=\"col-md-6\"\n                                        style={{\n                                          fontWeight: 'bolder',\n                                          paddingRight: '10px',\n                                          margin: 'auto',\n                                          wordWrap: 'break-word',\n                                        }}\n                                      >\n                                        {scaleData.name}\n                                      </div>\n\n                                      <div\n                                        className=\"col-md-6 tableTitle\"\n                                        style={{\n                                          margin: '0',\n                                          padding: 0,\n                                          wordWrap: 'break-word',\n                                        }}\n                                      >\n                                        {scaleData.value}\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              ))}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </>\n                    )\n                  })}\n                  {elem?.procedure.length !== 0 ? (\n                    <>\n                      <tr>\n                        <td colSpan=\"4\">\n                          <h5 style={{ fontWeight: 'bolder' }}>Procedures:</h5>\n                        </td>\n                      </tr>\n                      <tr>\n                        {/* <th scope=\"col\" className=\"tableTitle\" style={{ background: '#FBF295' }}> */}\n                        <td\n                          className=\"tableTitle\"\n                          style={{ background: '#FBF295', fontWeight: 'bold' }}\n                        >\n                          Name\n                        </td>\n                        <td\n                          className=\"tableTitle\"\n                          style={{ background: '#FBF295', fontWeight: 'bold' }}\n                        >\n                          Complications\n                        </td>\n                        <td\n                          className=\"tableTitle\"\n                          style={{ background: '#FBF295', fontWeight: 'bold' }}\n                        >\n                          Done By\n                        </td>\n                        <td\n                          className=\"tableTitle\"\n                          style={{ background: '#FBF295', fontWeight: 'bold' }}\n                        >\n                          Date\n                        </td>\n                      </tr>\n                      {elem?.procedure.map((procedureData, procedureIndex) => {\n                        const date = new Date(procedureData.date)\n                        const formattedDate = date\n                          .toLocaleDateString('en-IN', {\n                            year: 'numeric',\n                            month: '2-digit',\n                            day: '2-digit',\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            hour12: true,\n                          })\n                          .replace(/\\//g, '/')\n                        return (\n                          <tr key={procedureIndex}>\n                            <td>&nbsp;&nbsp;{procedureData.name}</td>\n                            <td>{procedureData.complications}</td>\n                            <td>{procedureData.doneBy}</td>\n                            <td>{formattedDate}</td>\n                          </tr>\n                        )\n                      })}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </table>\n\n                <div className=\"row\" style={{ margin: '1rem auto 1rem 0' }}>\n                  <div>\n                    <div className=\"row\">\n                      <div className=\"col-md-11\">\n                        <div className=\"card\" style={{ padding: '1rem 2rem' }}>\n                          <div className=\"d-flex\">\n                            <p style={{ margin: '0' }}>\n                              {' '}\n                              Notes :&nbsp;&nbsp;&nbsp;{elem.desc === '' ? '-' : elem.desc}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-1 justify-content-center align-items-center\">\n                        <CIcon icon={cilPlus} size=\"xl\"></CIcon>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <hr style={{ width: '100%' }} />\n          </div>\n        )\n      })}\n      <ToastContainer />\n    </div>\n  )\n}\n\nPatientShowDetails.propTypes = {\n  diagnosis: PropTypes.array.isRequired,\n}\n\nexport default PatientShowDetails\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { getFetch, postFetchFile, putFetchData } from 'src/api/Api'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport CIcon from '@coreui/icons-react'\nimport { cilMinus, cilPlus, cilTrash } from '@coreui/icons'\nimport dayjs from 'dayjs'\n// import { API_URL } from 'src/constant'\n\nconst PatientAddNewRecord = ({\n  _id,\n  getSearchByPatient,\n  setIsAddNewDiagnosis,\n  setIsDetailed,\n  diagnosisProp,\n}) => {\n  console.log('Gaurav', diagnosisProp)\n  console.log(\n    'PEErablem',\n    diagnosisProp[0]?.diagnosData[diagnosisProp[0]?.diagnosData?.length - 1]?.problem,\n  )\n  let API_URL = process.env.REACT_APP_API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  PatientAddNewRecord.propTypes = {\n    _id: PropTypes.string.isRequired,\n    getSearchByPatient: PropTypes.string.isRequired,\n    setIsAddNewDiagnosis: PropTypes.string.isRequired,\n    setIsDetailed: PropTypes.string.isRequired,\n    diagnosisProp: PropTypes.string.isRequired,\n  }\n  const currentDate = new Date()\n  const [inputs, setInputs] = useState([\n    {\n      problem: diagnosisProp[0]?.diagnosData[diagnosisProp[0]?.diagnosData?.length - 1]?.problem,\n      subProblem: '',\n      test: [\n        {\n          name: '',\n          testInput: '',\n          files: [],\n        },\n      ],\n      scale: [\n        {\n          name: '',\n          value: '',\n        },\n      ],\n    },\n  ])\n\n  const [procedure, setProcedure] = useState([\n    {\n      name: '',\n      complications: '',\n      doneBy: '',\n      date: dayjs(currentDate),\n    },\n  ])\n\n  const [lastDiagnosis, setLastDiagnosis] = useState('')\n  const [addProcedureToggle, setAddProcedureToggle] = useState(false)\n  let [removeAndAddInputProcedure, setremoveAndAddInputProcedure] = useState(false)\n\n  useEffect(() => {\n    const lastRecords = diagnosisProp[diagnosisProp.length - 1]\n    const lastDiagnosis = lastRecords?.diagnosData[lastRecords?.diagnosData.length - 1]\n    setLastDiagnosis(lastDiagnosis)\n    console.log('Guarssadva', lastDiagnosis)\n    setInputs([\n      {\n        problem: diagnosisProp[0]?.diagnosData[diagnosisProp[0]?.diagnosData?.length - 1]?.problem,\n        subProblem: '',\n        test: [\n          {\n            name: '',\n            testInput: '',\n            files: [],\n          },\n        ],\n        scale: [\n          {\n            name: '',\n            value: '',\n          },\n        ],\n      },\n    ])\n  }, [])\n\n  const [startingDate, setStartingDate] = React.useState(null)\n  const [patientById, setPatientById] = useState({})\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    diagnosis: [],\n    desc: '',\n  })\n  const [diagnosis, setDiagnosis] = useState([])\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  const getPatientById = async () => {\n    try {\n      const data = await getFetch(`${API_URL}/api/patient/${_id}`)\n      setPatientById(data.data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n    const filteredInputs = inputs\n      .map((data) => ({\n        ...data,\n        test: data.test.filter((test) => test.name !== ''),\n        scale: data.scale.filter((scale) => scale.name !== ''),\n      }))\n      .filter((data) => data.problem !== '')\n    const filterProcedure = procedure.filter((data) => data.name !== '')\n\n    for (const data of filteredInputs) {\n      if (\n        data.test.length > 0 &&\n        data.test.some((test) => test.testInput === '' && test.files.length === 0)\n      ) {\n        toast.warning('Please provide input or upload file(s) for selected test(s)')\n        return\n      }\n\n      if (data.scale.length > 0 && data.scale.some((scale) => scale.value === '')) {\n        toast.warning('Please provide input for selected scale(s)')\n        return\n      }\n    }\n\n    // for (const data of inputs) {\n    //   if (data.test !== '' && data.testInput === '' && data.files.length === 0) {\n    //     toast.warning('Please give input for selected test')\n    //     return // Stop further execution\n    //   }\n\n    //   if (data.scale !== '' && data.value === '') {\n    //     toast.warning('Please give input for selected scale')\n    //     return // Stop further execution\n    //   }\n    //   console.log('data', data)\n    // }\n    // toast.warning('Uploading Files and Reports')z\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        filteredInputs.map(async (data, index) => {\n          await Promise.all(\n            data.test.map(async (presentTest, testIndex) => {\n              if (presentTest.files) {\n                const files = presentTest.files\n                if (files.length > 0) {\n                  const formData = new FormData()\n                  files.forEach((file) => {\n                    // Check if the file type is allowed\n                    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n                    if (allowedFileTypes.includes(file.type)) {\n                      formData.append('files', file) // Append each allowed file to the FormData\n                    } else {\n                      console.warn('File type not allowed:', file.type)\n                    }\n                  })\n                  if (formData.has('files')) {\n                    const response = await postFetchFile(\n                      `${API_URL}/api/user/uploadPatientReport`,\n                      formData,\n                    )\n                    if (response) {\n                      setfileUploadingSpinner(false)\n                      filteredInputs[index].test[testIndex].files = response.filesInfo\n                    }\n                  } else {\n                    setfileUploadingSpinner(false)\n                    console.warn('No valid files to upload')\n                  }\n                }\n              } else {\n                filteredInputs[index].test[testIndex].files = null\n                setfileUploadingSpinner(false)\n              }\n            }),\n          )\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false)\n      console.error('Error uploading files:', error)\n      return\n    }\n    // if (addProcedureToggle) {\n    //   filteredInputs.forEach((data, index) => {\n    //     data.procedure = filterProcedure\n    //   })\n    // }\n\n    try {\n      setLoading(true)\n      const updatedFormData = {\n        ...formData,\n        diagnosis: [\n          {\n            diagnosData: filteredInputs,\n            procedure: filterProcedure,\n            date: Date(),\n            desc,\n          },\n        ],\n        nextApointmentDate: startingDate,\n      }\n      // console.log('updatedFormData', updatedFormData)\n\n      const data = await putFetchData(`${API_URL}/api/patient/update/${_id}`, updatedFormData)\n\n      // console.log('Gaurav', data)\n      if (data) {\n        setDiagnosis([])\n        setDesc('')\n        toast.success('Patient Updated Successfully', {\n          autoClose: 1000,\n        })\n\n        setIsAddNewDiagnosis(false)\n        setIsDetailed(true)\n        setInputs([\n          {\n            problem: '',\n            subProblem: '',\n            test: [\n              {\n                name: '',\n                testInput: '',\n                files: [],\n              },\n            ],\n            scale: [\n              {\n                name: '',\n                value: '',\n              },\n            ],\n          },\n        ])\n        setLoading(false)\n\n        getSearchByPatient()\n        // window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleClose = () => {\n    setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  useEffect(() => {\n    if (patientById.desc) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        desc: patientById.desc,\n      }))\n    }\n  }, [patientById])\n\n  useEffect(() => {\n    getPatientById()\n  }, [])\n\n  /// new updates by Gaurav 28 march 2024 for updating the diagnoses data and formate to add problems tests and scales\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleFileInputChange = (index, testindex, event) => {\n    const { name, files } = event.target\n    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n    const maxFiles = 3 // Maximum number of files allowed\n\n    // Check if the number of selected files exceeds the limit\n    if (files.length > maxFiles) {\n      event.target.value = '' // Clear the file input\n      toast.warning('You can only upload up to 3 files', { autoClose: 1500 })\n      return\n    }\n\n    const updatedInputs = [...inputs]\n\n    // Convert FileList to array and filter out files that exceed the size limit or are not of allowed types\n    const filesArray = Array.from(files).filter((file) => {\n      if (file.size > 31457280) {\n        toast.warning('File size should be less than 30 MB', { autoClose: 1500 })\n        return false\n      }\n      if (!allowedFileTypes.includes(file.type)) {\n        toast.warning('Only images and PDFs are allowed', { autoClose: 1500 })\n        return false\n      }\n      return true\n    })\n\n    updatedInputs[index].test[testindex].files = filesArray // Store the array of files\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    const allInputsHaveProblem = inputs.every((input) => input.problem !== '')\n    if (allInputsHaveProblem) {\n      setInputs([\n        ...inputs,\n        {\n          problem: '',\n          subProblem: '',\n          test: [\n            {\n              name: '',\n              testInput: '',\n              files: [],\n            },\n          ],\n          scale: [\n            {\n              name: '',\n              value: '',\n            },\n          ],\n        },\n      ])\n    } else {\n      toast.warning('Please Fill Details of previous Record before adding new!!', {\n        autoClose: 1500,\n      })\n    }\n  }\n\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n\n  const handleInputTestText = (index, testIndex, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index].test[testIndex][name] = value\n    setInputs(updatedInputs)\n  }\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n  }, [handleRemoveInput, handleAddInput, handleInputChange])\n\n  const handleInputTestChange = (index, testIndex, event) => {\n    // console.log('asd', index, testIndex, event)\n    const { name, value } = event.target\n    const newInputs = [...inputs]\n    newInputs[index].test[testIndex][name] = value\n    setInputs(newInputs)\n  }\n  const handleRemoveTestInput = (e, index, testIndex) => {\n    e.preventDefault()\n    const updateData = [...inputs]\n    updateData[index].test.splice(testIndex, 1)\n    setInputs(updateData)\n  }\n  const handleAddTestInput = (e, index) => {\n    e.preventDefault()\n    if (inputs[index].test[inputs[index].test.length - 1].name) {\n      const updatedInputs = [...inputs]\n      updatedInputs[index].test.push({\n        name: '',\n        testInput: '',\n        files: [],\n      })\n      setInputs(updatedInputs)\n    } else {\n      toast.warning('Please Enter Previous test field before adding new')\n    }\n  }\n\n  const handleInputChangeScale = (index, scaleIndex, event) => {\n    const { name, value } = event.target\n    const newInputs = [...inputs]\n    newInputs[index].scale[scaleIndex][name] = value\n    setInputs(newInputs)\n  }\n\n  const handleRemoveScaleInput = (e, index, scaleIndex) => {\n    e.preventDefault()\n    const updateData = [...inputs]\n    updateData[index].scale.splice(scaleIndex, 1)\n    setInputs(updateData)\n  }\n\n  const handleAddScaleInput = (e, index) => {\n    e.preventDefault()\n    if (inputs[index].scale[inputs[index].scale.length - 1].name) {\n      const updatedInputs = [...inputs]\n      updatedInputs[index].scale.push({\n        name: '',\n        value: '',\n      })\n      setInputs(updatedInputs)\n    } else {\n      toast.warning('Please Enter Previous Scale field before adding new')\n    }\n  }\n\n  const handleInputChangeProcedure = (index, event) => {\n    const { name, value } = event.target\n    const updatedProcedure = [...procedure]\n    updatedProcedure[index][name] = value\n    setProcedure(updatedProcedure)\n  }\n\n  const handleRemoveInputProcedure = (index) => {\n    const updatedInputs = [...procedure]\n    updatedInputs.splice(index, 1)\n    setProcedure(updatedInputs)\n  }\n  const handleAddInputProcedure = () => {\n    const allInputsHaveProblem = procedure.every((input) => input.name !== '')\n    if (allInputsHaveProblem) {\n      setProcedure([\n        ...procedure,\n        { name: '', complications: '', doneBy: '', date: dayjs(currentDate) },\n      ])\n    } else {\n      toast.warning('Please Fill Details of previous Record before adding new!!', {\n        autoClose: 1500,\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n    if (procedure.length > 1) {\n      setremoveAndAddInputProcedure(true)\n    } else {\n      setremoveAndAddInputProcedure(false)\n    }\n  }, [\n    handleRemoveInput,\n    handleAddInput,\n    handleInputChange,\n    handleAddInputProcedure,\n    handleInputChangeProcedure,\n  ])\n  useEffect(() => {\n    console.log('Inputs ', inputs)\n  })\n  return (\n    <>\n      {fileUploadingSpinner && (\n        <SpinnerOverlay loading={fileUploadingSpinner} message=\"Uploading Files\" />\n      )}\n      {loading && <SpinnerOverlay message=\"Adding Diagnosis\" />}\n      <div style={{ margin: '1rem auto 1rem 1rem' }}>\n        <div className=\"addPatientDataInnerDiv\">\n          <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <form className=\"mb-3\">\n            {inputs.map((input, index) => (\n              <div key={index} className=\"row mt-1 mb-2\">\n                <div className=\"col-md-2 col-12\">\n                  <label>\n                    <select\n                      className=\"form-control addPatientDataSelectDiv\"\n                      // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                      name=\"problem\"\n                      value={input.problem}\n                      onChange={(event) => handleInputChange(index, event)}\n                    >\n                      <option value=\"\">Chief complaint</option>\n                      {problems.map((problem, problemIndex) => (\n                        <option key={problemIndex} value={problem}>\n                          {problem}\n                        </option>\n                      ))}\n                    </select>\n                  </label>\n                  <label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter sub problem\"\n                      name=\"subProblem\"\n                      onChange={(event) => handleInputChange(index, event)}\n                    ></input>\n                  </label>\n                </div>\n                <div className=\"col-md-4 col-12\">\n                  {input.test.map((testInput, testIndex) => (\n                    <div key={testInput} className=\"d-flex mb-1\">\n                      <div style={{ width: '40%' }}>\n                        <label>\n                          <select\n                            className=\"form-control addPatientDataSelectDiv\"\n                            name=\"name\"\n                            value={testInput.name}\n                            onChange={(event) => handleInputTestChange(index, testIndex, event)}\n                          >\n                            <option value=\"\">Select Test</option>\n                            {tests.map((test, testIndex) => (\n                              <option key={testIndex} value={test.name}>\n                                {test.name}\n                              </option>\n                            ))}\n                          </select>\n                        </label>\n                      </div>\n                      {testInput.name === '' ? (\n                        <div style={{ width: '40%', marginLeft: '3px' }}>\n                          <label>\n                            <input\n                              className=\"form-control addPatientDataInputDiv\"\n                              placeholder=\"Select a Test\"\n                              type=\"text\"\n                              disabled=\"true\"\n                            />\n                          </label>\n                        </div>\n                      ) : (\n                        <div style={{ width: '40%', marginLeft: '3px' }}>\n                          {tests.map((test) => {\n                            if (test.name === input.test[testIndex].name) {\n                              if (test.inputType === 'text') {\n                                return (\n                                  <label key={testIndex}>\n                                    <input\n                                      className=\"form-control\"\n                                      style={{ width: '100%' }}\n                                      placeholder=\"Enter test Value\"\n                                      type=\"text\"\n                                      name=\"testInput\"\n                                      value={input.test[testIndex].text} // Here is the issue\n                                      onChange={(event) =>\n                                        handleInputTestText(index, testIndex, event)\n                                      }\n                                    />\n                                  </label>\n                                )\n                              } else if (test.inputType === 'file') {\n                                return (\n                                  <label key={testIndex}>\n                                    <input\n                                      className=\"form-control\"\n                                      style={{ width: '100%' }}\n                                      type=\"file\"\n                                      multiple\n                                      name=\"files\"\n                                      accept=\"image/jpeg, image/png, application/pdf\"\n                                      onChange={(event) =>\n                                        handleFileInputChange(index, testIndex, event)\n                                      }\n                                    />\n                                  </label>\n                                )\n                              }\n                            }\n                            return null\n                          })}\n                        </div>\n                      )}\n                      <div style={{ width: '20%', marginLeft: '3px' }}>\n                        {testIndex !== input.test.length - 1 && (\n                          <button\n                            className=\"btn btn-outline-dark\"\n                            onClick={(e) => handleRemoveTestInput(e, index, testIndex)}\n                          >\n                            <CIcon icon={cilMinus} />\n                          </button>\n                        )}\n                        {testIndex === input.test.length - 1 && (\n                          <button\n                            className=\"btn btn-outline-success\"\n                            onClick={(e) => handleAddTestInput(e, index)}\n                          >\n                            <CIcon icon={cilPlus} />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"col-md-4 col-12 \">\n                  {input.scale.map((scaleInput, scaleIndex) => (\n                    <div key={scaleIndex} className=\"d-flex mb-1\">\n                      <div style={{ width: '40%' }}>\n                        <label>\n                          <select\n                            className=\"form-control addPatientDataSelectDiv\"\n                            name=\"name\"\n                            value={input.scale[scaleIndex].name}\n                            onChange={(event) => handleInputChangeScale(index, scaleIndex, event)}\n                          >\n                            <option value=\"\">Select Scale</option>\n                            {scales.map((scale, scaleIndex) => (\n                              <option key={scaleIndex} value={scale}>\n                                {scale}\n                              </option>\n                            ))}\n                          </select>\n                        </label>\n                      </div>\n                      <div style={{ width: '40%', marginLeft: '3px' }}>\n                        <label>\n                          <input\n                            className=\"form-control addPatientDataInputDiv\"\n                            // style={{ width: '100%', appearance: 'auto' }}\n                            placeholder=\"Enter Scale Value\"\n                            type=\"text\"\n                            name=\"value\"\n                            value={input.scale[scaleIndex].value}\n                            onChange={(event) => handleInputChangeScale(index, scaleIndex, event)}\n                          />\n                        </label>\n                      </div>\n                      <div style={{ width: '20%', marginLeft: '3px' }}>\n                        {scaleIndex !== input.scale.length - 1 && (\n                          <button\n                            className=\"btn btn-outline-dark\"\n                            onClick={(e) => handleRemoveScaleInput(e, index, scaleIndex)}\n                          >\n                            <CIcon icon={cilMinus} />\n                          </button>\n                        )}\n                        {scaleIndex === input.scale.length - 1 && (\n                          <button\n                            className=\"btn btn-outline-success\"\n                            onClick={(e) => handleAddScaleInput(e, index)}\n                          >\n                            <CIcon icon={cilPlus} />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"col-md-2 d-flex justify-content-end col-12\">\n                  {removeAndAddInput && (\n                    <button\n                      className=\"btn me-4 mt-1\"\n                      type=\"button\"\n                      onClick={() => handleRemoveInput(index)}\n                    >\n                      <CIcon icon={cilTrash} size=\"xl\" />\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n            <div className=\"d-flex justify-content-end\">\n              <button className=\"btn btn-primary me-4\" type=\"button\" onClick={handleAddInput}>\n                Add More\n              </button>\n            </div>\n          </form>\n          <div>\n            <div>\n              <input\n                type=\"checkbox\"\n                checked={addProcedureToggle}\n                onChange={() => setAddProcedureToggle(!addProcedureToggle)}\n              ></input>\n              <label> &nbsp;&nbsp;&nbsp;Add Procedure</label>\n            </div>\n            {addProcedureToggle ? (\n              <>\n                <form>\n                  {procedure.map((input, index) => (\n                    <div key={index}>\n                      <div>\n                        <div className=\"row\">\n                          <div className=\"col-md-2 col-sm-10 \">\n                            <label>\n                              <input\n                                onChange={(event) => handleInputChangeProcedure(index, event)}\n                                value={input.name}\n                                name=\"name\"\n                                className=\"form-control addPatientDataInputDiv\"\n                                placeholder=\"Procedure Name\"\n                                type=\"text\"\n                              />\n                            </label>\n                          </div>\n                          <div className=\"col-md-2 col-sm-10\">\n                            <label>\n                              <input\n                                onChange={(event) => handleInputChangeProcedure(index, event)}\n                                value={input.complications}\n                                name=\"complications\"\n                                className=\"form-control addPatientDataInputDiv\"\n                                placeholder=\"Complications\"\n                                type=\"text\"\n                              />\n                            </label>\n                          </div>\n                          <div className=\"col-md-2 col-sm-10\">\n                            <label>\n                              <input\n                                onChange={(event) => handleInputChangeProcedure(index, event)}\n                                value={input.doneBy}\n                                name=\"doneBy\"\n                                className=\"form-control addPatientDataInputDiv\"\n                                placeholder=\"Done By\"\n                                type=\"text\"\n                              />\n                            </label>\n                          </div>\n                          <div className=\"col-md-4 col-sm-10\">\n                            <div className=\"d-flex\">\n                              <div className=\"w-auto\">\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                  <DemoContainer components={['DateTimePicker']}>\n                                    <DateTimePicker\n                                      label=\"To\"\n                                      value={input.date}\n                                      // onChange={handleEndDateChange}\n                                      inputFormat=\"YYYY-MM-DD\"\n                                      ampm={false}\n                                      ampmInClock={false}\n                                      views={['year', 'month', 'day']}\n                                      slotProps={{ textField: { size: 'small' } }}\n                                    />\n                                  </DemoContainer>\n                                </LocalizationProvider>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-md-2 d-flex \">\n                            {removeAndAddInputProcedure && (\n                              <button\n                                className=\"btn me-4 mt-1\"\n                                type=\"button\"\n                                onClick={() => handleRemoveInputProcedure(index)}\n                              >\n                                <CIcon icon={cilTrash} size=\"xl\" />\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"d-flex justify-content-end\">\n                    <button\n                      className=\"btn btn-primary me-4\"\n                      type=\"button\"\n                      onClick={() => handleAddInputProcedure()}\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </form>\n              </>\n            ) : (\n              ''\n            )}\n          </div>\n          <div>\n            <textarea\n              rows={4}\n              className=\"form-control col-12\"\n              placeholder=\"Notes (Optional)\"\n              name=\"desc\"\n              value={desc}\n              onChange={(e) => setDesc(e.target.value)}\n            ></textarea>\n          </div>\n\n          <div className=\"d-flex mt-2\">\n            <div className=\"w-auto\">\n              <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DemoContainer components={['DateTimePicker']}>\n                  <DateTimePicker\n                    label=\"Next Appointment Date\"\n                    value={startingDate}\n                    onChange={handleStartingDateChange}\n                  />\n                </DemoContainer>\n              </LocalizationProvider>\n            </div>\n          </div>\n          <div className=\"text-end\">\n            <button type=\"submit\" className=\"btn btn-primary mt-4\" style={{ width: '10rem' }}>\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger mt-4 ms-2\"\n              style={{ width: '10rem' }}\n              onClick={() => handleClose()}\n            >\n              Close\n            </button>\n          </div>\n        </form>\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default PatientAddNewRecord\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport PatientShowDetails from './PatientShowDetails'\nimport PatientAddNewRecord from './PatientAddNewRecord'\n\nconst PatientInfoData = ({ patientSearch, getSearchByPatient }) => {\n  // console.log('patientSearch', patientSearch)\n  // console.log('getSearchByPatient', getSearchByPatient)\n\n  const [isAddNewDiagnosis, setIsAddNewDiagnosis] = useState(false)\n  const [isDetails, setIsDetailed] = useState(false)\n  const [selectedPatientId, setSelectedPatientId] = useState('')\n  const [addDiagnosisPatientId, setAddDiagnosisPatientId] = useState('')\n\n  const handleToggleDetails = (patientId) => {\n    setSelectedPatientId((prevState) => (prevState === patientId ? '' : patientId))\n    setAddDiagnosisPatientId('')\n    // setIsAddNewDiagnosis(false)\n    setIsDetailed(true)\n  }\n\n  const handleAddDiagnosis = (patientId) => {\n    setAddDiagnosisPatientId(patientId)\n    setSelectedPatientId(patientId)\n    setIsAddNewDiagnosis(true)\n    setIsDetailed(false)\n  }\n\n  const [isSmallScreen, setIsSmallScreen] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      setIsSmallScreen(window.innerWidth <= 768) // Adjust the breakpoint as needed\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <div>\n      {isSmallScreen ? (\n        <>\n          {patientSearch?.map((patient) => {\n            const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n            const isDetailsOpen = selectedPatientId === _id\n            const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n            const inputDate = nextApointmentDate\n            const diagnosisProp = diagnosis\n            const date = new Date(inputDate)\n            const formattedDate = date\n              .toLocaleString('en-IN', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })\n              .replace(/\\//g, '/')\n\n            return (\n              <div key={_id}>\n                <div style={{ marginTop: '2rem' }}>\n                  <div className=\"card\" style={{ width: '100%' }}>\n                    <div className=\"card-body overflow-auto \">\n                      <div className=\"row\" style={{ marginBottom: '1rem' }}>\n                        <div style={{ width: '40%' }}>\n                          <span>\n                            <span className=\"boldFont\">CR No :</span> {crn}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Age : </span> {age}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Sex. </span> {sex}\n                          </span>\n                        </div>\n                        <div style={{ width: '60%' }}>\n                          <span>\n                            <span className=\"boldFont\">Name : </span> {name}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Mob. No.</span> {phone}\n                          </span>\n                          <br />\n                          <span>\n                            <span className=\"boldFont\">Next Appointment Date.</span>{' '}\n                            {nextApointmentDate ? formattedDate : '-'}\n                          </span>\n                        </div>\n                      </div>\n\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success patientInfoButton\"\n                          onClick={() => handleToggleDetails(_id)}\n                          // style={{ fontSize: '15px', whiteSpace: 'none', padding: '5px 10px' }}\n                        >\n                          Show Diagnosis\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning\"\n                          style={{ marginLeft: '2rem' }}\n                          onClick={() => handleAddDiagnosis(_id)}\n                        >\n                          {diagnosis ? 'Add New Follow-Up' : 'Add New Diagnosis'}\n                        </button>\n                      </div>\n\n                      {isDetailsOpen && isDetails && (\n                        <div>\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                      {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                        <div>\n                          <PatientAddNewRecord\n                            _id={_id}\n                            getSearchByPatient={getSearchByPatient}\n                            setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                            setIsDetailed={setIsDetailed}\n                            diagnosisProp={diagnosisProp}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </>\n      ) : (\n        <div className=\"mb-4\">\n          {patientSearch?.map((patient) => {\n            const { name, crn, phone, age, sex, diagnosis, _id, desc, nextApointmentDate } = patient\n            const isDetailsOpen = selectedPatientId === _id\n            const isAddDiagnosisOpen = addDiagnosisPatientId === _id\n            const inputDate = nextApointmentDate\n            const diagnosisProp = diagnosis\n            const date = new Date(inputDate)\n            const formattedDate = date\n              .toLocaleString('en-IN', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true,\n              })\n              .replace(/\\//g, '/')\n\n            return (\n              <div key={_id} className=\"row\">\n                <div style={{ marginTop: '2rem' }}>\n                  <div className=\"card\" style={{ width: '100%' }}>\n                    <div className=\"card-body overflow-auto \">\n                      <h5 className=\"card-title\"> CR No : {crn}</h5>\n                      <h6 className=\"card-subtitle mt-2\">\n                        <h5>Name : {name}</h5>\n                      </h6>\n                      <div style={{ display: 'flex', marginTop: '1rem' }}>\n                        {/* <p className=\"card-text\">CRN No. {crn}</p> */}\n                        <span style={{ display: 'flex' }}>\n                          <h6>Phone No. &nbsp;</h6>{' '}\n                          <h6 style={{ fontWeight: 'normal' }}>{phone}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6>Age. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{age}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6> Sex. &nbsp;</h6> <h6 style={{ fontWeight: 'normal' }}>{sex}</h6>\n                        </span>\n                        <span style={{ display: 'flex', marginLeft: '2rem' }}>\n                          <h6>Next Appointment Date. &nbsp;</h6>{' '}\n                          <h6 style={{ fontWeight: 'normal' }}>\n                            {nextApointmentDate ? formattedDate : '-'}\n                          </h6>\n                        </span>\n                      </div>\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success\"\n                          onClick={() => handleToggleDetails(_id)}\n                          style={{ fontSize: '15px', whiteSpace: 'none', padding: '5px 10px' }}\n                        >\n                          Show Diagnosis\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-warning\"\n                          style={{ marginLeft: '2rem' }}\n                          onClick={() => handleAddDiagnosis(_id)}\n                        >\n                          {diagnosis ? 'Add New Follow-Up' : 'Add New Diagnosis'}\n                        </button>\n                      </div>\n\n                      {isDetailsOpen && isDetails && (\n                        <div>\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                      {isAddDiagnosisOpen && isAddNewDiagnosis && (\n                        <div>\n                          <PatientAddNewRecord\n                            _id={_id}\n                            getSearchByPatient={getSearchByPatient}\n                            setIsAddNewDiagnosis={setIsAddNewDiagnosis}\n                            setIsDetailed={setIsDetailed}\n                            diagnosisProp={diagnosisProp}\n                          />\n                          <PatientShowDetails diagnosis={diagnosis} desc={desc} />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nPatientInfoData.propTypes = {\n  patientSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.func.isRequired,\n}\n\nexport default PatientInfoData\n","import * as React from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nconst AddPatientLoader = () => {\n  return (\n    <Box\n      style={{\n        width: '100%',\n        height: '100%',\n        lineHeight: '20vh',\n        textAlign: 'center',\n        marginTop: '10px',\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  )\n}\n\nexport default AddPatientLoader\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faXmark } from '@fortawesome/free-solid-svg-icons'\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\nimport SpinnerOverlay from 'src/views/publicItems/ SpinnerOverlay'\nimport { DatePicker } from 'antd'\nimport dayjs from 'dayjs'\nimport PropTypes from 'prop-types'\nimport CIcon from '@coreui/icons-react'\nimport { cibAddthis, cilMinus, cilPlaylistAdd, cilPlus, cilTrash } from '@coreui/icons'\n\nconst AddNewPatient = ({ setData, setUpdatedSearch, getSearchByPatient, updatedSearch }) => {\n  const location = useLocation()\n  // console.log('location', Number(location?.state?.crn))\n  const currentDate = new Date()\n  // console.log('today date', currentDate)\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n\n  const [startingDate, setStartingDate] = React.useState(null)\n\n  const [problems, setProblems] = useState([])\n  const [tests, setTests] = useState([])\n  const [scales, setScales] = useState([])\n  const [queryCRN, setQueryCRN] = useState('')\n  const randomCRN = Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000\n  let [fileUploadingSpinner, setfileUploadingSpinner] = useState(false)\n  const [addProcedureToggle, setAddProcedureToggle] = useState(false)\n  const [desc, setDesc] = useState('')\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    sex: 'male',\n    phone: '',\n    crn: `${randomCRN}`,\n    diagnosis: [],\n    desc: '',\n    doctor_id: patientRecord?._id,\n  })\n\n  const [inputs, setInputs] = useState([\n    {\n      problem: '',\n      subProblem: '',\n      test: [\n        {\n          name: '',\n          testInput: '',\n          files: [],\n        },\n      ],\n      scale: [\n        {\n          name: '',\n          value: '',\n        },\n      ],\n    },\n  ])\n  const [procedure, setProcedure] = useState([\n    {\n      name: '',\n      complications: '',\n      doneBy: '',\n      date: dayjs(currentDate),\n    },\n  ])\n\n  const handleStartingDateChange = (date) => {\n    setStartingDate(date)\n  }\n\n  useEffect(() => {\n    fetchProblems()\n  }, [])\n\n  const fetchProblems = async () => {\n    try {\n      const problemsResponse = await getFetch(\n        `${API_URL}/api/problem/${patientRecord?.department_id?._id}`,\n      )\n      const problemsData = problemsResponse?.data?.data[0]\n      if (problemsData) {\n        const problemFilter = problemsData.problemName\n          .filter((item) => item.type === 'problem')\n          .map((problem) => problem.name)\n        const scaleFilter = problemsData.problemName\n          .filter((item) => item.type === 'scale')\n          .map((scale) => scale.name)\n        const testFilter = problemsData.problemName\n          .filter((item) => item.type === 'test')\n          .map(({ name, inputType }) => ({ name: name, inputType }))\n        setTests(testFilter)\n        setScales(scaleFilter)\n        setProblems(problemFilter)\n      }\n    } catch (error) {\n      console.error('Error fetching problems:', error)\n    }\n  }\n\n  /////////////////////////////////////START OF HANDLE SUBMIT/////////////////////\n\n  const handleSubmit = async () => {\n    // console.log('updatedFormData', inputs)\n\n    // setSearch('')\n\n    // Check if required fields are filled\n    if (!formData.name || !formData.age || !formData.sex || !formData.phone || !formData.crn) {\n      return toast.warning('Please fill all Patient details')\n    }\n\n    if (inputs.length === 1 && inputs[0].problem === '') {\n      return toast.warning('Please select at least one Chief complaint')\n    }\n    // const filteredInputs = inputs.filter((data) => data.problem !== '')\n    const filteredInputs = inputs\n      .map((data) => ({\n        ...data,\n        test: data.test.filter((test) => test.name !== ''),\n        scale: data.scale.filter((scale) => scale.name !== ''),\n      }))\n      .filter((data) => data.problem !== '')\n    const filterProcedure = procedure.filter((data) => data.name !== '')\n\n    for (const data of filteredInputs) {\n      if (\n        data.test.length > 0 &&\n        data.test.some((test) => test.testInput === '' && test.files.length === 0)\n      ) {\n        toast.warning('Please provide input or upload file(s) for selected test(s)')\n        return\n      }\n\n      if (data.scale.length > 0 && data.scale.some((scale) => scale.value === '')) {\n        toast.warning('Please provide input for selected scale(s)')\n        return\n      }\n    }\n\n    // toast.warning('Uploading Files and Reports')\n    setfileUploadingSpinner(true)\n    try {\n      await Promise.all(\n        filteredInputs.map(async (data, index) => {\n          await Promise.all(\n            data.test.map(async (presentTest, testIndex) => {\n              if (presentTest.files) {\n                const files = presentTest.files\n                if (files.length > 0) {\n                  const formData = new FormData()\n                  files.forEach((file) => {\n                    // Check if the file type is allowed\n                    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n                    if (allowedFileTypes.includes(file.type)) {\n                      formData.append('files', file) // Append each allowed file to the FormData\n                    } else {\n                      console.warn('File type not allowed:', file.type)\n                    }\n                  })\n                  if (formData.has('files')) {\n                    const response = await postFetchFile(\n                      `${API_URL}/api/user/uploadPatientReport`,\n                      formData,\n                    )\n                    if (response) {\n                      setfileUploadingSpinner(false)\n                      filteredInputs[index].test[testIndex].files = response.filesInfo\n                    }\n                  } else {\n                    setfileUploadingSpinner(false)\n                    console.warn('No valid files to upload')\n                  }\n                }\n              } else {\n                filteredInputs[index].test[testIndex].files = null\n                setfileUploadingSpinner(false)\n              }\n            }),\n          )\n        }),\n      )\n    } catch (error) {\n      setfileUploadingSpinner(false)\n      console.error('Error uploading files:', error)\n      return\n    }\n\n    const updatedFormData = {\n      ...formData,\n      diagnosis: [\n        {\n          diagnosData: filteredInputs,\n          procedure: filterProcedure,\n          date: Date(),\n          desc,\n        },\n      ],\n      nextApointmentDate: startingDate,\n    }\n    console.log('final input', updatedFormData)\n\n    try {\n      // console.log('pre', updatedFormData)\\\n      const doctorRecord = await localStorage.getItem('patientRecord')\n      const doctorId = JSON.parse(doctorRecord)?._id\n      // console.log('Guarav', JSON.parse(doctorRecord)?._id)\n      const data = await postFetchData(`${API_URL}/api/patient/create/${doctorId}`, updatedFormData)\n      if (data.success === true) {\n        toast.success('Patient Created Successfully', {\n          autoClose: 2000,\n        })\n        setfileUploadingSpinner(false)\n\n        setaddPatientLoader(true)\n        setData(false)\n\n        // toast.success('Patient Created Successfully')\n        setUpdateState(true)\n        setaddPatientLoader(false)\n        // setDiagnosis([])\n        setDesc('')\n        setStartingDate(null)\n        setInputs([\n          {\n            problem: '',\n            subProblem: '',\n            test: [\n              {\n                name: '',\n                testInput: '',\n                files: [],\n              },\n            ],\n            scale: [\n              {\n                name: '',\n                value: '',\n              },\n            ],\n          },\n        ])\n        setProcedure({\n          name: '',\n          complications: '',\n          doneBy: '',\n          date: dayjs(currentDate),\n        })\n        setFormData({\n          name: '',\n          age: '',\n          sex: 'male',\n          phone: '',\n          crn: `${randomCRN}`,\n          diagnosis: [],\n          desc: '',\n          doctor_id: patientRecord?._id,\n        })\n      }\n      if (data.message === 'phone Already Exists') {\n        toast.warning('phone Already Exists')\n        setfileUploadingSpinner(false)\n      }\n      if (data.message === 'Crn Already Exists') {\n        toast.warning('Crn Already Exists')\n        setfileUploadingSpinner(false)\n      }\n\n      setUpdatedSearch(data?.data?.crn)\n    } catch (error) {\n      toast.warning('Something went wrong')\n      setfileUploadingSpinner(false)\n      console.error('Error submitting data:', error)\n    }\n  }\n\n  /////////////////////////////////////// END OF HANDLE SUBMIT ////////////\n\n  let [removeAndAddInput, setremoveAndAddInput] = useState(false)\n  let [removeAndAddInputProcedure, setremoveAndAddInputProcedure] = useState(false)\n\n  const handleInputChange = (index, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index][name] = value\n    setInputs(updatedInputs)\n  }\n\n  const handleInputChangeProcedure = (index, event) => {\n    const { name, value } = event.target\n    const updatedProcedure = [...procedure]\n    updatedProcedure[index][name] = value\n    setProcedure(updatedProcedure)\n  }\n  const handleInputTestText = (index, testIndex, event) => {\n    const { name, value } = event.target\n    const updatedInputs = [...inputs]\n    updatedInputs[index].test[testIndex][name] = value\n    console.log('guarav', updatedInputs)\n    // setInputs(updatedInputs)\n  }\n\n  const handleFileInputChange = (index, testindex, event) => {\n    const { name, files } = event.target\n    const allowedFileTypes = ['image/jpeg', 'image/png', 'application/pdf']\n    const maxFiles = 3 // Maximum number of files allowed\n\n    // Check if the number of selected files exceeds the limit\n    if (files.length > maxFiles) {\n      event.target.value = '' // Clear the file input\n      toast.warning('You can only upload up to 3 files', { autoClose: 1500 })\n      return\n    }\n\n    const updatedInputs = [...inputs]\n\n    // Convert FileList to array and filter out files that exceed the size limit or are not of allowed types\n    const filesArray = Array.from(files).filter((file) => {\n      if (file.size > 31457280) {\n        toast.warning('File size should be less than 30 MB', { autoClose: 1500 })\n        return false\n      }\n      if (!allowedFileTypes.includes(file.type)) {\n        toast.warning('Only images and PDFs are allowed', { autoClose: 1500 })\n        return false\n      }\n      return true\n    })\n\n    updatedInputs[index].test[testindex].files = filesArray // Store the array of files\n    setInputs(updatedInputs)\n  }\n\n  const handleAddInput = () => {\n    const allInputsHaveProblem = inputs.every((input) => input.problem !== '')\n    if (allInputsHaveProblem) {\n      setInputs([\n        ...inputs,\n        {\n          problem: '',\n          subProblem: '',\n          test: [\n            {\n              name: '',\n              testInput: '',\n              files: [],\n            },\n          ],\n          scale: [\n            {\n              name: '',\n              value: '',\n            },\n          ],\n        },\n      ])\n    } else {\n      toast.warning('Please Fill Details of previous Record before adding new!!', {\n        autoClose: 1500,\n      })\n    }\n  }\n\n  const handleAddInputProcedure = () => {\n    const allInputsHaveProblem = procedure.every((input) => input.name !== '')\n    if (allInputsHaveProblem) {\n      setProcedure([\n        ...procedure,\n        { name: '', complications: '', doneBy: '', date: dayjs(currentDate) },\n      ])\n    } else {\n      toast.warning('Please Fill Details of previous Record before adding new!!', {\n        autoClose: 1500,\n      })\n    }\n  }\n  const handleRemoveInput = (index) => {\n    const updatedInputs = [...inputs]\n    updatedInputs.splice(index, 1)\n    setInputs(updatedInputs)\n  }\n  const handleRemoveInputProcedure = (index) => {\n    const updatedInputs = [...procedure]\n    updatedInputs.splice(index, 1)\n    setProcedure(updatedInputs)\n  }\n\n  useEffect(() => {\n    if (inputs.length > 1) {\n      setremoveAndAddInput(true)\n    } else {\n      setremoveAndAddInput(false)\n    }\n    if (procedure.length > 1) {\n      setremoveAndAddInputProcedure(true)\n    } else {\n      setremoveAndAddInputProcedure(false)\n    }\n  }, [\n    handleRemoveInput,\n    handleAddInput,\n    handleInputChange,\n    handleAddInputProcedure,\n    handleAddInputProcedure,\n    handleInputChangeProcedure,\n  ])\n  useEffect(() => {\n    console.log('Updated inputs:', inputs, procedure)\n  }, [inputs])\n\n  const clearAllDataInputs = () => {\n    setInputs([\n      {\n        problem: '',\n        subProblem: '',\n        test: [\n          {\n            name: '',\n            testInput: '',\n            files: [],\n          },\n        ],\n        scale: [\n          {\n            name: '',\n            value: '',\n          },\n        ],\n      },\n    ])\n    setFormData({\n      name: '',\n      age: '',\n      sex: 'male',\n      phone: '',\n      crn: `${randomCRN}`,\n      diagnosis: [],\n      desc: '',\n      doctor_id: patientRecord?._id,\n    })\n  }\n\n  const handleInputTestChange = (index, testIndex, event) => {\n    const { name, value } = event.target\n    const newInputs = [...inputs]\n    newInputs[index].test[testIndex][name] = value\n    setInputs(newInputs)\n  }\n  const handleAddTestInput = (e, index) => {\n    e.preventDefault()\n    if (inputs[index].test[inputs[index].test.length - 1].name) {\n      const updatedInputs = [...inputs]\n      updatedInputs[index].test.push({\n        name: '',\n        testInput: '',\n        files: [],\n      })\n      setInputs(updatedInputs)\n    } else {\n      toast.warning('Please Enter Previous test field before adding new')\n    }\n  }\n\n  const handleAddScaleInput = (e, index) => {\n    e.preventDefault()\n    if (inputs[index].scale[inputs[index].scale.length - 1].name) {\n      const updatedInputs = [...inputs]\n      updatedInputs[index].scale.push({\n        name: '',\n        value: '',\n      })\n      setInputs(updatedInputs)\n    } else {\n      toast.warning('Please Enter Previous Scale field before adding new')\n    }\n  }\n\n  const handleInputChangeScale = (index, scaleIndex, event) => {\n    const { name, value } = event.target\n    const newInputs = [...inputs]\n    newInputs[index].scale[scaleIndex][name] = value\n    setInputs(newInputs)\n  }\n  const handleRemoveTestInput = (e, index, testIndex) => {\n    e.preventDefault()\n    const updateData = [...inputs]\n    updateData[index].test.splice(testIndex, 1)\n    setInputs(updateData)\n  }\n\n  const handleRemoveScaleInput = (e, index, scaleIndex) => {\n    e.preventDefault()\n    const updateData = [...inputs]\n    updateData[index].scale.splice(scaleIndex, 1)\n    setInputs(updateData)\n  }\n\n  return (\n    <>\n      <div>\n        {fileUploadingSpinner && <SpinnerOverlay loading={fileUploadingSpinner} />}\n        <div className=\"content-to-be-blurred\">\n          <div style={{ marginTop: '1rem' }}>\n            <div>\n              <hr />\n              <h4>Patient Details</h4>\n\n              <div>\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <div>\n                      <label className=\"col-sm-4 mt-2 patientNamediv\">\n                        Name <span style={{ color: 'red' }}>*</span>\n                      </label>\n                      <div className=\"col-sm-8\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control \"\n                          name=\"name\"\n                          value={formData.name}\n                          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div>\n                      <label className=\"col-sm-4 mt-2 patientNamediv\">\n                        Age <span style={{ color: 'red' }}>*</span>\n                      </label>\n                      <div className=\"col-sm-8\">\n                        <input\n                          type=\"number\"\n                          className=\"form-control \"\n                          name=\"age\"\n                          value={formData.age}\n                          onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div>\n                      <label className=\"col-sm-4 mt-2 patientNamediv\">\n                        Sex <span style={{ color: 'red' }}>*</span>\n                      </label>\n                      <div className=\"col-sm-8\">\n                        <select\n                          className=\"form-control \"\n                          name=\"sex\"\n                          value={formData.sex}\n                          onChange={(e) => setFormData({ ...formData, sex: e.target.value })}\n                        >\n                          <option value=\"male\">Male</option>\n                          <option value=\"female\">Female</option>\n                          <option value=\"other\">Other</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row \">\n                  <div className=\"col-md-4 mt-2\">\n                    <div>\n                      <label className=\"col-lg-4 patientNamediv\">\n                        Contact <span style={{ color: 'red' }}>*</span>\n                      </label>\n                      <div className=\" col-lg-8 col-sm-8\">\n                        <input\n                          className=\"form-control \"\n                          type=\"text\"\n                          name=\"phone\"\n                          value={formData.phone}\n                          onChange={(e) => {\n                            if (/^\\d*$/.test(e.target.value) || e.target.value === '') {\n                              setFormData({ ...formData, phone: e.target.value })\n                            }\n                          }}\n                          required={true}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4 mt-2\">\n                    <div>\n                      <label className=\"col-sm-4  patientNamediv\">\n                        CR No <span style={{ color: 'red' }}>*</span>\n                      </label>\n                      <div className=\"col-sm-8\">\n                        <input\n                          className=\"form-control \"\n                          type=\"test\"\n                          name=\"crn\"\n                          value={formData.crn}\n                          onChange={(e) => setFormData({ ...formData, crn: e.target.value })}\n                          required={true}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div className=\"addPatientDataInnerDiv\">\n                <h4>Diagnosis: ({patientRecord?.department_id?.departmentName})</h4>\n              </div>\n              <div>\n                <form className=\"mb-3\">\n                  {inputs.map((input, index) => (\n                    <div key={index} className=\"row mt-1 mb-2\">\n                      <div className=\"col-md-2 col-12\">\n                        <label>\n                          <select\n                            className=\"form-control addPatientDataSelectDiv mb-1\"\n                            // style={{ width: '100%', appearance: 'auto', height: '38px' }}\n                            name=\"problem\"\n                            value={input.problem}\n                            onChange={(event) => handleInputChange(index, event)}\n                          >\n                            <option value=\"\">Chief complaint</option>\n                            {problems.map((problem, problemIndex) => (\n                              <option key={problemIndex} value={problem}>\n                                {problem}\n                              </option>\n                            ))}\n                          </select>\n                        </label>\n                        <label>\n                          <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            placeholder=\"Enter sub problem\"\n                            name=\"subProblem\"\n                            onChange={(event) => handleInputChange(index, event)}\n                          ></input>\n                        </label>\n                      </div>\n                      <div className=\"col-md-4 col-12\">\n                        {input.test.map((testInput, testIndex) => (\n                          <div key={testInput} className=\"d-flex mb-1\">\n                            <div style={{ width: '40%' }}>\n                              <label>\n                                <select\n                                  className=\"form-control addPatientDataSelectDiv\"\n                                  name=\"name\"\n                                  value={testInput.name}\n                                  onChange={(event) =>\n                                    handleInputTestChange(index, testIndex, event)\n                                  }\n                                >\n                                  <option value=\"\">Select Test</option>\n                                  {tests.map((test, testIndex) => (\n                                    <option key={testIndex} value={test.name}>\n                                      {test.name}\n                                    </option>\n                                  ))}\n                                </select>\n                              </label>\n                            </div>\n                            {testInput.name === '' ? (\n                              <div style={{ width: '40%', marginLeft: '4px' }}>\n                                <label>\n                                  <input\n                                    className=\"form-control addPatientDataInputDiv\"\n                                    placeholder=\"Select a Test\"\n                                    type=\"text\"\n                                    disabled=\"true\"\n                                  />\n                                </label>\n                              </div>\n                            ) : (\n                              <div style={{ width: '40%', marginLeft: '4px' }}>\n                                {tests.map((test) => {\n                                  if (test.name === input.test[testIndex].name) {\n                                    if (test.inputType === 'text') {\n                                      return (\n                                        <label key={testIndex}>\n                                          <input\n                                            className=\"form-control\"\n                                            style={{ width: '100%' }}\n                                            placeholder=\"Enter test Value\"\n                                            type=\"text\"\n                                            name=\"testInput\"\n                                            value={input.test[testIndex].text} // Here is the issue\n                                            onChange={(event) =>\n                                              handleInputTestText(index, testIndex, event)\n                                            }\n                                          />\n                                        </label>\n                                      )\n                                    } else if (test.inputType === 'file') {\n                                      return (\n                                        <label key={testIndex}>\n                                          <input\n                                            className=\"form-control\"\n                                            style={{ width: '100%' }}\n                                            type=\"file\"\n                                            multiple\n                                            name=\"files\"\n                                            accept=\"image/jpeg, image/png, application/pdf\"\n                                            onChange={(event) =>\n                                              handleFileInputChange(index, testIndex, event)\n                                            }\n                                          />\n                                        </label>\n                                      )\n                                    }\n                                  }\n                                  return null\n                                })}\n                              </div>\n                            )}\n                            <div style={{ width: '20%', marginLeft: '3px' }}>\n                              {testIndex !== input.test.length - 1 && (\n                                <button\n                                  className=\"btn btn-outline-dark\"\n                                  onClick={(e) => handleRemoveTestInput(e, index, testIndex)}\n                                >\n                                  <CIcon icon={cilMinus} />\n                                </button>\n                              )}\n                              {testIndex === input.test.length - 1 && (\n                                <button\n                                  className=\"btn btn-outline-success\"\n                                  onClick={(e) => handleAddTestInput(e, index)}\n                                >\n                                  <CIcon icon={cilPlus} />\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"col-md-4 col-12 \">\n                        {input.scale.map((scaleInput, scaleIndex) => (\n                          <div key={scaleIndex} className=\"d-flex mb-1\">\n                            <div style={{ width: '40%' }}>\n                              <label>\n                                <select\n                                  className=\"form-control addPatientDataSelectDiv\"\n                                  name=\"name\"\n                                  value={input.scale[scaleIndex].name}\n                                  onChange={(event) =>\n                                    handleInputChangeScale(index, scaleIndex, event)\n                                  }\n                                >\n                                  <option value=\"\">Select Scale</option>\n                                  {scales.map((scale, scaleIndex) => (\n                                    <option key={scaleIndex} value={scale}>\n                                      {scale}\n                                    </option>\n                                  ))}\n                                </select>\n                              </label>\n                            </div>\n                            <div style={{ width: '40%', marginLeft: '3px' }}>\n                              <label>\n                                <input\n                                  className=\"form-control addPatientDataInputDiv\"\n                                  // style={{ width: '100%', appearance: 'auto' }}\n                                  placeholder=\"Enter Scale Value\"\n                                  type=\"text\"\n                                  name=\"value\"\n                                  value={input.scale[scaleIndex].value}\n                                  onChange={(event) =>\n                                    handleInputChangeScale(index, scaleIndex, event)\n                                  }\n                                />\n                              </label>\n                            </div>\n                            <div style={{ width: '20%', marginLeft: '3px' }}>\n                              {scaleIndex !== input.scale.length - 1 && (\n                                <button\n                                  className=\"btn btn-outline-dark\"\n                                  onClick={(e) => handleRemoveScaleInput(e, index, scaleIndex)}\n                                >\n                                  <CIcon icon={cilMinus} />\n                                </button>\n                              )}\n                              {scaleIndex === input.scale.length - 1 && (\n                                <button\n                                  className=\"btn btn-outline-success\"\n                                  onClick={(e) => handleAddScaleInput(e, index)}\n                                >\n                                  <CIcon icon={cilPlus} />\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n\n                      <div className=\"col-md-2 d-flex justify-content-end col-12\">\n                        {removeAndAddInput && (\n                          <button\n                            className=\"btn me-4 mt-1\"\n                            type=\"button\"\n                            onClick={() => handleRemoveInput(index)}\n                          >\n                            <CIcon icon={cilTrash} size=\"xl\" />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"d-flex justify-content-end\">\n                    <button\n                      className=\"btn btn-outline-primary me-4\"\n                      type=\"button\"\n                      onClick={handleAddInput}\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </form>\n              </div>\n              <div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    checked={addProcedureToggle}\n                    onChange={() => setAddProcedureToggle(!addProcedureToggle)}\n                  ></input>\n                  <label> &nbsp;&nbsp;&nbsp;Add Procedure</label>\n                </div>\n                {addProcedureToggle ? (\n                  <>\n                    <form>\n                      {procedure.map((input, index) => (\n                        <div key={index}>\n                          <div>\n                            <div className=\"row\">\n                              <div className=\"col-md-2 col-sm-10 \">\n                                <label>\n                                  <input\n                                    onChange={(event) => handleInputChangeProcedure(index, event)}\n                                    value={input.name}\n                                    name=\"name\"\n                                    className=\"form-control addPatientDataInputDiv\"\n                                    placeholder=\"Procedure Name\"\n                                    type=\"text\"\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 col-sm-10\">\n                                <label>\n                                  <input\n                                    onChange={(event) => handleInputChangeProcedure(index, event)}\n                                    value={input.complications}\n                                    name=\"complications\"\n                                    className=\"form-control addPatientDataInputDiv\"\n                                    placeholder=\"Complications\"\n                                    type=\"text\"\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-2 col-sm-10\">\n                                <label>\n                                  <input\n                                    onChange={(event) => handleInputChangeProcedure(index, event)}\n                                    value={input.doneBy}\n                                    name=\"doneBy\"\n                                    className=\"form-control addPatientDataInputDiv\"\n                                    placeholder=\"Done By\"\n                                    type=\"text\"\n                                  />\n                                </label>\n                              </div>\n                              <div className=\"col-md-4 col-sm-10\">\n                                <div className=\"d-flex\">\n                                  <div className=\"w-auto\">\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                      <DemoContainer components={['DateTimePicker']}>\n                                        <DateTimePicker\n                                          label=\"To\"\n                                          value={input.date}\n                                          // onChange={handleEndDateChange}\n                                          inputFormat=\"YYYY-MM-DD\"\n                                          ampm={false}\n                                          ampmInClock={false}\n                                          views={['year', 'month', 'day']}\n                                          slotProps={{ textField: { size: 'small' } }}\n                                        />\n                                      </DemoContainer>\n                                    </LocalizationProvider>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-md-2 d-flex \">\n                                {removeAndAddInputProcedure && (\n                                  <button\n                                    className=\"btn me-4 mt-1\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveInputProcedure(index)}\n                                  >\n                                    <CIcon icon={cilTrash} size=\"xl\" />\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                      <div className=\"d-flex justify-content-end\">\n                        <button\n                          className=\"btn btn-outline-primary me-4\"\n                          type=\"button\"\n                          onClick={handleAddInputProcedure}\n                        >\n                          Add More\n                        </button>\n                      </div>\n                    </form>\n                  </>\n                ) : (\n                  ''\n                )}\n              </div>\n              <div>\n                <textarea\n                  rows={4}\n                  className=\"form-control col-12\"\n                  placeholder=\"Notes (Optional)\"\n                  name=\"desc\"\n                  value={desc}\n                  onChange={(e) => setDesc(e.target.value)}\n                ></textarea>\n              </div>\n            </div>\n            <div>\n              <div className=\"d-flex mt-2\">\n                <div className=\"w-auto\">\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DemoContainer components={['DateTimePicker']}>\n                      <DateTimePicker\n                        label=\"Next Appointment Date\"\n                        value={startingDate}\n                        onChange={handleStartingDateChange}\n                        // ampm={false}\n                      />\n                    </DemoContainer>\n                  </LocalizationProvider>\n                </div>\n              </div>\n            </div>\n            <div className=\"text-end m-4\">\n              <button className=\"btn btn-info mt-3 mx-2 w-auto\" onClick={handleSubmit}>\n                Submit\n              </button>\n              <button\n                className=\"btn btn-info mt-3 w-auto\"\n                onClick={() => {\n                  setData(false)\n                  clearAllDataInputs()\n                }}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </>\n  )\n}\n\nAddNewPatient.propTypes = {\n  setData: PropTypes.array.isRequired,\n  setUpdatedSearch: PropTypes.array.isRequired,\n  getSearchByPatient: PropTypes.array.isRequired,\n  updatedSearch: PropTypes.array.isRequired,\n}\n\nexport default AddNewPatient\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { getFetch, postFetch, postFetchContent, postFetchData, postFetchFile } from 'src/api/Api'\nimport PatientInfoData from './PatientInfoData'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Loader from '../loader/Loader'\nimport AddPatientLoader from '../loader/AddPatientLoader'\nimport { useLocation } from 'react-router-dom'\n\nimport AddNewPatient from './AddNewPatient'\n\nconst PatientPage = () => {\n  const location = useLocation()\n  // console.log('location', Number(location?.state?.crn))\n  let API_URL = process.env.REACT_APP_API_URL\n  // const API_URL = process.env.API_URL\n  let patientData = localStorage.getItem('patientRecord')\n  let patientRecord = JSON.parse(patientData)\n  const [updateState, setUpdateState] = useState(false)\n  const [loader, setLoader] = useState(false)\n  const [addPatientLoader, setaddPatientLoader] = useState(false)\n  const [data, setData] = useState(false)\n  const [search, setSearch] = useState('')\n  const [patientSearch, setPatientSearch] = useState([])\n  const [queryCRN, setQueryCRN] = useState('')\n  const [updatedSearch, setUpdatedSearch] = useState('')\n  useEffect(() => {\n    setSearch('')\n\n    const queryParams = new URLSearchParams(location.search)\n    const searchParamValue = queryParams.get('crn')\n    if (searchParamValue) {\n      setQueryCRN(searchParamValue)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (queryCRN !== '') {\n      getSearchByPatient()\n    }\n  }, [queryCRN])\n\n  const clearSearch = () => {\n    try {\n      setSearch('')\n      setPatientSearch([])\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSearchByPatient = async (searchCRN) => {\n    try {\n      let searchData = search || location?.state?.crn || queryCRN || searchCRN\n      console.log('This is search ', searchData)\n\n      if (searchData?.length === 0) {\n        return\n      }\n      setLoader(true)\n      const data = await getFetch(`${API_URL}/api/patient/${searchData}`)\n      setPatientSearch(data?.data?.data)\n      setLoader(false)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault()\n      getSearchByPatient()\n    }\n  }\n  // console.log('updatedSearch', updatedSearch)\n  useEffect(() => {\n    if (updatedSearch !== '') {\n      console.log('This is running', updatedSearch)\n      setSearch(updatedSearch)\n      getSearchByPatient(updatedSearch)\n    }\n  }, [updatedSearch])\n\n  useEffect(() => {\n    if (updateState === true) {\n      getSearchByPatient()\n    }\n  }, [updateState])\n\n  // let [dateAndTime, setDateAndTime] = useState(new Date())\n  useEffect(() => {\n    if (location?.state?.crn) {\n      setSearch(location?.state?.crn)\n      getSearchByPatient()\n    }\n  }, [location])\n\n  return (\n    <>\n      <div>\n        {!data && !addPatientLoader ? (\n          <div>\n            <p style={{ fontWeight: 'bolder' }}>Search Patient</p>\n            <div className=\"search-container\">\n              <div className=\"search-input\">\n                <input\n                  style={{ paddingLeft: '5px' }}\n                  className=\"form-control\"\n                  placeholder=\"CR no. or Phone no.\"\n                  type=\"text\"\n                  name=\"search\"\n                  value={search}\n                  onKeyPress={handleKeyPress}\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n                <button\n                  className=\"btn btn-primary searchButton\"\n                  type=\"button\"\n                  onClick={getSearchByPatient}\n                >\n                  Search\n                </button>\n                {search?.length ? (\n                  <button\n                    className=\"btn btn-danger text-light clearButton\"\n                    type=\"button\"\n                    onClick={clearSearch}\n                  >\n                    Clear\n                  </button>\n                ) : null}\n              </div>\n              <div className=\"add-patient-btn\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    clearSearch()\n                    setData(true)\n                  }}\n                  className=\"btn btn-outline-dark\"\n                >\n                  Add a Patient\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {patientSearch?.length && !data && !addPatientLoader ? (\n          <PatientInfoData\n            patientSearch={patientSearch}\n            setData={setData}\n            getSearchByPatient={getSearchByPatient}\n          />\n        ) : (\n          <div>\n            {data ? (\n              <AddNewPatient\n                setData={setData}\n                setUpdatedSearch={setUpdatedSearch}\n                updatedSearch={updatedSearch}\n                getSearchByPatient={getSearchByPatient}\n              />\n            ) : (\n              <div>\n                {!addPatientLoader ? (\n                  <div className=\"loaderDivInPatientPage\">{loader ? <Loader /> : 'No Data'}</div>\n                ) : (\n                  ''\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {addPatientLoader ? <AddPatientLoader /> : ''}\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default PatientPage\n","export var cilMinus = [\"512 512\", \"<rect width='368' height='32' x='72' y='240' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n","export var cilPlus = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"];\n","export var cilTrash = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"];\n"],"names":["_ref","diagnosis","reversedDiagnosis","setReversedDiagnosis","useState","loading","setLoading","requestedFileLoading","setRequestedFileLoading","useEffect","Array","isArray","reversed","reverse","hoveredFile","setHoveredFile","_jsxs","style","maxHeight","marginTop","children","map","elem","index","_elem$diagnosData","formattedDate","Date","date","toLocaleDateString","year","month","day","hour","minute","hour12","replace","margin","_jsx","className","overflowX","overflow","width","border","fontFamily","borderRadius","scope","background","diagnosData","element","innerIndex","problem","subProblem","scale","test","console","log","_Fragment","SpinnerOverlay","message","fontWeight","testData","testIndex","_testData$files","name","paddingRight","padding","testInput","display","files","file","fileIndex","value","fileName","alignItems","marginRight","onMouseEnter","editedName","parts","split","length","slice","join","editNameFun","onMouseLeave","onClick","async","filename","response","axios","get","concat","process","responseType","blob","Blob","data","type","headers","blobUrl","URL","createObjectURL","window","open","error","showReportHandler","title","CIcon","icon","cilDataTransferDown","scaleData","scaleIndex","wordWrap","procedure","colSpan","procedureData","procedureIndex","complications","doneBy","desc","cilPlus","size","ToastContainer","_diagnosisProp$","_diagnosisProp$$diagn","_diagnosisProp$2","_diagnosisProp$2$diag","_diagnosisProp$3","_diagnosisProp$3$diag","_diagnosisProp$4","_diagnosisProp$4$diag","_patientRecord$depart2","_id","getSearchByPatient","setIsAddNewDiagnosis","setIsDetailed","diagnosisProp","API_URL","patientData","localStorage","getItem","patientRecord","JSON","parse","currentDate","inputs","setInputs","setProcedure","dayjs","lastDiagnosis","setLastDiagnosis","addProcedureToggle","setAddProcedureToggle","removeAndAddInputProcedure","setremoveAndAddInputProcedure","_diagnosisProp$5","_diagnosisProp$5$diag","_diagnosisProp$6","_diagnosisProp$6$diag","lastRecords","startingDate","setStartingDate","React","patientById","setPatientById","setDesc","formData","setFormData","setDiagnosis","fileUploadingSpinner","setfileUploadingSpinner","problems","setProblems","tests","setTests","scales","setScales","fetchProblems","_patientRecord$depart","_problemsResponse$dat","problemsResponse","getFetch","department_id","problemsData","problemFilter","problemName","filter","item","scaleFilter","testFilter","_ref2","inputType","prevFormData","getPatientById","removeAndAddInput","setremoveAndAddInput","handleInputChange","event","target","updatedInputs","handleAddInput","every","input","toast","warning","autoClose","handleRemoveInput","splice","handleInputChangeScale","newInputs","handleInputChangeProcedure","updatedProcedure","handleAddInputProcedure","departmentName","onSubmit","e","preventDefault","filteredInputs","filterProcedure","some","Promise","all","presentTest","FormData","forEach","includes","append","warn","has","postFetchFile","filesInfo","updatedFormData","nextApointmentDate","putFetchData","success","onChange","problemIndex","placeholder","handleInputTestChange","marginLeft","disabled","text","handleInputTestText","multiple","accept","handleFileInputChange","testindex","allowedFileTypes","filesArray","from","handleRemoveTestInput","updateData","cilMinus","handleAddTestInput","push","scaleInput","handleRemoveScaleInput","handleAddScaleInput","cilTrash","checked","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","label","inputFormat","ampm","ampmInClock","views","slotProps","textField","handleRemoveInputProcedure","rows","patientSearch","isAddNewDiagnosis","isDetails","selectedPatientId","setSelectedPatientId","addDiagnosisPatientId","setAddDiagnosisPatientId","handleToggleDetails","patientId","prevState","handleAddDiagnosis","isSmallScreen","setIsSmallScreen","handleResize","innerWidth","addEventListener","removeEventListener","patient","crn","phone","age","sex","isDetailsOpen","isAddDiagnosisOpen","toLocaleString","marginBottom","PatientShowDetails","PatientAddNewRecord","fontSize","whiteSpace","AddPatientLoader","Box","height","lineHeight","textAlign","CircularProgress","setData","setUpdatedSearch","updatedSearch","useLocation","updateState","setUpdateState","loader","setLoader","addPatientLoader","setaddPatientLoader","queryCRN","setQueryCRN","randomCRN","Math","floor","random","doctor_id","color","required","_JSON$parse","_data$data","doctorRecord","doctorId","postFetchData","PatientPage","location","search","setSearch","setPatientSearch","searchParamValue","URLSearchParams","clearSearch","_location$state","searchData","state","searchCRN","_location$state2","_location$state3","paddingLeft","onKeyPress","key","AddNewPatient","Loader","PatientInfoData"],"sourceRoot":""}